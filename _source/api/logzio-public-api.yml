---
layout: none
---

swagger: '2.0'
schemes: [ https ]
host: api.logz.io
x-servers:
{%- for region in site.data.logzio-regions %}
  - url: https://api
  {%- if region.suffix -%}
    -{{region.suffix}}
  {%- endif -%}
  .logz.io/
    description: {{region.title}}
{% endfor -%}
basePath: /
produces: [ application/json ]
consumes: [ application/json ]
info:
  description: >-
    # Introduction

    This API is documented using the **OpenAPI 2.0** specification.


    <!-- You can browse the API documentation on this page, or you can download the specification file. -->

    # Account region and API URL

    To find your account region, sign in to Logz.io and look at the URL in the address bar.
    Your API URL has the same two-letter code that you see in the address bar when you're logged in.


    For more information, see [Account region](https://docs.logz.io/user-guide/accounts/account-region.html).


    # Authentication

    The Logz.io API is available to Pro and Enterprise plan subscribers.
    You can generate and delete API tokens in your [Logz.io account](https://app.logz.io/#/dashboard/settings/manage-tokens/api).

    <!-- ReDoc-Inject: <security-definitions> -->


    # Rate limiting

    API call and response rates are limited to 100 concurrent API requests per account.
    To verify your rate limits or request changes to your plan, please contact your account manager or the <a class="intercom-launch" href="mailto:help@logz.io">Customer Success Team</a>.


  title: Logz.io API
  termsOfService: 'https://logz.io/about-us/terms-of-use/'
  contact:
    email: help@logz.io
    url: https://docs.logz.io/
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'

securityDefinitions:
  X-API-TOKEN:
    description: >-
      You can manage your API tokens from the [Logz.io API tokens](https://app.logz.io/#/dashboard/settings/manage-tokens/api) page.


      API tokens are account-specific. You will need to be logged into the relevant Log Management or SIEM account to view the API tokens associated with it.


      To manage your API tokens, log into the relevant account in your Logz.io platform, click the gear in the top-right menu, and select [**Tools > Manage tokens > API tokens**](https://app.logz.io/#/dashboard/settings/manage-tokens/api).


      It's important to keep your tokens secure. API tokens carry privileges to make changes to users and accounts, so if you believe an API token has been compromised, delete it, and replace it with a new token in your integrations.
    type: apiKey
    in: header
    name: X-API-TOKEN
security:
  - X-API-TOKEN: []

tags:
  - name: Metrics gateway
    description: Metrics API Gateway to supported endpoints. In the context of this API, "*Grafana*" refers to the Logz.io fork of Grafana, thus this gateway provides support for the APIs of the Logz.io fork of Grafana and for some of the open source Grafana APIs. Read more about the fork created by Logz.io [here.](https://logz.io/about-us/forked-statement/)

  - name: Who am I
  - name: Manage time-based log accounts
    description: >-
      Use these API requests to manage time-based log accounts:
      
      * Create, update, or delete a sub account.

      * Allocate daily capacity to the main account and/or sub accounts.
      
      * Retrieve account activity stats and/or account configuration details.


      ### Flexible storage & shared volume
        
      Flexible storage and shared volume allow accounts to share indexing capacity.
      
      
      To enable shared volume, go to the [Manage accounts page](https://app.logz.io/#/dashboard/settings/manage-accounts) in the Logz.io app and toggle the button **Use flexible volume** to turn it on.
      
      
      To determine whether flexible storage is enabled, run a `Get` request to retrieve account details.
      
      * If `isFlexible` is true, flexible storage is enabled and every account has reserved capacity set by the parameter `reservedDailyGB`.
      
      * If false, flexible storage is disabled and the parameter `reservedDailyGB` is null.
  - name: Search logs
    description: >-
      Use the Elasticsearch Search API DSL query language to search your Logz.io data.


      To ensure system performance and data availability, we've introduced some limitations to the original Elasticsearch specification. These limitations are detailed in the applicable API calls below.
  
  - name: Deployments
    description: >-
      Send deployment logs by API to automatically correlate exceptions with service deployments directly in your Logz.io Exceptions tab. The API endpoints documented here are in Beta, and are subject to change.

  - name: Insights
    description: >-
      Logz.io monitors your logs for Insights to help you preempt issues and alert you of potential problems.


      There are two types of Insights:

      * LOGCEPTION - Application errors and exceptions identified in the stack trace.

      * PUBLIC_CI - Cognitive Insights correlate your logs with  vulnerabilities and issues that are trending in the open source community.


      You have the option to set up an alert so you can get notified of the details when new or recurring insights are spotted in your system.


      **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
  - name: Retrieve audit trail
  - name: Connect to CloudTrail
    description: Establish a connection to ship logs to the Logz.io observability platform via an S3 bucket. Supports CloudTrail logs.
  - name: Connect to S3 Buckets
    description: >-
      Establish a connection for the Logz.io fetcher to fetch logs to the Logz.io observability platform via an S3 bucket. Supports ELB, S3 Access, CloudFront, VPC Flow logs.


      If you're looking to fetch CloudTrail logs, use the designated endpoints.


      Authentication can be established with either S3 secret credentials or ARNs (for AWS IAM Roles). Authentication with S3 Secret Credentials is supported for backward compatibility. Authentication with ARNs (for IAM Roles) is strongly recommended.
  - name: Manage notification endpoints
    description: >-
      Logz.io can send notifications to your preferred workspaces, such as Opsgenie, BigPanda, PagerDuty, and Slack.


      Notifications are typically sent when alerts are triggered, when a user shares a Kibana object,
      or when Logz.io Insights identifies new exceptions in your logs.


      Use these API endpoints to create, update, or delete notification endpoints. If you configure a custom endpoint,
      you can configure the notification message body.
      Otherwise, you can use any of the available preconfigured endpoints.
  - name: Import or export Kibana objects
  - name: Manage log shipping tokens
    description: >-
      Use these API endpoints to create, update, retrieve, or delete log shipping tokens.
  - name: Drop filters
    description: >-
      Drop filters provide a solution for filtering out logs before they are indexed in your account to help lower costs and reduce account volume.


      Drop filters evaluate logs for exact field:value matches. Any log results that match active drop filters will not be indexed. This means they will not appear in your Kibana account, will not be searchable, trigger alerts, or appear in dashboards.


      Archiving is not affected by drop filters. Logs dropped by drop filters will still be archived, if archiving is configured for the account. With archiving configured, you can readily use drop filters to reduce logging bulk and restore the logs in the event that they become relevant.
  - name: Manage shared tokens
    description: >-
      You can share Kibana visualization and dashboard snapshots using shared tokens.
      Token filters are available to help you control what data to expose.


      **Note:** Shared token endpoints require permissions that must be set by our Support team. Please email help@logz.io for assistance.
  - name: Manage API tokens
    description: >-
      You can manage API tokens for sub accounts.
  - name: Logz.io snapshots
  - name: Manage users
  - name: Alerts
    description: >-
      Logz.io alerts use a Kibana search query to continuously scan your logs and alert you when a certain set of conditions is met. The simplest alerts can use a simple search query or a particular filter, but others can be quite complex and involve several conditions with varying thresholds.


      When alerts trigger, they write event logs. Event logs of triggered alerts are always available and searchable in Kibana - just filter for `_exists_:logzio-alert`. But you also have the option to add notifications, and control their contents, format, and who they are sent to.


      For the deprecated alerting version, please see our [public GitHub project](https://github.com/logzio/public-api/tree/master/alerts).
  - name: Security rules
    description: >-
      Security rules help you connect the dots between your data sources and events that could indicate a security threat or breach.


      Your Cloud SIEM account comes pre-configured with security rules for different attack types and security use cases. These built-in rules are protected, and there are limitations on the changes that can be made to them. Pre-configured rules can be updated by adding notification endpoints (like email or Slack), changing trigger thresholds and severities, and adding tags, as described in detail in the endpoint.


      You can also create new security rules to supplement the built-in rules.
  - name: Security events
    description: >-
      A security event is logged whenever a security rule triggers in your [Logz.io Cloud SIEM account](https://app.logz.io/#/dashboard/security/rules/rule-definitions?from=0&sortBy=updatedAt&sortOrder=DESC).


      Your Logz.io Cloud SIEM is pre-loaded with hundreds of security rules created and maintained by Logz.io's security analysts. The list continues to be expanded and updated on a regular basis. You can also add your own security rules.


      To investigate into security events, you can begin by running a bulk query to fetch security event logs, either with or without applying filtering criteria. This query returns all of the events that match the query parameters and can potentially fetch events going back many months. Whenever you encounter a particular event you would like to further investigate, you can run the drilldown query to fetch the logs that triggered the security event to delve deeper into the event details.


      These queries can be used to integrate with an automated response solution such as Cortex xSOAR or simply to understand your security posture and identify suspicious activity in your accounts.
  - name: Archive logs
    description: >-
      You can archive logs to an AWS S3 bucket or Azure Blob Storage. Archiving gives you the option to restore logs and query them after they have expired from your time-based account.


      You can use the following endpoints to retrieve, set up, test, and update an account's archive settings.


      Note: Logs are archived before they are indexed and analyzed by Logz.io. If you are using drop filters, note that dropped logs will still be archived.
  - name: Restore logs
    description: >-
      You can restore data from your active archiving account, whether an AWS S3 bucket or Azure Blob Storage. Restoring data gives you the option to query logs after they have expired from your time-based account.


      You can use the following endpoints to initiate a new restore process, retrieve, set up, test, and update an account's archive settings.


      Note: Logs that are dropped by drop filters are still archived and can be restored. You can temporarily disable drop filters to restore the data.
  - name: Lookups
    description: >-
      Lookups are custom lists of values that allow you to easily filter by large lists in Kibana.

      
      Instead of adding a long list of elements to your query, you can create lookup lists and filter by them using the operators `in lookups`/`not in lookups`.
      
      
      For this purpose, all of the values in a lookup list should be mapped to the same field in Kibana. [Learn more in the user guide](/user-guide/lookups/)

x-tagGroups:
  - name: Log Monitoring
    tags:
      - Search logs
      - Alerts
      - Deployments
      - Insights
      - Logz.io snapshots
  - name: Cloud SIEM
    tags:
      - Security rules
      - Security events
      - Lookup lists
  - name: Account administration
    tags:
      - Manage users
      - Who am I
      - Manage time-based log accounts
      - Manage shared tokens
      - Manage API tokens
      - Manage notification endpoints
      - Import or export Kibana objects
  - name: Manage data shipping
    tags:
      - Manage log shipping tokens
      - Drop filters
      - Archive logs
      - Restore logs
  - name: Data security
    tags:
      - Retrieve audit trail
  - name: Connect to AWS resources
    tags:
      - Connect to CloudTrail
      - Connect to S3 Buckets
  - name: Metrics API Gateway
    tags:
      - Metrics gateway
    description: Metrics API Gateway to supported endpoints.

paths:
  # ::::: GRAFANA
  /v1/grafana/api/{GRAFANA_API_URL}:
    get:
      summary: Metrics API Capabilities
      description: >-
        Prepend your Logz.io API Gateway to the relevant Metrics API endpoint.


        Supported endpoints:
          * [Alerting](https://grafana.com/docs/grafana/latest/http_api/alerting/)
          * [Annotations](https://grafana.com/docs/grafana/latest/http_api/annotations/)
          * [Dashboard](https://grafana.com/docs/grafana/latest/http_api/dashboard/)
          * [Dashboard versions](https://grafana.com/docs/grafana/latest/http_api/dashboard_versions/)
          * [Folder/dashboard search](https://grafana.com/docs/grafana/latest/http_api/folder_dashboard_search/)
          * [Snapshot](https://grafana.com/docs/grafana/latest/http_api/snapshot/)

        **Note:** Run these endpoints with an API token belonging to the main Log Management account associated with your Metrics account.
      tags:
        - Metrics gateway
      operationId: metricsGateway
      produces:
        - application/json
      parameters:


  # ::::: ACCOUNTS
  /v1/account-management/whoami:
    get:
      summary: Retrieve this account
      description: Returns a single string with the account name. Good for testing or for confirming that you're using an API token from the right account.
      tags:
        - Who am I
      operationId: whoAmI
      produces:
        - application/json
      parameters:
      x-code-samples:
      - lang: cURL
        source: >-
          "curl -X GET \
          https://api.logz.io/v1/account-management/whoami \
          -H 'Content-Type: application/json' \
          -H 'X-API-TOKEN: <token>'"
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/WhoAmI'
  /v1/account-management/time-based-accounts:
    get:
      summary: Retrieve settings for all accounts
      description: >-
        
        Returns account settings for the main account and all of its associated sub accounts.
        

        * The list of accounts is returned as an array of JSON objects.
        
        * Must be run with an API token from the main account.
      tags:
        - Manage time-based log accounts
      operationId: getAll
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/TimeBasedAccount'
      x-code-samples:
      - lang: cURL
        source: 'curl --request GET --url "https://api.logz.io/v1/account-management/time-based-accounts" --header "X-API-TOKEN: <token>"'
    post:
      summary: Create a sub account
      description: >-
        Creates a new logging sub account. Must be run with an API token from the main account.
      tags:
        - Manage time-based log accounts
      operationId: createTimeBasedAccount
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/TimeBasedAccountCreateRequest'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/TimeBasedAccountCreationResponse'
      x-code-samples:
      - lang: cURL
        source: >-
          curl -X POST \
            "https://api.logz.io/v1/account-management/time-based-accounts" \
            -H "accept: application/json" -H "content-type: application/json" \
            -H "X-API-TOKEN: <token>" \
            -d '{
            "email": "help@logz.io",
            "accountName": "AWS Lambda svr 3",
            "maxDailyGB": 5,
            "reservedDailyGB": 3,
            "isFlexible": true,
            "retentionDays": 5,
            "searchable": true,
            "accessible": false,
            "sharingObjectsAccounts": [
              48672,
              36259
            ],
            "docSizeSetting": true,
            "utilizationSettings": {
              "frequencyMinutes": 5,
              "utilizationEnabled": true
            }
            }'


  /v1/account-management/time-based-accounts/{id}:
    get:
      summary: Retrieve account settings by ID
      description: Returns account configuration settings as a JSON object. Must be run with an API token from the main account.
      tags:
        - Manage time-based log accounts
      operationId: get
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the account to retrieve
          x-example: 99999
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/TimeBasedAccount'
      x-code-samples:
      - lang: cURL
        source: 'curl -X GET "https://api.logz.io/v1/account-management/time-based-accounts/99999" -H "accept: application/json" -H "content-type: application/json" -H "X-API-TOKEN: <token>"'
    put:
      summary: Update an account
      description: >-
        Updates the account settings of a main account or sub account, with some exceptions, noted below:


        * For the main account, the parameter `retentionDays` cannot be updated. It is determined by the plan you purchased.

        * For the main account, if `isFlexible=false`, the parameters `maxDailyGB` and `reservedDailyGB` cannot be updated using this endpoint.

      tags:
        - Manage time-based log accounts
      operationId: updateTimeBasedAccount
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the account to update
          x-example: 99999
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/TimeBasedAccountUpdateRequest'
      responses:
        204:
          description: successful operation
      x-code-samples:
      - lang: cURL
        source: >-
          curl -X PUT \
          "https://api.logz.io/v1/account-management/time-based-accounts/88888" \
          -H "accept: application/json" -H "content-type: application/json" \
          -H "X-API-TOKEN: <token>" \
          -d "{
            \"accountName\": \"AWS Lambda svr 3\",
            \"maxDailyGB\": 5,
            "reservedDailyGB\": 3,
            \"retentionDays\": 5,
            \"searchable\": true,
            \"accessible\": false,
            \"sharingObjectsAccounts\": [
                55555
            ],
            \"docSizeSetting\": true,
            \"utilizationSettings\": {
              \"frequencyMinutes\": 5,
              \"utilizationEnabled\": true
            }
          }"
    delete:
      summary: Delete a sub account
      description: Deletes a sub account by its account ID. Must be run with an API token from the main account.
      tags:
        - Manage time-based log accounts
      operationId: deleteTimeBasedAccount
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the account to be deleted.
          x-example: 99999
      responses:
        204:
          description: successful operation
      x-code-samples:
        - lang: cURL
          source: 'curl -X DELETE "https://api.logz.io/v1/account-management/time-based-accounts/88888" -H "accept: application/json" -H "content-type: application/json" -H "X-API-TOKEN: <token>"'
  /v1/account-management/time-based-accounts/detailed:
    get:
      summary: Retrieve detailed information for all accounts
      description: >-
        Returns detailed account information for the main account and all of its associated sub accounts. Information includes usage and sharing permissions for Kibana objects.

        * The list of accounts is returned as an array of JSON objects. Each sub account is its own object.
        
        * Must be run with an API token from the main account.
      tags:
        - Manage time-based log accounts
      operationId: getAllDetailedTimeBasedAccount
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/DetailedTimeBasedAccount'
      x-code-samples:
      - lang: cURL
        source: 'curl -X GET "https://api.logz.io/v1/account-management/time-based-accounts/detailed" -H "accept: application/json" -H "content-type: application/json" -H "X-API-TOKEN: <token>"'
  /v1/account-management/time-based-accounts/detailed/{id}:
    get:
      summary: Retrieve detailed account information by account ID
      description: Returns detailed account information. Must be run with an API token from the main account.
      tags:
        - Manage time-based log accounts
      operationId: getDetailedTimeBasedAccount
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the account to retrieve
          x-example: 99999
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/DetailedTimeBasedAccount'
      x-code-samples:
      - lang: cURL
        source: 'curl -X GET "https://api.logz.io/v1/account-management/time-based-accounts/detailed/99999" -H "accept: application/json" -H "content-type: application/json" -H "X-API-TOKEN: <token>"'



  # ::::: SEARCH, SCROLL
  /v1/search:
    post:
      operationId: search
      summary: Search logs
      description: >-
        Searches your account data using the [Elasticsearch Search API DSL](https://www.elastic.co/guide/en/elasticsearch/reference/6.8/search.html) query language. 
        
        
        **Maximum results:** This call returns up to 10,000 results per query for aggregated results, or 1,000 results for non-aggregated results. 


        **Note:** To ensure speed and availability of your logs, we restrict some options from the Elasticsearch defaults that could hamper system performance. Restrictions are described with their respective elements below.
      tags:
        - Search logs
      parameters:
        - in: query
          name: dayOffset
          type: integer
          schema:
            description: >-
              Slide the 2-day search time range by _x_ days.
              For example, if set to `5`, search returns results from 5 days ago and 4 days ago, UTC.


              Maximum is your account's retention period.


              If set to `0` or `1`, search returns default results (today and yesterday, UTC).
            minimum: 0
        - in: query
          name: accountIds
          type: integer
          schema:
            description: >-
              ID of the sub account to search.
              By default, only this account is searched.


              A main account can search a sub account as long as it has the right permissions.
              To give search permissions to the main account,
              log in to the main account,
              go to the [Manage accounts](https://app.logz.io/#/dashboard/settings/manage-accounts) page,
              and select **Searchable from the main account** for the intended sub account.


              To include multiple accounts, repeat this parameter for each account
              (for example: `accountIds=500&accountIds=600`).


              **Important**:
              If you include an account without the right permissions,
              the request will fail.


              If you include this parameter, the current account won't be searched
              unless you explicitly include it in the query.
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - query
            properties:
              query:
                type: object
                description: >-
                  The query can take any of the parameters described in the [Elasticsearch Search API DSL documentation](https://www.elastic.co/guide/en/elasticsearch/reference/6.8/search.html) with the exceptions stated below.

                  #### Limitations

                  * When using `query_string`, `allow_leading_wildcard` must be set to `false`

                  * `wildcard` can't start with `*` or `?`

                  * Can't contain `fuzzy_max_expansions`, `max_expansions`, or `max_determinized_states`


                  #### Notes on the search time range

                  * By default, your query runs on data sent today and yesterday, UTC.
                    You can move this 2-calendar-day window by using the `dayOffset` query parameter.

                  * Searches without a `timestamp` filter will return 2 calendar days, UTC.
                    To search a different time frame, specify a filter on `timestamp`.

                example: { "bool": { "must": [{ "range": { "@timestamp": { "gte": "now-5m", "lte": "now" } } }] } }
              from:
                type: integer
                minimum: 0
                default: 0
                description: Of the results found, the first result to return
                example: 0
              size:
                type: integer
                description: Number of results to return
                default: 10
                maximum: 10,000
                example: 0
              sort:
                type: array
                description: >-
                  #### Limitations

                  * Can't sort or aggregate on analyzed fields, such as the `message` field
                items:
                  type: object
              _source:
                type: object
                description: >-
                  The object `includes` specifies an array of strings specifying an array of fields to return.

                  * If you omit `_source` from the request, all fields are returned.

                  * If you pass `'_source': false`, it will exclude the `_source` field from the results.
                properties:
                  includes:
                    type: array
                    description: Array of fields to return
                    example: ["message"]
                items:
                  - type: string
                    description: Field to return.
                example: false
              post_filter:
                type: object
                description: A filter applied after the aggregations have been calculated. Useful for reusing a single query to calculate several outputs with different filtering criteria. See the [Elasticsearch guide](https://www.elastic.co/guide/en/elasticsearch/reference/6.8/search-request-post-filter.html) for details.
                example: null
              docvalue_fields:
                type: array
                description: Powers inverted indexing. Allows queries to look up the search term in unique sorted list of terms, for faster access to the list of documents that contain the term. See the [Elasticsearch guide](https://www.elastic.co/guide/en/elasticsearch/reference/6.8/search-request-docvalue-fields.html) for details.
                items:
                  type: object
                example: []
              version:
                type: boolean
                description: Returns a version for each result. See the [Elasticsearch guide](https://www.elastic.co/guide/en/elasticsearch/reference/6.8/search-request-version.html) for details.
              stored_fields:
                type: array of strings
                description: Useful for querying for fields that don’t appear in the _source field or querying for larger documents by date or title. See the [Elasticsearch guide](https://www.elastic.co/guide/en/elasticsearch/reference/6.8/search-request-stored-fields.html) for details.
                example: ["*"]
              highlight:
                type: object
                description: Highlight strings in one or more fields in your search results. See the [Elasticsearch guide](https://www.elastic.co/guide/en/elasticsearch/reference/6.8/search-request-highlighting.html) for details.
              aggregations:
                type: object
                description: >-
                  Apply field aggregations. See the [Elasticsearch guide](https://www.elastic.co/guide/en/elasticsearch/reference/6.8/search-aggregations.html) for details.


                  #### Limitations

                  * When using the `size` element, the value must be ≤ `1000`

                  * Can't nest 2 or more bucket aggregations of these types: `date_histogram`, `geohash_grid`, `histogram`, `ip_ranges`, `significant_terms`, `terms`

                  * Can't sort or aggregate on analyzed fields, such as the `message` field

                  * Aggregation type `significant_terms` can't be used


                  **Note:** You can use `aggs` or `aggregations` as the field name
                example: { "byType": { "terms": { "field": "type", "size": 5 } } }
      x-code-samples:
        - lang: cURL
          source: >-
            curl -X POST https://api.logz.io/v1/search \
              -H 'Content-Type: application/json' \
              -H 'X-API-TOKEN: <token>' \
              -d '{
              "query": {
                "bool": {
                  "must": [{
                    "range": {
                      "@timestamp": {
                        "gte": "now-5m",
                        "lte": "now"
                      }
                    }
                  }]
                }
              },
              "from": 0,
              "size": 0,
              "sort": [{}],
              "_source": false,
              "post_filter": null,
              "docvalue_fields": [],
              "version": false,
              "stored_fields": ["*"],
              "highlight": {},
              "aggs": {
                "byType": {
                  "terms": {
                    "field": "type",
                    "size": 5
                  }
                }
              }
            }'
      responses:
        200:
          description: successful query
          schema:
            type: object
            example: >-
              {
                "hits": {
                  "total": 339604,
                  "max_score": 0.0,
                  "hits": [ ]
                },
                "aggregations": {
                  "byType": {
                    "doc_count_error_upper_bound": 0,
                    "sum_other_doc_count": 44879,
                    "buckets": [
                      {
                        "key": "web-app",
                        "doc_count": 163690
                      }, {
                        "key": "core-service",
                        "doc_count": 64893
                      }
                    ]
                  }
                }
              }

  /v1/scroll:
    post:
      summary: Scroll logs
      tags:
        - Search logs
      description: >-
        This endpoint can take 2 types of call requests. The first type runs a search query that returns a `scrollID` and the first batch of paginated results. The second request type passes only the `scroll_id`
        (The variation in the field name is intentional) to fetch the next batches of paginated results.
        This endpoint always returns results as a stringified JSON.


        How it works:


        First, send a request to establish the `scrollID`. This initial request contains the query object and additional parameters, similar to the `v1/search` endpoint, with the exception that `dayOffset` and `accountIds` are not supported. The request will return the field `scrollId` and the number of `hits`, representing the number of matching results.


        Next, send the `scroll_id` in the request body to retrieve the log results as a stringified JSON. Each call returns the next page, where each page can return a maximum of 1000 results. Every time you resend the same `scroll_id` in the request body, it returns the next page until it reaches the end of the results.
        
        
        Every time you send the request with the same `scroll_id`, the next batch of results is returned.
        Keep sending the same scroll ID as many times as needed to retrieve all of the available results.
        The results are paginated, and every request returns the next page, one at a time.


        When the call returns an empty array, you'll know you've reached the end of your results.


        **Note**:


        * Send the field `scroll_id` in requests (snake_case).

        * Receive the field `scrollID` in your responses (camelCase).
      operationId: scroll
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/ScrollRequest'
      x-code-samples:
        - lang: cURL
          source: >-
            curl -X POST https://api.logz.io/v1/scroll \
              -H 'Content-Type: application/json' \
              -H 'X-API-TOKEN: <token>' \
              -d '{
              "size": 10,
              "query": {
                "bool": {
                  "must": [{
                    "range": {
                      "@timestamp": {
                        "gte": "now-5m",
                        "lte": "now"
                      }
                    }
                  }]
                }
              },
              "aggs": {
                "byType": {
                  "terms": {
                    "field": "type",
                    "size": 5
                  }
                }
              }
            }'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ScrollResponse'

  # ::::: Archive
  /v2/archive/settings:
    get:
      summary: Retrieve archiving settings
      description: >-
        Gets the current archive settings for a time-based log account.


        Note that only one archive can be active per account.
      tags:
        - Archive logs
      operationId: getSettingsForAccount
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ArchiveSettingsResponse'
    post:
      summary: Set up archiving
      description: Configure archiving for a time-based log account. One archive can be configured per account (or sub account).
      tags:
        - Archive logs
      operationId: createSettings
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/ArchiveSettings'
      responses:
        default:
          description: successful operation
  /v2/archive/settings/test:
    post:
      summary: Test archive settings
      description: Tests the settings and returns the status code to confirm that a connection with the provider was established.
      tags:
        - Archive logs
      operationId: testSettings
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/TestStorageRequest'
      responses:
        default:
          description: successful operation
  /v2/archive/settings/{id}:
    get:
      summary: Retrieve archive settings
      description: Retrieves an archiving settings by the ID of the settings.
      tags:
        - Archive logs
      operationId: getSettings
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the archive settings.
          example: 33
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ArchiveSettingsResponse'
          headers: {}
    put:
      summary: Update archive settings
      description: >-
        Updates the archiving settings for a time-based log account. (The API token identifies the account.)


        You can use this endpoint to:

        * Switch archive settings between AWS and Azure Blob Storage or vice versa.

        * Update credentials.

        * Switch your AWS authentication method between credential keys and IAM roles.


        Note that only one archive can be active per account.
      tags:
        - Archive logs
      operationId: updateSettings
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the archive settings.
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/ArchiveSettings'
      responses:
        default:
          description: successful operation
    delete:
      summary: Delete archive settings
      description: Deletes the archiving settings for a time-based log account.
      tags:
        - Archive logs
      operationId: deleteSettings
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the archive settings.
      responses:
        default:
          description: successful operation


  # ::::: Restore
  /archive/restore:
    get:
      summary: Retrieve all restore operations
      description: Returns a complete history of all restore operations initiated for the account.
      tags:
          - Restore logs
      operationId: getRestoreRequestsForAccountApi
      consumes:
          - application/json
      produces:
          - application/json
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/RestoreApiResponse'
          headers: {}
    post:
      summary: Initiate restore operation
      description: Initiates a new operation to restore data from a specific time frame. (As a result, also triggers the creation of a temporary restored account in Logz.io to hold the restored data until its automatic expiration.)
      tags:
        - Restore logs
      operationId: createRestore
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/RestoreApiRequest'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/RestoreApiResponse'
          headers: {}
  /archive/restore/{id}:
    get:
      summary: Get an update on a restore operation
      description: Returns the status of a specific restore operation by its ID.
      tags:
        - Restore logs
      operationId: getRestoreRequestByIdApi
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the restore process
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/RestoreApiResponse'
          headers: {}
    delete:
      summary: Delete a restore operation
      description: Aborts a restore process before its completion.
      tags:
        - Restore logs
      operationId: abortRestoreRequestApi
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the restore process.
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/RestoreApiResponse'
          headers: {}



  # ::::: Alerts V2
  /v2/alerts:
    get:
      operationId: getAllAlerts
      summary: Retrieve all alerts
      description: Returns the complete list of all alerts configured for the account.
      tags:
        - Alerts
      produces:
        - application/json
      parameters:
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AlertV2Response'
          headers: {}
    post:
      summary: Create an alert
      description: Configures and activates a new alert.
      tags:
        - Alerts
      operationId: createAlert
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/AlertV2Request'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/AlertV2Response'

  /v2/alerts/{alertId}:
    get:
      summary: Retrieve alert by ID
      description: Returns alert details by alert ID.
      tags:
        - Alerts
      operationId: getAlert
      produces:
        - application/json
      parameters:
        - name: alertId
          in: path
          required: true
          type: integer
          format: int32
          description: Unique identifier of the alert in Logz.io.
          example: 563412
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/AlertV2Response'
          headers: {}
    put:
      summary: Update an alert
      description: Applies changes to an alert, identified by its ID. Can be used to enable or disable the alert.
      tags:
        - Alerts
      operationId: updateAlert
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/AlertV2Request'
        - name: alertId
          in: path
          required: true
          type: integer
          format: int32
          description: Unique identifier of the alert in Logz.io.
          example: 563412
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/AlertV2Response'
    delete:
      operationId: deleteAlert
      summary: Delete an alert
      description: Deletes an alert identified by its ID.
      tags:
        - Alerts
      produces:
        - application/json
      parameters:
        - name: alertId
          in: path
          required: true
          type: integer
          format: int32
          description: Unique identifier of the alert in Logz.io.
          example: 563412
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/AlertV2Response'
          headers: {}
  /v2/alerts/{id}/enable:
    post:
      summary: Enable alert by ID
      description: Enables an alert by its alert ID. This is reversible. The alert can be disabled again at any time.
      operationId: enableAlert
      tags:
        - Alerts
      produces:
        - application/json
      parameters:
        - name: id
          description: Alert ID
          in: path
          required: true
          type: integer
          format: int32
          example: 654312
      responses:
        default:
          description: successful operation
  /v2/alerts/{id}/disable:
    post:
      operationId: disableAlert
      summary: Disable alert by ID
      description: Disables an alert by its alert ID. This is reversible. The alert can be enabled again at any time.
      tags:
        - Alerts
      produces:
        - application/json
      parameters:
        - name: id
          description: Alert ID
          in: path
          required: true
          type: integer
          format: int32
          example: 654321
      responses:
        default:
          description: successful operation

  
  # ::::: Deployment markers
  /v2/markers/create-markers:
    post:
      tags:
        - Deployments
      operationId: createMarkers
      summary: Add deployment markers to Exception graphs
      description: Send logs with details of service deployments to annotate Exception graphs in Kibana Discover. [Learn more about Deployment markers](/user-guide/insights/exceptions/deployments.html)
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateMarkersRequest'
      responses:
        default:
          description: successful operation


  # ::::: Log Insights
  /v1/insights/list:
    post:
      summary: Get the list of Insights
      tags:
        - Insights
      description: >-
        Get the list of Insights that match your search criteria.


        Whenever a new Insight is detected, it receives an Insight ID and is tracked for as long as it recurs. The lookback period for Insights is 6 months.


        **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
      operationId: getPublicInsights
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/PublicGetAccountInsightsRequest'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/PageResponsePublicAccountInsightResponse'

  # ::::: AUDIT TRAIL
  /v1/audit-trail/event-types:
    post:
      operationId: listAccountAuditTrails
      summary: Retrieve all event types in the audit trail
      description: Returns an array of strings. Each string is an event type that appears in the account's audit trail. Each event type is shown once, no matter how many times it occurs in the account's audit trail.
      tags:
        - Retrieve audit trail
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/AuditTrailEventTypesResponse'
      x-code-samples:
        - lang: cURL
          source: 'curl -X POST "https://api.logz.io/v1/audit-trail/event-types" -H "accept: application/json" -H "content-type: application/json" -H "X-API-TOKEN: <token>"'
  /v1/audit-trail:
    post:
      operationId: listAccountAuditTrailsFiltered
      summary: Retrieve a filtered list of audit trail events
      tags:
        - Retrieve audit trail
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/AuditTrailFilterRequest'
      x-code-samples:
        - lang: cURL
          source: 'curl -X POST "https://api.logz.io/v1/audit-trail" -H "accept: application/json" -H "X-API-TOKEN: <token>" -H "Content-Type: application/json" -d "{\"from\":20, \"size\":15, \"fromDate\":1520444072192, \"toDate\":1528216472192, \"sortDescending\":true, \"includeFiltersData\":true, \"auditEventType\":null, \"auditEventUser\":null}"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/AuditTrailFilteredResponse'

  # ::::: CLOUDTRAIL
  /v1/log-shipping/cloudtrails:
    get:
      operationId: getAccountCloudTrails
      summary: Retrieve all connected CloudTrail resources
      description: >-
        Returns a list of CloudTrail resources connected to your Logz.io account.


        **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
      tags:
        - Connect to CloudTrail
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/CloudTrailResponse'
      x-code-samples:
        - lang: cURL
          source: 'curl -X GET "https://api.logz.io/v1/log-shipping/cloudtrails" -H "accept: application/json" -H "content-type: application/json" -H "X-API-TOKEN: <token>"'
    post:
      operationId: createCloudTrail
      summary: Create a new CloudTrail connector
      description: >-
        Establishes a new connection to a CloudTrail resource. As a result, logs from your CloudTrail resource will ship to the connected Logz.io account via an AWS S3 bucket.


        CloudTrail logs will be parsed using the Logz.io custom CloudTrail parsing pipeline.


        **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
      tags:
        - Connect to CloudTrail
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/CloudTrailRequest'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/IdBean'
      x-code-samples:
        - lang: cURL
          source: >-
            'curl -X POST "https://api.logz.io/v1/log-shipping/cloudtrails" \
            -d "{
              \"accessKey\": \"ee07df5801500745419c6dff\",
              \"secretKey\": \"506d891fe2163a511b450eddc3279539f6\",
              \"bucket\": \"LogzioBucket\",
              \"prefix\": \"AWSLogs/7364988021587/myprefix\",
              \"active\": true
            }"'
  /v1/log-shipping/cloudtrails/{id}:
    get:
      operationId: getCloudTrail
      summary: Retrieve CloudTrail connector by ID
      description: >-
        Returns details for a CloudTrail connector, identified by its ID.


        **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
      tags:
        - Connect to CloudTrail
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: Logz.io ID of the CloudTrail connector
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/CloudTrailResponse'
    put:
      operationId: updateCloudTrail
      summary: Update a CloudTrail connector
      description: >-
        Updates details for a CloudTrail connector.


        **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
      tags:
        - Connect to CloudTrail
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/CloudTrailRequest'
        - name: id
          description: Logz.io ID of the CloudTrail connector.
          in: path
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/MessageBean'
    delete:
      operationId: deleteCloudTrail
      summary: Delete a CloudTrail connector
      description: >-
        Deletes a CloudTrail connector. As a result, CloudTrail will stop shipping data to your Logz.io account.


        **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
      tags:
        - Connect to CloudTrail
      parameters:
        - name: id
          description: Logz.io ID of the CloudTrail connector.
          in: path
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/MessageBean'

  # ::::: S3 log shipping
  /v1/log-shipping/s3-buckets:
    get:
      summary: Retrieve all connected S3 buckets
      description: >-
        Returns a list of all S3 buckets connected to your Logz.io account.


        **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
      tags:
        - Connect to S3 Buckets
      operationId: getS3Buckets
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/S3BucketResponse'
    post:
      summary: Create a new S3 bucket connector
      description: >-
        Establishes a new connection of the Logz.io fetcher to an AWS S3 bucket. As a result, logs from your AWS resource will begin shipping to the connected Logz.io account via an AWS S3 bucket.


        Logs will be parsed using the Logz.io custom parsing pipeline for the resource.


        **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
      tags:
        - Connect to S3 Buckets
      operationId: createBuckets
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/S3BucketRequest'
      responses:
        default:
          description: successful operation
  '/v1/log-shipping/s3-buckets/{id}':
    get:
      summary: Retrieve an S3 bucket connector by ID
      description: >-
        Returns connection details for an S3 bucket connector by its ID.


        **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
      tags:
        - Connect to S3 Buckets
      operationId: getS3Bucket
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          description: Logz.io ID of the S3 Bucket connector. You can run the relevant GET endpoints to retrieve the ID.
          in: path
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: successful operation
          schema:
              $ref: '#/definitions/S3BucketResponse'
    put:
      summary: Update an S3 bucket connector
      description: >-
        Updates connection details for an S3 bucket connector.


        **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
      tags:
        - Connect to S3 Buckets
      operationId: updateBucket
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Logz.io ID of the S3 Bucket connector. You can run the relevant GET endpoints to retrieve the ID.
          required: true
          type: integer
          format: int32
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/S3BucketRequest'
      responses:
        default:
          description: successful operation
    delete:
      summary: Delete an S3 connector
      description: >-
        Deletes an S3 bucket connector. As a result, the connected AWS resource will stop shipping logs to your Logz.io account.


        **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
      tags:
        - Connect to S3 Buckets
      operationId: deleteBucket
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          description: Logz.io ID of the S3 bucket connector. You can run the relevant GET endpoints to retrieve the ID.
          in: path
          required: true
          type: integer
          format: int32
      responses:
        default:
          description: successful operation
  /v1/log-shipping/s3-buckets/aws-assume-role-details:
    get:
      summary: Get account information for IAM Role
      description: >-
        Returns the Logz.io parameters needed to create an AWS IAM Role in the AWS admin console.


        The next steps after running this endpoint:

        * Open your AWS admin console and create a new IAM Role. Once the role is created, you will obtain an ARN for it. Keep it handy for the next step.

        * Create a new S3 bucket connector. Provide the ARN from the previous step in the request body.


        **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
      tags:
        - Connect to S3 Buckets
      operationId: getAWSAssumeRoleDetails
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/AWSAssumeRoleDetails'
          headers: {}

  # ::::: NOTIFICATION ENDPOINTS
  /v1/endpoints/slack:
    post:
      operationId: createSlack
      summary: Create a Slack endpoint
      tags:
        - Manage notification endpoints
      description: Creates a new Slack notification endpoint or sends a test message to Slack
      parameters:
        - name: test
          in: query
          required: false
          type: boolean
          default: false
          description: >-
            To send a test message to the endpoint, `true`. Otherwise, `false`.


            **Note:** If set to `true`, the notification endpoint is not created. To create the endpoint, you need to send the API request where `test=false`.
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/SlackEndpointUpsertRequest'
      x-code-samples:
        - lang: cURL
          source: 'curl -X POST "https://api.logz.io/v1/endpoints/slack?test=false" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <token>" -d \"{  \"title\": \"New Slack endpoint\",  \"description\": \"Sends notifications to #logzio-alerts channel\",  \"url\": \"https://hooks.slack.com/services/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\"}"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/EndpointUpsertResponse'
  /v1/endpoints/slack/{id}:
    put:
      tags:
        - Manage notification endpoints
      summary: Update Slack endpoint
      description: Updates a Slack notification endpoint or sends a test message to Slack
      operationId: updateSlack
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the notification endpoint
        - name: test
          in: query
          required: false
          type: boolean
          default: false
          description: >-
            To send a test message to the endpoint, `true`. Otherwise, `false`.


            **Note:** If set to `true`, the notification endpoint is not updated. To update the endpoint, you need to send the API request where `test=false`.
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/SlackEndpointUpsertRequest'
      x-code-samples:
        - lang: cURL
          source: 'curl -X PUT "https://api.logz.io/v1/endpoints/slack/269?test=false" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <token>" -d "{  \"title\": \"Updated Slack endpoint\",  \"description\": \"Sends notifications to #logzio-alerts channel\",  \"url\": \"https://hooks.slack.com/services/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\"}"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/EndpointUpsertResponse'
  /v1/endpoints/custom:
    post:
      tags:
        - Manage notification endpoints
      summary: Create a custom notification endpoint
      description: Creates a new notification endpoint for a custom integration or sends a test message to the custom endpoint.
      operationId: createCustom
      parameters:
        - name: test
          in: query
          required: false
          type: boolean
          default: false
          description: >-
            To send a test message to the endpoint, `true`. Otherwise, `false`.


            **Note:** If set to `true`, the notification endpoint is not created. To create the endpoint, you need to send the API request where `test=false`.
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/CustomEndpointUpsertRequest'
      x-code-samples:
        - lang: cURL
          source: 'curl -X POST "https://api.logz.io/v1/endpoints/custom" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <token>" -d "{\"title\": \"New custom endpoint\", \"description\": \"Sends notifications to my custom endpoint\", \"url\": \"https://my.custom-endpoint.com\", \"method\": \"POST\", \"headers\": \"authKey=6e30-60a9-3591\", \"bodyTemplate\": {\"subject\": \"Alert from Logz.io\", \"message\": {\"severity\": \"LOW\", \"body\": \"Check Logz.io for log activity\"} }}"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/EndpointUpsertResponse'
  /v1/endpoints/custom/{id}:
    put:
      tags:
        - Manage notification endpoints
      summary: Update a custom notification endpoint
      description: Updates a new notification endpoint for a custom integration or sends a test message to the custom endpoint.
      operationId: updateCustom
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
        - name: test
          in: query
          required: false
          type: boolean
          default: false
          description: >-
            To send a test message to the endpoint, `true`. Otherwise, `false`.


            **Note:** If set to `true`, the notification endpoint is not updated. To update the endpoint, you need to send the API request where `test=false`.
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/CustomEndpointUpsertRequest'
      x-code-samples:
        - lang: cURL
          source: 'curl -X PUT "https://api.logz.io/v1/endpoints/custom/275" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <token>" -d "{\"title\": \"Updated custom endpoint\", \"description\": \"Sends notifications to my custom endpoint\", \"url\": \"https://my.custom-endpoint.com/\", \"method\": \"POST\", \"headers\": \"authKey=6e30-60a9-3591\", \"bodyTemplate\": {\"subject\": \"Alert from Logz.io\", \"message\": {\"severity\": \"LOW\", \"body\": \"Check Logz.io for log activity\"} }}"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/EndpointUpsertResponse'
  /v1/endpoints/pager-duty:
    post:
      tags:
        - Manage notification endpoints
      summary: Create a PagerDuty endpoint
      description: Creates a new PagerDuty notification endpoint or sends a test message to PagerDuty.
      operationId: createPagerDuty
      parameters:
        - name: test
          in: query
          required: false
          type: boolean
          default: false
          description: >-
            To send a test message to the endpoint, `true`. Otherwise, `false`.


            **Note:** If set to `true`, the notification endpoint is not created. To create the endpoint, you need to send the API request where `test=false`.
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/PagerDutyEndpointUpsertRequest'
      x-code-samples:
        - lang: cURL
          source: 'curl -X POST "https://api.logz.io/v1/endpoints/pager-duty" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <token>" -d "{  \"title\": \"New PagerDuty endpoint\",  \"description\": \"Sends notifications to PagerDuty\",  \"serviceKey\": \"78c3b6cf0a884a538410fe281227eb0b\"}"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/EndpointUpsertResponse'
  /v1/endpoints/pager-duty/{id}:
    put:
      tags:
        - Manage notification endpoints
      summary: Update a PagerDuty endpoint
      description: Updates a PagerDuty notification endpoint or sends a test message to PagerDuty
      operationId: updatePagerDuty
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the notification endpoint
        - name: test
          in: query
          required: false
          type: boolean
          default: false
          description: >-
            To send a test message to the endpoint, `true`. Otherwise, `false`.


            **Note:** If set to `true`, the notification endpoint is not updated. To update the endpoint, you need to send the API request where `test=false`.
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/PagerDutyEndpointUpsertRequest'
      x-code-samples:
        - lang: cURL
          source: 'curl -X PUT "https://api.logz.io/v1/endpoints/pager-duty/271" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <token>" -d "{  \"title\": \"Updated PagerDuty endpoint\", \"description\": \"Sends notifications to PagerDuty\", \"serviceKey\": \"78c3b6cf0a884a538410fe281227eb0b\"}"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/EndpointUpsertResponse'
  /v1/endpoints/big-panda:
    post:
      tags:
        - Manage notification endpoints
      summary: Create a BigPanda endpoint
      description: Creates a new BigPanda notification endpoint or sends a test message to BigPanda.
      operationId: createBigPanda
      parameters:
        - name: test
          in: query
          required: false
          type: boolean
          default: false
          description: >-
            To send a test message to the endpoint, `true`. Otherwise, `false`.


            **Note:** If set to `true`, the notification endpoint is not created. To create the endpoint, you need to send the API request where `test=false`.
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/BigPandaEndpointUpsertRequest'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/EndpointUpsertResponse'
      x-code-samples:
        - lang: cURL
          source: 'curl -X POST "https://api.logz.io/v1/endpoints/big-panda" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <token>" -d "{  \"title\": \"New BigPanda endpoint\",  \"description\": \"Sends notifications to BigPanda\",  \"apiToken\": \"94ad63254a1397a51a1ae340c4f10890\",  \"appKey\": \"c687f9231619d7d7b959f33e4cc821a5\"}"'
  /v1/endpoints/big-panda/{id}:
    put:
      tags:
        - Manage notification endpoints
      summary: Update a BigPanda endpoint
      description: Updates a BigPanda notification endpoint or sends a test message to BigPanda
      operationId: updateBigPanda
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the notification endpoint
        - name: test
          in: query
          required: false
          type: boolean
          default: false
          description: >-
            To send a test message to the endpoint, `true`. Otherwise, `false`.


            **Note:** If set to `true`, the notification endpoint is not updated. To update the endpoint, you need to send the API request where `test=false`.
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/BigPandaEndpointUpsertRequest'
      x-code-samples:
        - lang: cURL
          source: 'curl -X PUT "https://api.logz.io/v1/endpoints/big-panda/272" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <token>" -d "{\"title\": \"Updated BigPanda endpoint\", \"description\": \"Sends notifications to BigPanda\", \"apiToken\": \"94ad63254a1397a51a1ae340c4f10890\", \"appKey\": \"c687f9231619d7d7b959f33e4cc821a5\"}"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/EndpointUpsertResponse'
  /v1/endpoints/data-dog:
    post:
      tags:
        - Manage notification endpoints
      summary: Create a Datadog endpoint
      description: Creates a new Datadog notification endpoint or sends a test message to Datadog.
      operationId: createDataDog
      parameters:
        - name: test
          in: query
          required: false
          type: boolean
          default: false
          description: >-
            To send a test message to the endpoint, `true`. Otherwise, `false`.


            **Note:** If set to `true`, the notification endpoint is not created. To create the endpoint, you need to send the API request where `test=false`.
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/DatadogEndpointUpsertRequest'
      x-code-samples:
        - lang: cURL
          source: 'curl -X POST "https://api.logz.io/v1/endpoints/data-dog" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <token>" -d "{  \"title\": \"New Datadog endpoint\",  \"description\": \"Sends notifications to Datadog\",  \"apiKey\": \"c687f9231619d7d7b959f33e4cc821a5\"}"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/EndpointUpsertResponse'
  /v1/endpoints/data-dog/{id}:
    put:
      tags:
        - Manage notification endpoints
      summary: Update a Datadog endpoint
      description: Updates a Datadog notification endpoint or sends a test message to Datadog
      operationId: updateDataDog
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the notification endpoint
        - name: test
          in: query
          required: false
          type: boolean
          default: false
          description: >-
            To send a test message to the endpoint, `true`. Otherwise, `false`.


            **Note:** If set to `true`, the notification endpoint is not updated. To update the endpoint, you need to send the API request where `test=false`.
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/DatadogEndpointUpsertRequest'
      x-code-samples:
        - lang: cURL
          source: 'curl -X PUT "http://endpoints/data-dog/273" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <token>" -d "{\"title\": \"Updated Datadog endpoint\", \"description\": \"Sends notifications to Datadog\", \"apiKey\": \"c687f9231619d7d7b959f33e4cc821a5\"}"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/EndpointUpsertResponse'
  /v1/endpoints/victorops:
    post:
      tags:
        - Manage notification endpoints
      summary: Create a VictorOps endpoint
      description: Creates a new VictorOps notification endpoint or sends a test message to VictorOps.
      operationId: createVictorops
      parameters:
        - name: test
          in: query
          required: false
          type: boolean
          default: false
          description: >-
            To send a test message to the endpoint, `true`. Otherwise, `false`.


            **Note:** If set to `true`, the notification endpoint is not created. To create the endpoint, you need to send the API request where `test=false`.
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/VictoropsEndpointUpsertRequest'
      x-code-samples:
        - lang: cURL
          source: 'curl -X POST "https://api.logz.io/v1/endpoints/victorops" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <token>" -d "{  \"title\": \"New VictorOps endpoint\",  \"description\": \"Sends notifications to VictorOps\",  \"routingKey\": \"devops\",  \"messageType\": \"WARNING\",  \"serviceApiKey\": \"c687f9231619d7d7b959f33e4cc821a5\"}"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/EndpointUpsertResponse'
  /v1/endpoints/victorops/{id}:
    put:
      tags:
        - Manage notification endpoints
      summary: Update a VictorOps endpoint
      description: Updates a VictorOps notification endpoint or sends a test message to VictorOps
      operationId: updateVictorops
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the notification endpoint
        - name: test
          in: query
          required: false
          type: boolean
          default: false
          description: >-
            To send a test message to the endpoint, `true`. Otherwise, `false`.


            **Note:** If set to `true`, the notification endpoint is not updated. To update the endpoint, you need to send the API request where `test=false`.
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/VictoropsEndpointUpsertRequest'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/EndpointUpsertResponse'
      x-code-samples:
        - lang: cURL
          source: 'curl -X PUT "https://api.logz.io/v1/endpoints/victorops/274" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <token>" -d "{\"title\": \"New VictorOps endpoint\", \"description\": \"Sends notifications to VictorOps\", \"routingKey\": \"devops\", \"messageType\": \"WARNING\", \"serviceApiKey\": \"c687f9231619d7d7b959f33e4cc821a5\"}"'
  /v1/endpoints/{id}:
    get:
      tags:
        - Manage notification endpoints
      summary: Retrieve an endpoint by ID
      description: Returns a JSON object representing a notification endpoint configured in the account.
      operationId: getEndpointById
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the notification endpoint
      x-code-samples:
        - lang: cURL
          source: 'curl -X GET "https://api.logz.io/v1/endpoints/88" -H "accept: application/json" -H "X-API-TOKEN: <token>"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Endpoint'
    delete:
      tags:
        - Manage notification endpoints
      summary: Delete an endpoint
      description: Deletes a notification endpoint
      operationId: deleteEndpoint
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the notification endpoint
      x-code-samples:
        - lang: cURL
          source: 'curl -X DELETE "https://api.logz.io/v1/endpoints/269" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <token>"'
      responses:
        204:
          description: successful operation
  /v1/endpoints:
    get:
      tags:
        - Manage notification endpoints
      summary: Retrieve all notification endpoints
      description: Returns an array of JSON objects. Each object represents a notification endpoint configured in the account.
      operationId: getAllEndpoints
      x-code-samples:
        - lang: cURL
          source: 'curl -X GET "https://api.logz.io/v1/endpoints" -H "accept: application/json" -H "X-API-TOKEN: <token>"'
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Endpoint'

  # ::::: KIBANA IMPORT/EXPORT
  /v1/kibana/export:
    post:
      tags:
        - Import or export Kibana objects
      summary: Export Kibana objects
      description: >-
        Exports the configuration of Kibana objects. All objects of a single type (search, visualization, or dashboard) are returned as an array of JSON objects. For example, if you export `visualization`, each visualization is returned as a JSON object.


        You can import objects using the [/kibana/import](#operation/importSavedObjects) endpoint.
      operationId: exportSavedObjects
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/KibanaExportRequest'
      x-code-samples:
        - lang: cURL
          source: 'curl -X POST "https://api.logz.io/v1/kibana/export" -H "accept: application/json" -H "content-type: application/json" -H "X-API-TOKEN: <token>" -d "{\"type\": \"visualization\"}"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/KibanaExportResponse'
  /v1/kibana/import:
    post:
      tags:
        - Import or export Kibana objects
      summary: Import Kibana objects
      description: Imports Kibana search, visualization, or dashboard objects. You can export objects using the [/kibana/export](#operation/exportSavedObjects) endpoint.
      operationId: importSavedObjects
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/KibanaImportRequest'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/KibanaImportResponse'
      x-code-samples:
        - lang: cURL
          source: >-
            curl -X POST "https://api.logz.io/v1/kibana/import" \
            -H "accept: application/json" -H "content-type: application/json" \
            -H "X-API-TOKEN: <token>" \
            -d "{
              \"kibanaVersion\": \"4.0.0-beta3\",
              \"override\": true,
              \"hits\": [
                {
                  \"_index\": \"logzioCustomerKibanaIndex\",
                  \"_type\": \"search\",
                  \"_id\": \"c245e530-fc60-11e7-b120-5320b1759c57\",
                  \"_score\": 1,
                  \"_source\": {
                    \"title\": \"example-saved-query\",
                    \"description\": \"\",
                    \"hits\": 0,
                    \"columns\": [
                      \"message\"
                    ],
                    \"sort\": [
                      \"@timestamp\",
                      \"desc\"
                    ],
                    \"version\": 1,
                    \"kibanaSavedObjectMeta\": {
                      \"searchSourceJSON\": \"{\"index\":\"[logzioCustomerIndex]YYMMDD\",\"highlightAll\":true,\"version\":true,\"query\":{\"query_string\":{\"query\":\"example-saved-query\"}},\"filter\":[]}\"
                    },
                    \"_createdBy\": {
                      \"userId\": 1,
                      \"fullName\": \"testadmin@logz.io\",
                      \"username\": \"testadmin@logz.io\"
                    },
                    \"_createdAt\": 1516287816456,
                    \"_updatedBy\": {
                      \"userId\": 1,
                      \"fullName\": \"testadmin@logz.io\",
                      \"username\": \"testadmin@logz.io\"
                    },
                    \"_updatedAt\": 1516287816456
                  }
                }
              ]
            }"


  # ::::: SHIPPING TOKENS
  /v1/log-shipping/tokens:
    post:
      tags:
        - Manage log shipping tokens
      summary: Create a log shipping token
      description: Creates a log shipping token for this account.
      operationId: createNewLogShippingToken
      x-code-samples:
        - lang: cURL
          source: >-
            curl -L -X POST 'https://api.logz.io/log-shipping/tokens' \
            --header 'X-API-TOKEN: <token>' \
            --header 'Content-Type: application/json'
            --data-raw '{ "name": "token-name", "enabled": "true" }'
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/ShippingTokensRequest'
      responses:
        '201':
          description: successful operation
          schema:
            $ref: '#/definitions/ShippingTokensModel'
  /v1/log-shipping/tokens/{id}:
    get:
      tags:
        - Manage log shipping tokens
      summary: Retrieve a log shipping token by ID
      description: Returns details for the specified shipping token.
      operationId: getLogShippingTokenById
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: This token's ID.
          example: 786351
      x-code-samples:
        - lang: cURL
          source: >-
            curl -L -X GET 'https://api.logz.io/v1/log-shipping/tokens/{id}' \
            -H 'X-API-TOKEN: <token>' \
            -H 'Content-Type: application/json'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ShippingTokensModel'
    put:
      tags:
        - Manage log shipping tokens
      summary: Update a log shipping token
      description: Enables/disables a log shipping token and/or renames it.
      operationId: updateLogShippingToken
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: This token's ID.
          example: 786351
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/ShippingTokensRequest'
      x-code-samples:
        - lang: cURL
          source: >-
            curl -L -X PUT 'https://api.logz.io/v1/log-shipping/tokens/{id}' \
            -H 'X-API-TOKEN: <token>' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "name": "staging eu",
              "enabled": true
            }'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ShippingTokensModel'
    delete:
      tags:
        - Manage log shipping tokens
      summary: Delete a log shipping token
      description: >-
        Deletes a log shipping token by its ID, while providing relevant information about the token's recent status and activity.


        An account must have at least 1 enabled token. You won't be able to disable or delete the last token.

        **Important**: Active tokens can be deleted using this call. Confirm that a token is no longer needed before deleting it.
      operationId: deleteLogShippingToken
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: This token's ID.
          example: 786351
      x-code-samples:
        - lang: cURL
          source: >-
            curl -L -X DELETE 'https://api.logz.io/v1/log-shipping/tokens/786351' \
            -H 'X-API-TOKEN: <token>' \
            -H 'Content-Type: application/json'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ShippingTokensModel'
  /v1/log-shipping/tokens/limits:
    get:
      tags:
        - Manage log shipping tokens
      summary: Get number of available tokens
      description: >-
        Returns the number of log shipping tokens currently in use and the number of available tokens that can be enabled.
        Disabled tokens don't count against the token limit.
      operationId: getLogShippingTokensLimits
      x-code-samples:
        - lang: cURL
          source: >-
            curl -L -X GET 'https://api.logz.io/v1/log-shipping/tokens/limits' \
            -H 'X-API-TOKEN: <token>' \
            -H 'Content-Type: application/json'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ShippingTokensLimitsResponse'
  /v1/log-shipping/tokens/search:
    post:
      tags:
        - Manage log shipping tokens
      summary: Retrieve log shipping tokens
      description: Returns the relevant shipping tokens, filtered, sorted and paginated as per the request.
      operationId: searchLogShippingTokens
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/ShippingTokensSearchRequest'
      x-code-samples:
        - lang: cURL
          source: >-
            curl -L -X POST 'https://api.logz.io/v1/log-shipping/tokens/search' \
            -H 'X-API-TOKEN: <token>' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "filter": {
                "enabled": true
              },
              "sort": [
                {
                  "field": "name",
                  "descending": true
                }
              ],
              "pagination": {
                "pageNumber": 3,
                "pageSize": 15
              }
            }'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/PagedSearchResponseShippingTokensModel'

  # ::::: SHARED TOKENS
  /v1/shared-tokens/filters:
    get:
      operationId: getAllFilters
      summary: Retrieve all shared token filters
      description: >-
        Returns an array of JSON objects, where each object shows information for a shared token filter.


        **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
      tags:
        - Manage shared tokens
      x-code-samples:
        - lang: cURL
          source: 'curl -X GET "https://api.logz.io/v1/shared-tokens/filters" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <token>"'
      responses:
        200:
          description: successful operation
          schema:
            type: array
            uniqueItems: true
            items:
              $ref: '#/definitions/QueryFilter'
        400:
          description: not found
          schema:
            type: object
            properties:
              message:
                type: string
                example: token with id 12345 not found for account 54321
                description: The shared token or query filter could not be found
        403:
          description: forbidden
          schema:
            type: object
            properties:
              message:
                type: string
                example: Insufficient privileges
                description: Insufficient privileges. Contact our Support team for access to this API feature.
    post:
      operationId: createFilter
      summary: Create a shared token filter
      description: >-
        Creates a new shared token filter.


        **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
      tags:
        - Manage shared tokens
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/QueryFilter'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/QueryFilter'
        400:
          description: not found
          schema:
            type: object
            properties:
              message:
                type: string
                example: token with id 12345 not found for account 54321
                description: The shared token or query filter could not be found
        403:
          description: forbidden
          schema:
            type: object
            properties:
              message:
                type: string
                example: Insufficient privileges
                description: Insufficient privileges. Contact our Support team for access to this API feature.
  /v1/shared-tokens/filters/{id}:
    get:
      operationId: getFilter
      summary: Retrieve a shared token filter by ID
      description: >-
        Returns a shared token filter as a JSON object.


        **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
      tags:
        - Manage shared tokens
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the shared token filter
      x-code-samples:
        - lang: cURL
          source: 'curl -X GET "https://api.logz.io/v1/shared-tokens/filters/345" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <token>"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/QueryFilter'
        400:
          description: not found
          schema:
            type: object
            properties:
              message:
                type: string
                example: token with id 12345 not found for account 54321
                description: The shared token or query filter could not be found
        403:
          description: forbidden
          schema:
            type: object
            properties:
              message:
                type: string
                example: Insufficient privileges
                description: Insufficient privileges. Contact our Support team for access to this API feature.
    delete:
      operationId: deleteFilter
      summary: Delete a shared token filter
      description: >-
        Deletes a shared token filter.


        **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
      tags:
        - Manage shared tokens
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the shared token filter
      x-code-samples:
        - lang: cURL
          source: 'curl -X DELETE "https://api.logz.io/v1/shared-tokens/filters/345" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <token>"'
      responses:
        200:
          description: successful operation
        400:
          description: not found
          schema:
            type: object
            properties:
              message:
                type: string
                example: token with id 12345 not found for account 54321
                description: The shared token or query filter could not be found
        403:
          description: forbidden
          schema:
            type: object
            properties:
              message:
                type: string
                example: Insufficient privileges
                description: Insufficient privileges. Contact our Support team for access to this API feature.
  /v1/shared-tokens/{id}:
    get:
      operationId: getToken
      summary: Retrieve a shared token by ID
      description: >-
        Returns a shared token as a JSON object.


        **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
      tags:
        - Manage shared tokens
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the shared token
      x-code-samples:
        - lang: cURL
          source: 'curl -X GET "https://api.logz.io/v1/shared-tokens/1242" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <token>"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/SharedToken'
        400:
          description: not found
          schema:
            type: object
            properties:
              message:
                type: string
                example: token with id 12345 not found for account 54321
                description: The shared token or query filter could not be found
        403:
          description: forbidden
          schema:
            type: object
            properties:
              message:
                type: string
                example: Insufficient privileges
                description: Insufficient privileges. Contact our Support team for access to this API feature.
    put:
      operationId: updateToken
      summary: Update a shared token
      description: >-
        Changes the filters attached to a shared token.


        **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
      tags:
        - Manage shared tokens
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/UpdateSharedTokenRequest'
      x-code-samples:
        - lang: cURL
          source: 'curl -X PUT "https://api.logz.io/v1/shared-tokens/1242" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <token>" -d "{\"filters\":[339]}"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/SharedToken'
        400:
          description: not found
          schema:
            type: object
            properties:
              message:
                type: string
                example: token with id 12345 not found for account 54321
                description: The shared token or query filter could not be found
        403:
          description: forbidden
          schema:
            type: object
            properties:
              message:
                type: string
                example: Insufficient privileges
                description: Insufficient privileges. Contact our Support team for access to this API feature.
    delete:
      operationId: deleteToken
      summary: Delete a shared token
      description: >-
        Deletes a shared token.


        **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
      tags:
        - Manage shared tokens
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the shared token
      x-code-samples:
        - lang: cURL
          source: 'curl -X DELETE "https://api.logz.io/v1/shared-tokens/1250" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <token>"'
      responses:
        204:
          description: successful operation
        400:
          description: not found
          schema:
            type: object
            properties:
              message:
                type: string
                example: token with id 12345 not found for account 54321
                description: The shared token or query filter could not be found
        403:
          description: forbidden
          schema:
            type: object
            properties:
              message:
                type: string
                example: Insufficient privileges
                description: Insufficient privileges. Contact our Support team for access to this API feature.
  /v1/shared-tokens:
    get:
      operationId: getAllTokens
      summary: Retrieve all shared tokens
      description: >-
        Returns an array of JSON objects, where each object shows information for a shared token.


        **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
      tags:
        - Manage shared tokens
      responses:
        200:
          description: successful operation
          schema:
            type: array
            uniqueItems: true
            items:
              $ref: '#/definitions/SharedToken'
        400:
          description: not found
          schema:
            type: object
            properties:
              message:
                type: string
                example: token with id 12345 not found for account 54321
                description: The shared token or query filter could not be found
        403:
          description: forbidden
          schema:
            type: object
            properties:
              message:
                type: string
                example: Insufficient privileges
                description: Insufficient privileges. Contact our Support team for access to this API feature.
      x-code-samples:
        - lang: cURL
          source: 'curl -X GET "https://api.logz.io/v1/shared-tokens" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <token>"'
    post:
      operationId: createToken
      summary: Create a shared token
      description: >-
        Creates a new shared token.


        **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
      tags:
        - Manage shared tokens
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/CreateSharedTokenRequest'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/SharedToken'
        400:
          description: not found
          schema:
            type: object
            properties:
              message:
                type: string
                example: token with id 12345 not found for account 54321
                description: The shared token or query filter could not be found
        403:
          description: forbidden
          schema:
            type: object
            properties:
              message:
                type: string
                example: Insufficient privileges
                description: Insufficient privileges. Contact our Support team for access to this API feature.
      x-code-samples:
        - lang: cURL
          source: 'curl -X POST "https://api.logz.io/v1/shared-tokens" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <token>" -d "{ \"tokenName\": \"Support shared token\", \"filters\":[339]}"'

  # ::::: API TOKENS
  /v1/api-tokens/sub-account:
    post: 
      operationId: CreateApiTokenRequest
      summary: Create a sub account API token. 
      description: >-
        Creates a new API token for a sub account. 
        
        Must be run with an API token of the owner account. 
        
        Once created, you can view the details for this new token in [Manage tokens > API tokens](https://app.logz.io/#/dashboard/settings/manage-tokens/api), when you are logged in to the relevant sub account.

      tags:
        - Manage API tokens
      parameters: 
        - in: body
          name: body
          required: true  
          schema:
            $ref: '#/definitions/CreateApiTokenRequest'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ApiTokenResponse'
        400:
          description: Bad Request
          schema:
            type: object
            properties:
              message:
                type: string
                example: Bad Request. There was an issue with the request syntax from the client. Received integer instead of expected string parameter
                description: Bad Request. The request cannot be completed. Errors may include malformed request syntax, invalid request message parameters, and so on. 
        401:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized. There was a problem with the authorization provided in the request. 
                description: Unauthorized. Attempted to create an API token for a sub account with insufficient or missing credentials for the main or owner account. Please contact our Support team for access to this API feature via [help@logz.io](mailto:help@logz.io).
        403:
          description: Forbidden
          schema:
            type: object
            properties:
              message:
                type: string
                example: Forbidden. Attempted to create an API token for a sub account using an illegal owner account token. 
                description: Forbidden. Attempted to create an API token for a sub account with an invalid owner account token. This operation requires a valid API token for the owner account.                         
        404:
          description: Not Found
          schema:
            type: object
            properties:
              message:
                type: string
                example: Not Found. Could not find the sub account associated with this request.
                description: Not Found. Could not find the sub account associated with this request or the relevant owner account for the sub account.  
      x-code-samples:
        - lang: cURL
          source: 'curl -X POST "https://api.logz.io/v1/api-tokens/sub-account" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <token>" -d "{ \"tokenName\": \"newAPITokenTest999\", \"accountId\":7386}"'


  # ::::: SNAPSHOTS
  /v1/snapshotter:
    post:
      tags:
        - Logz.io snapshots
      summary: Create a snapshot
      description: Creates a new Kibana snapshot and shares with recipients through email or notification endpoint
      operationId: createSnapshot
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/SnapshotCreateRequest'
      x-code-samples:
        - lang: cURL
          source: >-
            curl -X POST "https://api.logz.io/v1/snapshotter" \
              -H "accept: application/json" \
              -H "X-API-TOKEN: <token>" \
              -H "Content-Type: application/json" \
              -d '{
                "snapshotType": "VISUALIZATION",
                "snapshotSavedObjectId": "c3cf4ac9-81f7-60ef-1a9d-d32c1fa7c012",
                "emails": [ "shalom@logz.io" ],
                "message": "Hey, let me know if you need me to do anything about this.",
                "timeFrameFrom": 1527951945,
                "timeFrameTo": 1528038346,
                "snapshotTimeZone": "UTC",
                "darkTheme": true
              }'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/SnapshotCreateResponse'
  /v1/snapshotter/{snapshotId}:
    get:
      tags:
        - Logz.io snapshots
      summary: Retrieve a snapshot by ID
      description: Returns the details of a snapshot, such as status and the snapshot image URL
      operationId: getSnapshot
      parameters:
        - name: snapshotId
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the snapshot
          example: 3094
      x-code-samples:
        - lang: cURL
          source: 'curl -X GET "https://api.logz.io/v1/snapshotter/3094" -H "accept: application/json" -H "X-API-TOKEN: <token>"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/SnapshotGetResponse'

  # ::::: USER MANAGEMENT
  /v1/user-management/recursive:
    get:
      summary: Retrieve users in all associated accounts
      description: >-
        Returns a list of users in the main account and all associated sub accounts as an array of JSON objects per account.


        If a user appears in multiple accounts, it will be listed separately under each account.


        **Note:** Must be run with an API token belonging to the main account.
      tags:
        - Manage users
      operationId: listAllAccountUsers
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
      x-code-samples:
        - lang: cURL
          source: 'curl -X GET "https://api.logz.io/v1/user-management/recursive" -H "accept: application/json" -H "content-type: application/json" -H "X-API-TOKEN: <token>"'
  /v1/user-management:
    get:
      summary: Retrieve all users
      description: Returns a list of users as an array of JSON objects.
      tags:
        - Manage users
      operationId: listUsers
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
      x-code-samples:
        - lang: cURL
          source: 'curl -X GET "https://api.logz.io/v1/user-management" -H "accept: application/json" -H "content-type: application/json" -H "X-API-TOKEN: <token>"'
    post:
      summary: Create a user
      description: Creates a new user with specified permissions to access your log data
      tags:
        - Manage users
      operationId: createUser
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/UserManagementUpsertRequest'
      x-code-samples:
        - lang: cURL
          source: 'curl -X POST "https://api.logz.io/v1/user-management" -H "accept: application/json" -H "content-type: application/json" -H "X-API-TOKEN: <token>" -d "{ \"username\": \"artvandelay@kramerica.com\",  \"fullName\": \"Art Vandelay\",  \"accountID\": 11111,  \"roles\": [ 2 ]}"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/UserManagementUpsertResponse'
  /v1/user-management/{id}:
    get:
      tags:
        - Manage users
      summary: Retrieve a user by ID
      description: Returns user information and permissions as a JSON object
      operationId: getUser
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the user
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/User'
      x-code-samples:
        - lang: cURL
          source: 'curl -X GET "https://api.logz.io/v1/user-management/55555" -H "accept: application/json" -H "content-type: application/json" -H "X-API-TOKEN: <token>"'
    put:
      tags:
        - Manage users
      summary: Update a user
      description: Changes an existing user's details or permissions.
      operationId: updateUser
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/UserManagementUpsertRequest'
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the user
          example: 11300
      x-code-samples:
        - lang: cURL
          source: 'curl -X PUT "https://api.logz.io/v1/user-management/12345"  -H "accept: application/json" -H "content-type: application/json" -H "X-API-TOKEN: <token>" -d "{ \"username\": \"drvenkman@gbusters.com\",  \"fullName\": \"Peter Venkman\",  \"accountID\": 13485,  \"roles\": [ 2 ]}"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/UserManagementUpsertResponse'
    delete:
      tags:
        - Manage users
      summary: Delete a user
      description: Revokes a user's access to the account. The API token determines the account the user will be deleted from.
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the user
          example: 11300
      x-code-samples:
        - lang: cURL
          source: 'curl -X DELETE "https://api.logz.io/v1/user-management/11300" -H "accept: application/json" -H "X-API-TOKEN: <token>"'
      responses:
        200:
          description: successful operation
  /v1/user-management/{id}/recursive:
    delete:
      tags:
        - Manage users
      summary: Delete a user from all accounts
      description: >-
        Deletes a user from the main account and all associated sub accounts. Must be run with an API token for the main account.


        The user will not be deleted from accounts for which there are no other users. In other words, any accounts where the user is the last user will be skipped. The success message will list accounts that were skipped.
      operationId: deleteUserRecursively
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the user
          example: 11300
      x-code-samples:
        - lang: cURL
          source: 'curl -X DELETE "https://api.logz.io/v1/user-management/11300/recursive" -H "accept: application/json" -H "X-API-TOKEN: <token>"'
      responses:
        200:
          description: successful operation
  /v1/user-management/suspend/{id}:
    post:
      tags:
        - Manage users
      summary: Suspend a user
      description: Locks a user's access to your accounts
      operationId: suspendUser
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the user
          example: 3325
      x-code-samples:
        - lang: cURL
          source: 'curl -X POST "https://api.logz.io/v1/user-management/suspend/11300" -H "accept: application/json" -H "X-API-TOKEN: <token>"'
      responses:
        200:
          description: successful operation
  /v1/user-management/unsuspend/{id}:
    post:
      tags:
        - Manage users
      summary: Unsuspend a user
      description: Restores a suspended user's access to your accounts
      operationId: unsuspendUser
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the user
          example: 3325
      x-code-samples:
        - lang: cURL
          source: 'curl -X POST "https://api.logz.io/v1/user-management/unsuspend/11300" -H "accept: application/json" -H "X-API-TOKEN: <token>"'
      responses:
        200:
          description: successful operation


  # ::::: CLOUD SIEM RULES
  /v2/security/rules:
    post:
      tags:
        - Security rules
      summary: Create a security rule
      description: Creates a new security rule and activates it.
      operationId: createSecurityRule
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/RuleV2Request'
      responses:
        '201':
          description: successful operation
          schema:
            $ref: '#/definitions/RuleV2Response'
  /v2/security/rules/{ruleId}:
    get:
      tags:
        - Security rules
      operationId: getSecurityRule
      summary: Retrieve a security rule
      description: Retrieves a security rule by its ID.
      produces:
        - application/json
      parameters:
        - name: ruleId
          in: path
          required: true
          type: integer
          format: int32
          description:
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SecurityRuleResponse'
          headers: {}
    put:
      summary: Update a security rule
      description: Applies changes to a rule, identified by its ID. Can also be used to enable or disable a rule.
      tags:
        - Security rules
      operationId: updateSecurityRule
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/RuleV2Request'
        - name: ruleId
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/RuleV2Response'
    delete:
      summary: Delete a security rule
      description: Deletes a security rule by its ID.
      tags:
        - Security rules
      operationId: deleteSecurityRule
      produces:
        - application/json
      parameters:
        - name: ruleId
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/RuleV2Response'
          headers: {}
  /v2/security/rules/search: 
    post: 
      tags: 
        - Security rules
      operationId: searchAccountSecurityRules
      summary: Retrieve security rules
      description: Retrieve a filtered or unfiltered list of security rules for a specific Security account. The results are paginated. Filtering and sorting is optional. 
      produces:
        - application/json
      parameters: 
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/AlertsSearchRequest'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/PagedSearchResponseSecurityRuleResponse'


  /v2/security/rules/{id}/enable: 
    post: 
      tags: 
        - Security rules
      operationId: enableSecurityRule
      summary: Enable a rule
      description: Enables a security rule by its ID.
      produces:
        - application/json
      parameters:
        - name: id
          description: Rule ID
          in: path
          required: true
          type: integer
          format: int32
          example: 305572
      responses:
        default:
          description: successful operation

  /v2/security/rules/{id}/disable:
    post: 
      tags: 
        - Security rules
      operationId: disableSecurityRule
      summary: Disable a rule
      description: Disables a security rule by its ID.
      produces:
        - application/json
      parameters:
        - name: id
          description: Rule ID
          in: path
          required: true
          type: integer
          format: int32
          example: 305976
      responses:
        default:
          description: successful operation



  # ::::: SECURITY EVENTS
  /v2/security/rules/events/search:
    post:
      summary: Fetch security events
      description: >-
        Runs a search query in your Logz.io Cloud SIEM account to fetch the security events that match the query parameters.


        You have the option to filter by rule name, rule severity, and/or event timestamp, and sort the results by time and/or severity, but this is not required. If you send the query with an empty JSON body, it returns all of the events logged in your Logz.io Cloud SIEM, going as far back as your account's retention permits.


        **Note:** Run this endpoint with an API token for your Logz.io Security account.
      tags:
        - Security events
      operationId: searchSecurityRulesEvents
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/AlertsEventsSearchRequest'

      x-code-samples:
        - lang: cURL
          source: >-
            curl -L -X POST 'https://api.logz.io/v2/security/rules/events/search' \
            -H 'X-API-TOKEN: <token> \
            -H 'Content-Type: application/json' \
            --data-raw '{
                "filter": {
                    "searchTerm": "Falco",
                    "severities": [
                        "SEVERE"
                    ],
                    "timeRange": {
                        "fromDate": 1587134557,
                        "toDate": 1587137557
                    }
                },
                "sort": [
                    {
                        "field": "SEVERITY"
                    },
                    {
                        "field": "DATE"
                    }
                ],
                "pagination": {
                    "pageNumber": 1,
                    "pageSize": 25
                }
            }'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/PagedSearchResponseTriggeredAlert'
          headers: {}
  /v2/security/rules/events/logs/search:
    post:
      summary: Fetch the logs that triggered a security event
      description: >-
        Runs a search query in your Logz.io Log Monitoring account to fetch the logs that triggered the security rule and caused it to log a security event.


        This query returns an array of parsed logs linked to a single event - it isn't a bulk action. Run this query to investigate an event and increase observability into details omitted from the security event log.


        **Note:** Run this endpoint with an API token for your Logz.io Security account.
      tags:
        - Security events
      operationId: searchSecurityRuleEventLogs
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/AlertEventLogsSearchRequest'
      x-code-samples:
        - lang: cURL
          source: >-
            curl -L -X POST 'https://api.logz.io/v2/security/rules/events/logs/search' \
            -H 'X-API-TOKEN: <token> \
            -H 'Content-Type: application/json' \
            --data-raw '{
                "filter": {
                    "alertEventId": "2582e212-2ccf-5550-b253-785aa3a5468f"
                },
                "pagination": {
                    "pageNumber": 1,
                    "pageSize": 10
                }
              }'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/PagedSearchResponseMapStringObject'
          headers: {}

  # ::::: DROP FILTERS
  /v1/drop-filters/search:
    post:
      summary: Retrieve drop filters
      description: Returns all drop filters configured for the account, both active and inactive.
      tags:
        - Drop filters
      operationId: getAllForAccount
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/LogsDropFiltersPipelineDefinition'
          headers: {}

  /v1/drop-filters/{id}/activate:
    post:
      summary: Activate a drop filter
      description: Activates a drop filter identified by its ID.
      tags:
        - Drop filters
      operationId: activate
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: Drop filter ID in the Logz.io database. You can run the `/v1/drop-filters/search` endpoint to retrieve the IDs of all the drop filters in the account.
          example: d0d000ce-e63b-595b-a8f9-25032776cd28
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/LogsDropFiltersPipelineDefinition'
          headers: {}
  /v1/drop-filters/{id}/deactivate:
    post:
      summary: Deactivate a drop filter
      description: Deactivates a drop filter identified by its ID.
      tags:
        - Drop filters
      operationId: deactivate
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: Drop filter ID in the Logz.io database. You can run the `/v1/drop-filters/search` endpoint to retrieve the IDs of all the drop filters in the account.
          example: d0d000ce-e63b-595b-a8f9-25032776cd28
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/LogsDropFiltersPipelineDefinition'
          headers: {}
  /v1/drop-filters/{id}:
    delete:
      summary: Delete a drop filter
      description: Deletes a drop filter identified by its ID.
      tags:
        - Drop filters
      operationId: delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: Drop filter ID in the Logz.io database. You can run the `/v1/drop-filters/search` endpoint to retrieve the IDs of all the drop filters in the account.
          example: d0d000ce-e63b-595b-a8f9-25032776cd28
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/LogsDropFiltersPipelineDefinition'
          headers: {}
  /v1/drop-filters:
    post:
      summary: Create drop filter
      description: Creates and activates a new drop filter.
      tags:
        - Drop filters
      operationId: create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/DropFiltersCreateRequest'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/LogsDropFiltersPipelineDefinition'
          headers: {}

  # ::::: SIEM LOOKUPS
  /v1/lookup-lists:
    post:
      summary: Create lookup list
      description: Creates a new lookup list. After you create the list, you can run the endpoint to add elements to the list.
      tags:
        - Lookup lists
      operationId: createLookupList
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/LookupListCreateRequest'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/LookupList'
          headers: {}

  /v1/lookup-lists/search:
    post:
      summary: Get all/Search lookup lists
      description: Searches for lookup lists by name or ID. Can also be run without a filter to return the full list of existing lookups. Returns a paginated list of results.
      tags:
        - Lookup lists
      operationId: searchLookupLists
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/LookupListsSearchRequest'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/PagedSearchResponseLookupList'
          headers: {}
  /v1/lookup-lists/{id}:
    get:
      summary: Get lookup by ID
      description: Retrieves the general details for an existing lookup list.
      tags:
        - Lookup lists
      operationId: getLookupList
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: GUID of the lookup list.
          example: 7c985e09-3db6-5dc6-ae33-58403493e13f
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/LookupList'
          headers: {}
    put:
      summary: Update lookup list
      description: Update the name and/or description of an exisiting lookup list.
      tags:
        - Lookup lists
      operationId: updateLookupList
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: GUID of the lookup list.
          example: 7c985e09-3db6-5dc6-ae33-58403493e13f
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/LookupList'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/LookupList'
          headers: {}
    delete:
      summary: Delete lookup list
      description: Deletes a lookup list. Note that this action can affect rules, dashboards, and reports if they are dependent on the lookup list.
      tags:
        - Lookup lists
      operationId: deleteLookupList
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: GUID of the lookup list.
          example: 7c985e09-3db6-5dc6-ae33-58403493e13f
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/LookupList'
          headers: {}

  /v1/lookup-lists/{lookupListId}/elements:
    post:
      summary: Add element to a lookup list
      description: Adds a new element to an existing lookup list. An element is a field value and comment (helpful description that does not affect the lookup functionally).
      tags:
        - Lookup lists
      operationId: createLookupListElement
      produces:
        - application/json
      parameters:
        - name: lookupListId
          in: path
          required: true
          type: string
          description: GUID of the lookup list.
          example: 7c985e09-3db6-5dc6-ae33-58403493e13f
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/LookupListElementCreateRequest'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/LookupListElement'
          headers: {}
  /v1/lookup-lists/{lookupListId}/elements/search:
    post:
      summary: Get all/Search lookup elements
      description: Searches elements in a specified lookup list. Can also be run without a filter to return the full list of elements. Returns a paginated list of results.
      tags:
        - Lookup lists
      operationId: searchLookupListElements
      produces:
        - application/json
      parameters:
        - name: lookupListId
          in: path
          required: true
          type: string
          description: GUID of the lookup list.
          example: 7c985e09-3db6-5dc6-ae33-58403493e13f
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/LookupListElementsSearchRequest'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/PagedSearchResponseLookupListElement'
          headers: {}

  /v1/lookup-lists/{lookupListId}/elements/{id}:
    get:
      summary: Get element
      description: Retrieves a specific lookup element by its ID.
      tags:
        - Lookup lists
      operationId: getLookupListElement
      produces:
        - application/json
      parameters:
        - name: lookupListId
          in: path
          required: true
          type: string
          description: GUID of the lookup list.
          example: 7c985e09-3db6-5dc6-ae33-58403493e13f
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of a specific value element contained in the lookup list.
          example: 20
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/LookupListElement'
          headers: {}
    put:
      summary: Update element
      description: Changes the value and/or comment of a specific element, identified by its ID.
      tags:
        - Lookup lists
      operationId: updateLookupListElement
      produces:
        - application/json
      parameters:
        - name: lookupListId
          in: path
          required: true
          type: string
          description: GUID of the lookup list.
          example: 7c985e09-3db6-5dc6-ae33-58403493e13f
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of a specific value element contained in the lookup list.
          example: 20
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/LookupListElement'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/LookupListElement'
          headers: {}
    delete:
      summary: Delete element
      description: Deletes a specific lookup element, identified by its ID.
      tags:
        - Lookup lists
      operationId: deleteLookupListElement
      produces:
        - application/json
      parameters:
        - name: lookupListId
          in: path
          required: true
          type: string
          description: GUID of the lookup list.
          example: 7c985e09-3db6-5dc6-ae33-58403493e13f
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of a specific value element contained in the lookup list.
          example: 20
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/LookupListElement'
          headers: {}

  /v1/lookup-lists/{lookupListId}/elements/bulk-add:
    post:
      tags:
        - Lookup lists
      operationId: addLookupListElements
      summary: Add elements in bulk
      description: Adds an array of elements to an existing Lookup list and sets the expiration date for the lookup.
      produces:
        - application/json
      parameters:
        - name: defaultTTL
          in: query
          required: false
          type: integer
          format: int64
          description: Optional. The expiration date and time of the lookup list as UNIX epoch milliseconds. When this parameter is left empty, the lookup list does not expire.
        - name: lookupListId
          in: path
          required: true
          type: string
          description: GUID of the lookup list.
          example: 7c985e09-3db6-5dc6-ae33-58403493e13f
        - in: body
          name: body
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/LookupListElementCreateRequest'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/LookupListElementBulkResponse'
          headers: {}

  
  
  

definitions:
  # ::::: SIEM LOOKUPS
  PagedSearchResponseLookupListElement:
    type: object
    properties:
      total:
        type: integer
        format: int32
        description: Total number of search results. The results are relvent elements contained in the lookup list.
      results:
        type: array
        items:
          $ref: '#/definitions/LookupListElement'
      pagination:
        $ref: '#/definitions/Pagination'
  LookupListElement:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: ID of the element in the Lookup list.
      value:
        type: string
        minLength: 1
        maxLength: 80
        description: A single field value. You should ensure that the lookup list contains a list of values all mapped to the same field.
        example: 54.53.1.1
      comment:
        type: string
        description: Optional. A place to add a note or additional details about the value. For example, if the value is an IP address, the comment can identify the server.
        maxLength: 200
        example: ABC Server
      expirationDate:
        type: integer
        format: int64
        description: Optional. The expiration date and time of the lookup list as UNIX epoch milliseconds. When this parameter is left empty, the lookup list does not expire.
  LookupListElementCreateRequest:
    type: object
    required: 
      - value
    properties:
      value:
        type: string
        minLength: 1
        maxLength: 80
        description: A single field value.
        example: 54.53.1.1
      comment:
        type: string
        minLength: 0
        maxLength: 200
        description: Optional. A place to add a note or additional details about the value. For example, if the value is an IP address, the comment can identify the server.
        example: ABC Server
      expirationDate:
        type: integer
        format: int64
        description: Optional. The expiration date and time of the lookup list as UNIX epoch milliseconds. When this parameter is left empty, the lookup list does not expire.
  LookupList:
    type: object
    summary: General indentifiers for the lookup - its ID, name, and description.
    properties:
      id:
        type: string
        description: GUID of the lookup list.
        example: 7c985e09-3db6-5dc6-ae33-58403493e13f
      name:
        type: string
        minLength: 1
        maxLength: 40
        description: Name of the lookup list.
      description:
        type: string
        minLength: 0
        maxLength: 400
        description: Description of the lookup list.
  LookupListCreateRequest:
    type: object
    properties:
      name:
        type: string
        minLength: 0
        maxLength: 40
        description: Name of the lookup list. If null, the list will be named `Untitled` followed by the running number.
        default: Untitled##
      description:
        type: string
        minLength: 0
        maxLength: 400
        description: A place to add a free text description of the lookup list's purpose, uses and dependencies.
  PagedSearchResponseLookupList:
    type: object
    properties:
      total:
        type: integer
        format: int32
        description: Total number of search results.
      results:
        type: array
        items:
          $ref: '#/definitions/LookupList'
      pagination:
        $ref: '#/definitions/Pagination'
  LookupListsFilter:
    type: object
    description: Filter by names that contain a term, by lookup ID, or by both. If both properties are sent, they must both be satsified (`AND` logic).
    properties:
      searchTerm:
        type: string
        description: Filters for lookup names that contains the search term.
        example: servers
      byIds:
        type: array
        description: List of lookup IDs.
        items:
          type: string
  LookupListsSearchRequest:
    type: object
    properties:
      filter:
        $ref: '#/definitions/LookupListsFilter'
      pagination:
        $ref: '#/definitions/Pagination'

  LookupListElementsFilter:
    type: object
    description: Filter for elements by value, element ID, or by comments that contain a search term. If multiple properties are sent, they must all be satisfied (`AND` logic).
    properties:
      searchTerm:
        type: string
        description: Filters for values or comments that contain the search term.
        example: server
      byIds:
        type: array
        description: Filters by element IDs.
        items:
          type: integer
          format: int32
      byValues:
        type: array
        description: Filters by exact value. (Looks for elements that match any one of the values in the array.)
        items:
          type: string
  LookupListElementsSearchRequest:
    type: object
    properties:
      filter:
        $ref: '#/definitions/LookupListElementsFilter'
      pagination:
        $ref: '#/definitions/Pagination'

  LookupListElementBulkResponse:
    type: object
    properties:
      status:
        type: string
        enum:
          - SUCCESS
          - PARTIAL_FAILED
          - FAILED
        description: Returns the status of the request.
        example: SUCCESS
      numOfAddedElements:
        type: integer
        format: int32
        description: Total number of new elements added to the Lookup list.
        example: 32
      numOfMergedElements:
        type: integer
        format: int32
        description: Total number of elements merged with duplicate values in the existing list. (In other words, the number of existing elements that were updated by the request.)
        example: 42


  
  # ::::: ACCOUNTS DEFINITIONS
  WhoAmI:
    type: object
    properties:
      accountName:
        type: string
        description: Name of the account
        example: Jean Valjean
  AccountUtilizationSettings:
    type: object
    description: Settings for logging metrics on your account utilization, such as used and expected data volume at current indexing rate.
    properties:
      frequencyMinutes:
        type: integer
        format: int32
        description: How often utilization metrics are written to logs, in minutes
        example: 5
      utilizationEnabled:
        type: boolean
        description: If utilization metrics are written to logs, `true`. Otherwise, `false`.
        example: true
  AccountView:
    type: object
    properties:
      accountId:
        type: integer
        format: int32
      accountName:
        type: string
      accountToken:
        type: string
      active:
        type: boolean
      esIndexPrefix:
        description: Prefix of the Elasticsearch Index used to index the data.
        type: string
      isFlexible:
        type: boolean
        default: false
        description: >-
          Indicates whether the plan has **shared volume** enabled.
          
          
          If `true`, the volume of data that the account can index per calendar day is determined by 2 parameters: `reservedDailyGB` (Required) and  `maxDailyGB` (Optional, can be null).

          
          If `false`, the volume of data that the account can index per calendar day is determined only by `maxDailyGB`. The parameter `reservedDailyGB` does not apply.
        example: true
      reservedDailyGB:
        type: number
        format: float
        description: >-
          * If `isFlexible=false`, this field does not apply.
   
         
          * If `isFlexible=true`, this determines the daily volume in GB reserved for the account. This capacity is guaranteed and cannot be used by any other accounts.
        example: 3
      maxDailyGB:
        type: number
        format: float
        description: >-
          The maximum volume of data that an account can index per calendar day.


          * If `isFlexible=false` this is the only capacity reserved for use by the account. Cannot be null.


          * If `isFlexible=true` this is used to limit the account's access to shared volume. Once the data shipped to the account exceeds the account's reserved capacity, the account can continue to index data up to its `maxDailyGB`, as long as shared volume is available.
          
          
          * If null (and `isFlexible=true`), the account is uncapped and can continue to index data as long as shared volume is available.
        example: 5
      retentionDays:
        type: integer
        format: int32
        description: How long log data is stored and searchable in Kibana, in days.
  DailyUsagesList:
    type: object
    properties:
      usage:
        type: array
        items:
          $ref: '#/definitions/LHDailyCount'
  TimeBasedAccountUpdateRequest:
    type: object
    required:
      - accountName
      - sharingObjectsAccounts
    properties:
      accountName:
        type: string
        description: Name of the account
        example: AWS Lambda svr 3
      reservedDailyGB:
        type: number
        format: float
        default: null
        description: >-
          * If `isFlexible=false`, this field does not apply. Leave it null.
   
         
          * If `isFlexible=true`, this parameter is required. It determines the volume that is reserved for the account.
        example: 3
      maxDailyGB:
        type: number
        format: float
        description: >-
          The maximum volume of data that an account can index per calendar day.


          * If `isFlexible=false` this parameter can only be used to update a sub account, but not a main account. It determines the only capacity reserved for use by the account. It cannot be null.


          * If `isFlexible=true` this is used to limit the account's access to shared volume. Once the data shipped to the account exceeds the account's reserved capacity, the account can continue to index data up to its `maxDailyGB`, as long as shared volume is available.
          
          
          * If null (and `isFlexible=true`), the account is uncapped and can continue to index data as long as shared volume is available.
        example: 5
      retentionDays:
        type: integer
        format: int32
        description: This is how long log data is stored and searchable in Kibana, in days.
        minimum: 1
        example: 5
      searchable:
        $ref: "#/definitions/Searchable"
      accessible:
        $ref: "#/definitions/Accessible"
      sharingObjectsAccounts:
        type: array
        items:
          type: integer
          format: int32
          example: [ 88888, 55555 ]
        description: IDs of accounts that can access this account's data.
      docSizeSetting:
        $ref: '#/definitions/DocSizeSetting'
      utilizationSettings:
        $ref: '#/definitions/AccountUtilizationSettings'
  DetailedTimeBasedAccount:
    type: object
    properties:
      subAccountRelation:
        $ref: '#/definitions/SubAccountRelation'
      account:
        $ref: '#/definitions/AccountView'
      sharingObjectsAccounts:
        type: array
        items:
          $ref: '#/definitions/AccountView'
      utilizationSettings:
        $ref: '#/definitions/AccountUtilizationSettings'
      dailyUsagesList:
        $ref: '#/definitions/DailyUsagesList'
      docSizeSetting:
        $ref: '#/definitions/DocSizeSetting'
  LHDailyCount:
    type: object
    properties:
      date:
        type: integer
        format: int64
      bytes:
        type: integer
        format: int64
  TimeBasedAccountCreateRequest:
    type: object
    required:
      - accountName
      - email
      - sharingObjectsAccounts
      - retentionDays
    properties:
      email:
        type: string
        pattern: "^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\.[A-Za-z0-9-]+)*(\\.[A-Za-z]{2,})$"
        description: Account administrator's email address
        example: help@logz.io
      accountName:
        type: string
        description: Name of the account
        example: AWS Lambda svr 3
      reservedDailyGB:
        type: number
        format: float
        default: null
        description: >-
          * If `isFlexible=false`, don't send this field or send it null.
   
         
          * If `isFlexible=true`, this parameter is required. It determines the volume that is reserved for the account.
        example: 3
      maxDailyGB:
        type: number
        format: float
        description: >-
          The maximum volume of data that an account can index per calendar day.


          * If `isFlexible=false` this is the only capacity reserved for use by the account. Cannot be null.


          * If `isFlexible=true` this is used to limit the account's access to shared volume. Once the data shipped to the account exceeds the account's reserved capacity, the account can continue to index data up to its `maxDailyGB`, as long as shared volume is available.
          
          
          * If null (and `isFlexible=true`), the account is uncapped and can continue to index data as long as shared volume is available.
        example: 5
      retentionDays:
        type: integer
        format: int32
        description: How long log data is stored and searchable in Kibana, in days.
        minimum: 1
        example: 5
      searchable:
        $ref: "#/definitions/Searchable"
      accessible:
        $ref: "#/definitions/Accessible"
      sharingObjectsAccounts:
        type: array
        items:
          type: integer
          format: int32
          example: [ 88888, 55555 ]
        description: IDs of accounts that can access this account's data
      docSizeSetting:
        $ref: '#/definitions/DocSizeSetting'
      utilizationSettings:
        $ref: '#/definitions/AccountUtilizationSettings'
  SharingAccount:
    type: object
    properties:
      accountId:
        type: integer
        format: int32
        description: ID of the account
        example: 88888
      accountName:
        type: string
        description: Name of the account
        example: dev group 8
  SubAccountRelation:
    type: object
    description: Properties of the sub accounts related to this main account
    properties:
      ownerAccountId:
        type: integer
        format: int32
        description: ID of the main account
        example: 88765
      subAccountId:
        type: integer
        format: int32
        description: ID of the sub account
        example: 89234
      searchable:
        $ref: "#/definitions/Searchable"
      accessible:
        $ref: "#/definitions/Accessible"
      createdDate:
        type: string
        format: date-time
        description: >-
          Date this account was created.
          Format: `{yyyy}-{mm}-{dd}T{hh}:{mm}:{ss}Z`
        example: 2018-02-22T09:14:53Z
      lastUpdatedDate:
        type: string
        format: date-time
        description: >-
          Date this account was last updated.
          Format: `{yyyy}-{mm}-{dd}T{hh}:{mm}:{ss}Z`
        example: 2018-04-01T19:18:38Z
      lastUpdaterUserId:
        type: integer
        format: int32
        description: ID of the user who last updated this account
        example: 33342
      type:
        type: string
        enum:
          - OWNER_ACCOUNT
          - SUB_ACCOUNT
          - TIMELESS_INDEX
          - ALL
        description: Account type
        example: SUB_ACCOUNT
  TimeBasedAccount:
    type: object
    properties:
      accountId:
        type: integer
        format: int32
        description: ID of the account
        example: 99999
      email:
        type: null
        nullable: true
        description: Email address of the user who created the account
        example: null
      accountName:
        type: string
        description: Name of the account
        example: 404 errors
      accountToken:
        type: string
        description: Account log shipping token (unique to every account)
        example: f483abe93b
      isFlexible:
        type: boolean
        default: false
        description: >-
          Indicates whether the plan has **shared volume** enabled.
          
          
          If `true`, the volume of data that the account can index per calendar day is determined by 2 parameters: `reservedDailyGB` (Required) and  `maxDailyGB` (Optional, can be null).

          
          If `false`, the volume of data that the account can index per calendar day is determined only by `maxDailyGB`. The parameter `reservedDailyGB` does not apply and should be null.
        example: true
      reservedDailyGB:
        type: number
        format: float
        default: null
        description: >-
          * If `isFlexible=false`, this field does not apply and will be null.

          * If `isFlexible=true`, this determines the daily volume in GBs that is reserved for the account.
        example: 3
      maxDailyGB:
        type: number
        format: float
        description: >-
          The maximum volume of data that an account can index per calendar day.


          * If `isFlexible=false` this is the only capacity reserved for use by the account. Cannot be null.


          * If `isFlexible=true` this is used to limit the account's access to shared volume. Once the data shipped to the account exceeds the account's reserved capacity, the account can continue to index data up to its `maxDailyGB`, as long as shared volume is available. 
          
          
          * If null (and `isFlexible=true`), the account is uncapped and can continue to index data as long as shared volume is available.
        example: 5
      retentionDays:
        type: integer
        format: int32
        description: How long log data is retained in the Elasticsearch Index and searchable in Kibana, in days.
        example: 5
      searchable:
        $ref: "#/definitions/Searchable"
      accessible:
        $ref: "#/definitions/Accessible"
      docSizeSetting:
        $ref: '#/definitions/DocSizeSetting'
      sharingObjectsAccounts:
        type: array
        items:
          $ref: '#/definitions/SharingAccount'
        description: Accounts that have permissions to access this account's Kibana objects.
      utilizationSettings:
        $ref: '#/definitions/AccountUtilizationSettings'
  TimeBasedAccountCreationResponse:
    type: object
    properties:
      accountId:
        type: integer
        format: int32
        description: ID of the account
        example: 99999
      accountToken:
        type: string
        description: Account log shipping token (unique to this account)
        example: x93afghvexbn841h45vkjn5
  Searchable:
    type: boolean
    description: If other accounts can search this account's logs, `true`. Otherwise, `false`.
    default: false
    example: true
  Accessible:
    type: boolean
    description: If users of the main account can access this account, `true`. Otherwise, `false`.
    default: false
    example: false
  DocSizeSetting:
    type: boolean
    description: If document size is attached to logs, `true`. Otherwise, `false`.
    default: false
    example: true



  # ::::: CLOUD SIEM DEFINITIONS
  AlertEventLogsSearchRequest:
    type: object
    required:
      - filter
    properties:
      filter:
        $ref: '#/definitions/RuleEventLogsFilter'
      pagination:
        $ref: '#/definitions/Pagination'
  RuleEventLogsFilter:
    type: object
    description: Filter by the event's unique GUID to retrieve only the logs relevant to the event under investigation.
    required:
      - alertEventId
    properties:
      alertEventId:
        type: string
        description: Unique GUID of the security event in Logz.io Cloud SIEM. The GUID is returned in the results when querying to fetch security events or by inspecting an event log in the [UI](https://app.logz.io/#/dashboard/security/research/discover?) under the field `logzio-alert-event-id`.
        example: 833203f9-de71-5a12-9083-9055a6d925bb
  Pagination:
    type: object
    default: 25
    description: Default pagination is a page of 25 results. Look for the `total` field in the response for the number of available results overall, and use the pagination function to page through the results.
    properties:
      pageNumber:
        type: integer
        format: int32
        description: If you overshoot the page number, it will return empty with no results, but it won't fail the request.
        default: 1
        example: 2
      pageSize:
        type: integer
        format: int32
        description: Controls the number of results per page. Valid inputs are 1 to 1000.
        maximum: 1000
        default: 25
        example: 100
  PagedSearchResponseMapStringObject:
    type: object
    properties:
      total:
        description: Returns the total number of logs linked to the security event specified in the query. This number is fixed and not affected by pagination.
        type: integer
        format: int32
        example: 5
      results:
        type: array
        description: >-
         Array of logs returned in answer to the query. The logs are returned in their entirety and parsed.


         If the logs are no longer retained in the database, the request will return empty. You can check your account's log retention policy in your [log monitoring account](https://app.logz.io/#/dashboard/settings/usage-and-billing).
        items:
          type: object
          example: {Array of logs}
          #additionalProperties:
          #  type: object
      pagination:
        $ref: '#/definitions/Pagination'
  PagedSearchResponseTriggeredAlert:
    type: object
    properties:
      total:
        type: integer
        format: int32
        description: The total number of events returned by the query. The total entities found after filtering and sorting. This number is fixed and not affected by pagination.
        example: 500
      results:
        type: array
        items:
          $ref: '#/definitions/TriggeredAlert'
      pagination:
        $ref: '#/definitions/Pagination'
  TriggeredAlert:
    type: object
    properties:
      alertId:
        type: integer
        format: int32
        description: Unique identifier of the security rule in Logz.io Cloud SIEM. Equivalent to the log field `logzio-alert-definition-id`
        example: 453345
      name:
        type: string
        description: Name of the security rule in Logz.io Cloud SIEM
        example: AWS EC2 - Brute force SSH login attempts
      description:
        type: string
        description: Typically an explanation of the security rule's logic and suggested next steps
        example: Suggested next steps...
      alertSummary:
        type: string
        description: Equivalent to the `condition` field in the rule
        example: Alert if query '*' results GREATER_THAN_OR_EQUALS 5.00 in 10 minutes. Count on Group By '[userIdentity.userName, sourceIPAddress]'
      eventDate:
        type: integer
        format: int64
        description: UNIX timestamp in seconds showing when the rule's conditions were met and the event was triggered
        example: 1587860455
      alertWindowStartDate:
        type: integer
        format: int64
        description: UNIX timestamp in seconds of the earliest log that triggered the rule to log an event. It usually takes several logs under certain conditions to trigger a security rule.
        example: 1587856855
      alertWindowEndDate:
        type: integer
        format: int64
        description: UNIX timestamp in seconds of the latest log that triggered the rule to log an event. It usually takes several logs under certain conditions to trigger a security rule.
        example: 1587860455
      severity:
        type: string
        enum:
          - INFO
          - LOW
          - MEDIUM
          - HIGH
          - SEVERE
        description: Severity of the security event as determined by the security rule's definition
        example: SEVERE
      alertEventId:
        type: string
        description: Unique identifier of the security event in Logz.io Cloud SIEM. Equivalent to the log field `logzio-alert-event-id`
        example: 27cdcf45-ae12-581a-809e-17a6bbc9ae07
      groupBy:
        type: object
        description: A map object. Array of field:value pairs (key-value pairs) used by the security rule to aggregate results. Security rules can apply `groupBy` conditions to aggregate results by up to 3 fields. The fields differ rule by rule.
        example: {"source_ip": "122.17.45.15", "hostname":"hostname1234" }
        #additionalProperties:
         # type: map
         # maximum: 3
         # description: The fields differ by rule. There can be 1-3 fields.
      tags:
        type: array
        description: Tags are labels used to organize security rules.
        example: threat
        items:
          type: object
          example: { network_threat, recon}
      hits:
        type: integer
        format: int32
        description: Hits represent the number of logs that triggered the security rule before being aggregated by the `groupBy` condition.
        example: 30
  AlertsEventsSearchRequest:
    type: object
    properties:
      filter:
        $ref: '#/definitions/RulesEventsFilter'
        summary: Filter by rule name, rule severity, or time range.
      sort:
        description: Explicit sorting rules are not required, but recommended. Otherwise the database will determine the sorting.
        type: array
        items:
          $ref: '#/definitions/RulesEventsSortRequest'
      pagination:
        $ref: '#/definitions/Pagination'
  RulesEventsSortRequest:
    type: object
    required:
      - field
    properties:
      field:
        type: string
        description: Sort by date and/or severity. Order determines secondary sorting.
        enum:
          - DATE
          - SEVERITY
      descending:
        type: boolean
        default: true
        description: If left blank, descending sorting will result. If `false` results in ascending sorting.
  RulesEventsFilter:
    type: object
    description: Filter by rule name, rule severity, or time range.
    properties:
      searchTerm:
        type: string
        example: Falco
        description: Filter for a matching string in the security rule name. You can manually test your results in the [UI](https://app.logz.io/#/dashboard/security/rules/rule-definitions?from=0&sortBy=updatedAt&sortOrder=DESC).
      severities:
        type: array
        description: Filter by the severities of the security rules. You can manually test your results in the [UI](https://app.logz.io/#/dashboard/security/rules/rule-definitions?from=0&sortBy=updatedAt&sortOrder=DESC).
        items:
          type: string
          example: SEVERE
          enum:
            - INFO
            - LOW
            - MEDIUM
            - HIGH
            - SEVERE
      timeRange:
        $ref: '#/definitions/RulesTimeRange'
  RulesTimeRange:
    type: object
    required:
      - fromDate
      - toDate
    description: Add a timerange to filter by event timestamps that fall within the range. If applied, both the earliest and latest thresholds are required.
    properties:
      fromDate:
        type: integer
        format: int64
        example: 1587134557
        description: Absolute UNIX timestamp in seconds (not milliseconds). Your security account's retention policy determines the earliest events you'll be able to retrieve.
      toDate:
        type: integer
        format: int64
        example: 1587137557
        description: Absolute UNIX timestamp in seconds (not milliseconds).

  PagedSearchResponseSecurityRuleResponse:
    type: object
    properties:
      total:
        type: integer
        format: int32
        description: The total number of rules returned by the query. The total entities found after filtering and sorting. This number is fixed and not affected by pagination.
        example: 500
      results:
        type: array
        items:
          $ref: '#/definitions/SecurityRuleResponse'
      pagination:
        $ref: '#/definitions/Pagination'


  AlertsSearchRequest:
    type: object
    properties:
      filter:
        description: Filter by rule name, severity, and more.
        type: array
        items:
          $ref: '#/definitions/AlertsFilter'
      sort:
        description: Explicit sorting rules are not required, but recommended. Otherwise the database will determine the sorting.
        type: array
        items:
          $ref: '#/definitions/AlertsSortRequest'
      pagination:
        $ref: '#/definitions/Pagination'
  AlertsSortRequest:
    type: object
    required:
      - field
    properties:
      sortByField:
        type: string
        description: Sort by a single parameter.
        enum:
          - SEVERITY
          - NAME
          - CREATED_AT
          - UPDATED_AT
      descending:
        type: boolean
        default: true
        description: If left blank, descending sorting will result. If `false` results in ascending sorting.


  AlertsFilter:
    type: object
    properties:
      search:
        type: string
        description: Searches by rule titles that contain the string.
      severity:
        type: array
        items:
          type: string
        enum:
          - INFO
          - LOW
          - MEDIUM
          - HIGH
          - SEVERE
        description: List of rule severities, as specified by the security rule's definition
        example: 
          SEVERE
          HIGH
      updatedBy:
        type: array
        items:
          type: string
        description: Email addresses of the last users to update the rules
      createdBy:
        type: array
        items:
          type: string
        description: Email addresses of the user who created the rules.
      enabledState:
        type: list of booleans
        description: true for enabled rules, false for disabled rules.
      emailNotifications:
        type: array
        items:
          type: string
        description: List of email addresses on the recipients list to receive notifications when the rules trigger.
      tags:
        type: array
        items:
          type: object
        description: Tags are labels used to organize security rules



  # ::::: DEPLOYMENT MARKER DEFINITIONS
  CreateMarkersRequest:
    type: object
    properties:
      markers:
        type: array
        items:
          $ref: '#/definitions/MarkerDataPoint'
  MarkerDataPoint:
    type: object
    required:
      - title
      - description
    properties:
      title:
        type: string
        description: Specify a marker title, for example, a service name. The title appears in the Deployments list    your Exceptions tab.
        example: ServiceA
      tag:
        type: string
        description: Specify `DEPLOYMENT` for the Deployment marker to appear in the Deployments list in your Exceptions tab.
        default: OTHER
      example: DEPLOYMENT
      enum:
        - DEPLOYMENT
        - OTHER
      timestamp:
           type: integer
           format: int64
           description: Date of the deployment event, as Unix epoch milliseconds
           example: 1613311091679
      description:
        type: string
        description: Add a description to provide additional detail.
        example: Description with additional context
        required: true
      metadata:
        type: object
        additionalProperties:
          type: string
        example:
          version: version 5
          deployer: iron man
        description: >-
          Provides additional metadata with details of the deployment.
          
          
          (Future functionality: Metadata will be used to filter deploymentsby several dimensions. For example, to filter deployments by service and region to focus on deployments performed on a specific service and a specific region.



  # ::::: Log Insights
  PublicGetAccountInsightsRequest:
    type: object
    required:
    properties:
      startDate:
        type: integer
        format: int64
        description: UNIX timestamp in milliseconds specifying the start date for the query time frame. By default, returns the past 15 minutes ("now - 15 minutes" translated into a UNIX timestamp).
        example: 1592904389950
      endDate:
        type: integer
        format: int64
        description: UNIX timestamp in milliseconds specifying the end date for the query time frame. By default, returns the current time ("now" translated into a UNIX timestamp).
        example: 1592254800000
      from:
        type: integer
        format: int32
        description: Of the results found, the first result to return. Must be a non-negative integer.
        default: 0
        example: 0
      size:
        type: integer
        format: int32
        description: Number of results to return. Must be a positive integer between 1-100.
        default: 10
        maximum: 100
        minimum: 1
        example: 100
      insightTypes:
        type: array
        items:
          type: string
          enum:
            - PUBLIC_CI
            - LOGCEPTION
        description: Filters results by Insight type. `LOGCEPTION` filters for application insights. `PUBLIC_CI` filters for Cognitive Insights.
        default: ["PUBLIC_CI", "LOGCEPTION"]
        example: ["PUBLIC_CI", "LOGCEPTION"]
      tagNames:
        type: array
        items:
          type: string
        description: Filters results by the tag values used to categorize Insights.
        example:
      logTypes:
        type: array
        items:
          type: string
        description: Filters results by [log type](/user-guide/log-shipping/built-in-log-types.html).
        example: ["log-engine", "spark"]
      onlyNew:
        type: boolean
        description: Filters for Insights that first occurred in the selected time frame. In other words, excludes Insights that were first identified before or after the selected time range.
        default: false
        example: true
      sortBy:
        type: string
        enum:
          - FIRST_OCCURRENCE
          - LAST_OCCURRENCE
          - COUNT
        description: Sorts Insights by the selected parameters.
        default: COUNT
        example: COUNT
      asc:
        type: boolean
        description: If `false`, sorts Insights in descending order. The order depends on the selected `sortBy` paramater.
        default: false
        example: true
      search:
        type: string
        description: Searches for an Insight by its title.
        example: Exception
  PageResponsePublicAccountInsightResponse:
    type: object
    properties:
      pageSize:
        type: integer
        format: int32
        minimum: 0
        maximum: 500
        description: Number of results to return per page. Must be a positive integer between 0-500.
      from:
        type: integer
        format: int32
        minimum: 0
        maximum: 2147483647
        description: UNIX timestamp in milliseconds.
      total:
        type: integer
        format: int64
        minimum: 0
        maximum: 500
        description: Total number of results found.
      results:
        type: array
        items:
          $ref: '#/definitions/PublicAccountInsightResponse'
  PublicAccountInsightResponse:
    type: object
    properties:
      insightId:
        type: string
        description: An ID identifying the Insight in Logz.io. Can be used to track the Insight's occurrence in the environment over time.
        example: "cf484f4c381c3e408a23accc5b487947d2f68791"
      insightType:
        type: string
        enum:
          - PUBLIC_CI
          - LOGCEPTION
        description: Identifies the type of Insight as either `LOGCEPTION` (application insights) or `PUBLIC_CI` (Cognitive Insights).
        example: PUBLIC_CI
      tagName:
        type: string
        description: Tags applied to the Insight help to categorize it.
        example: ignite
      description:
        type: string
        description: A helpful description of the issue identified by the Insight. The description is generated by Logz.io.
        example: A match for the phrase - <'Could not find the language line'> was identified in the log message. As mentioned in the cited links, this may indicate that an issue has taken place that requires your attention.
      links:
        type: array
        items:
          type: string
        description: Only applicable for `PUBLIC_CI` Insights. Provides reference links to recommended resources for further investigation of the issue.
        example: https://github.com/benedmunds/CodeIgniter-Ion-Auth/issues/784 https://www.sitepoint.com/multi-language-support-in-codeigniter/ http://forum.codeigniter.com/thread-383.html https://community.invoiceplane.com/t/topic/3322 https://www.zonwhois.com/www/gwdcanada.com.html
      additionalData:
        type: object
        description: Only applicable for `LOGCEPTION` Insights. Provides relevant excerpts from the stacktrace about the exception in question.
        additionalProperties:
          type: object
      firstOccurrence:
        type: integer
        format: int64
        description: UNIX timestamp in milliseconds specifying the earliest appearance of the Insight. The lookback period is up to 6 months.
        example: 1591181276000
      lastOccurrence:
        type: integer
        format: int64
        description: UNIX timestamp in milliseconds specifying the most recent appearance of the Insight in the selected time frame.
        example: 1591253121194
      count:
        type: integer
        format: int64
        description: The number of times the Insight occurred during the selected time frame.
        example: 66
      logTypes:
        type: array
        items:
          type: string
        description:
        example: ["app-server", "user-analytics"]
      kibanaLink:
        type: string
        description: Only applicable for `LOGCEPTION` Insights. Provides a drill-down link to fetch the raw logs that match the Insight in Kibana Discover.
      insightTitle:
        type: string
        description: The title of the Insight.
        example: "Could not find the language line create_user_validation_phone_label"


  # ::::: AUDIT TRAIL DEFINITIONS
  AuditTrailEventTypesResponse:
    type: object
    properties:
      eventTypes:
        type: array
        items:
          type: string
        description: Event types in the audit trail
        example: [ "Added user", "Admin created a sub account", "Changed password", "Failed login", "Login", "Logz.io admin has enabled a sawmill configuration", "Suspended user", "User created a token", "User installed an ELK app" ]
  AuditEventData:
    type: object
    properties:
      auditEventUser:
        $ref: '#/definitions/AuditEventUser'
      date:
        type: integer
        format: int64
        description: Date of the audit event, as Unix epoch milliseconds
        example: 1527168668
      auditEventTypeTitle:
        type: string
        description: The event type
        example: Admin created a sub account
      ip:
        type: string
        description: IP address of the client device that generated the event
        example: 52.203.237.249
      geoLocation:
        type: string
        description: Geographical location of the device that made the request
        example: New York - USA
      extraDataList:
        type: array
        items:
          $ref: '#/definitions/AuditEventExtraData'
      valid:
        type: boolean
  AuditEventExtraData:
    type: object
    properties:
      fieldName:
        type: string
        description: Name of the field
        example: Account name
      oldValue:
        type: string
        description: Original value of the field
        example: Test account
      newValue:
        type: string
        description: New value of the field
        example: Apache access logs
  AuditEventTypeData:
    type: object
    properties:
      auditEventType:
        type: string
        description: Code for the event type
        example: Added user
      auditEventTypeTitle:
        type: string
        description: Description of the event type
        example: Added user
  AuditEventUser:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: ID of the user or token
        example: 5374
      fullName:
        type: string
        description: First and last name of the user, or name of the token
        example: Larry Appleton
      deleted:
        type: boolean
        description: If this user or token has been deleted, `true`. Otherwise, `false`.
        example: false
      userToken:
        type: boolean
        description: If this is a token, `true`. If this is a user, `false`.
  AuditTrailFilteredResponse:
    type: object
    properties:
      pageSize:
        type: integer
        format: int32
        minimum: 0
        maximum: 500
        description: The number of results requested
        example: 50
      from:
        type: integer
        format: int32
        minimum: 0
        maximum: 2147483647
        description: Of the results found, the first result returned
        example: 0
      total:
        type: integer
        format: int64
        minimum: 0
        maximum: 500
        description: Total number of results that met the search criteria
      results:
        type: array
        items:
          $ref: '#/definitions/AuditEventData'
      auditEventUsersList:
        type: array
        items:
          $ref: '#/definitions/AuditEventUser'
      auditEventTypesList:
        type: array
        items:
          $ref: '#/definitions/AuditEventTypeData'
  AuditTrailFilterRequest:
    type: object
    properties:
      size:
        type: integer
        format: int32
        minimum: 0
        maximum: 500
        default: 500
        description: Maximum number of results to return
        example: 150
      from:
        type: integer
        format: int32
        minimum: 0
        maximum: 2147483647
        default: 0
        description: Of the results found, the first result to return
        example: 15
      auditEventUser:
        $ref: '#/definitions/AuditEventUser'
      auditEventType:
        type: string
        description: Code for the event type
        example: Added user
      fromDate:
        type: integer
        format: int64
        description: Starting timedate, as Unix epoch milliseconds
        example: 389880000
      toDate:
        type: integer
        format: int64
        description: Ending timedate, as Unix epoch milliseconds
        example: 414763200
      sortDescending:
        type: boolean
        description: To sort results in descending order, `true`. For ascending order, `false`.
      includeFiltersData:
        type: boolean

  # ::::: CLOUDTRAIL DEFINITIONS
  CloudTrailResponse:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: Logz.io ID of the CloudTrail connector. Use this ID to perform operations on the connector using Logz.io API endpoints.
        example: 15
      accessKey:
        type: string
        description: AWS S3 access key
        example: ee07df5801500745419c6dff
      bucket:
        type: string
        description: AWS S3 bucket name
        example: cloudtrails bucket
      prefix:
        type: string
        description: Prefix of the AWS S3 bucket
        example: AWSLogs/7364988021587/myprefix
      active:
        type: boolean
        description: If `true`, the CloudTrail connector is active and logs are being shipped to Logz.io. If `false`, the connector is disabled.
        example: true
  IdBean:
    type: object
    properties:
      id:
        type: integer
        format: int32
        readOnly: true
        minimum: 1
        description: Logz.io ID of the CloudTrail connector. Use this ID to perform operations on the connector using Logz.io API endpoints.
  CloudTrailRequest:
    type: object
    properties:
      accessKey:
        type: string
        description: AWS S3 access key
        example: ee07df5801500745419c6dff
      secretKey:
        type: string
        description: AWS secret access key
        example: 506d891fe2163a511b450eddc3279539f6
      bucket:
        type: string
        description: AWS S3 bucket name
        example: LogzioBucket
      prefix:
        type: string
        description: Prefix of the AWS S3 bucket
        example: AWSLogs/7364988021587/myprefix
      active:
        type: boolean
        description: If `true`, the CloudTrail connector is active and logs are being shipped to Logz.io. If `false`, the connector is disabled.
  MessageBean:
    type: object
    properties:
      message:
        type: string
        readOnly: true

  # ::::: S3 DEFINITIONS
  S3BucketRequest:
    type: object
    required:
    - bucket
    - region
    - logsType
    properties:
      accessKey:
        type: string
        description: AWS S3 bucket access key
        example: ee07df5801500745419c6dff
      secretKey:
        type: string
        description: AWS S3 bucket secret key
        example: 506d891fe2163a511b450eddc3279539f6
      arn:
        type: string
        description: Amazon Resource Name (ARN) to uniquely identify the S3 bucket. To generate a new ARN, create a new IAM Role in your AWS admin console.
      bucket:
        type: string
        description: AWS S3 bucket name
        example: AWS bucket
      prefix:
        type: string
        description: Prefix of the AWS S3 bucket
        example: AWSLogs/7364988021587/myprefix
      active:
        type: boolean
        default: true
        description: If `true`, the S3 bucket connector is active and logs are being shipped to Logz.io. If `false`, the connector is disabled.
        example: true
      addS3ObjectKeyAsLogField:
        type: boolean
        default: false
        description: If `true`, enriches logs with a new field detailing the S3 object key.
        example: true
      region:
        type: string
        description: Specify one supported AWS region.
        enum:
          - US_EAST_1
          - US_EAST_2
          - US_WEST_1
          - US_WEST_2
          - EU_WEST_1
          - EU_WEST_2
          - EU_WEST_3
          - EU_CENTRAL_1
          - AP_NORTHEAST_1
          - AP_NORTHEAST_2
          - AP_SOUTHEAST_1
          - AP_SOUTHEAST_2
          - SA_EAST_1
          - AP_SOUTH_1
          - CA_CENTRAL_1
      logsType:
        type: string
        enum:
          - elb
          - vpcflow
          - S3Access
          - cloudfront
        description: Specify the log type you will be sending to Logz.io. As a result, Logz.io will apply the appropriate parsing pipeline. [Learn more about parsing options supported by Logz.io](/user-guide/log-shipping/built-in-log-types.html).
        example: elb
  S3BucketResponse:
    type: object
    required:
    - bucket
    - region
    - logsType
    properties:
      accessKey:
        type: string
        description: AWS S3 bucket access key
        example: ee07df5801500745419c6dff
      secretKey:
        type: string
        description: AWS S3 bucket secret key
        example: 506d891fe2163a511b450eddc3279539f6
      arn:
        type: string
        description: Amazon Resource Name (ARN) to uniquely identify the S3 bucket. To generate a new ARN, create a new IAM Role in your AWS admin console.
      bucket:
        type: string
        description: AWS S3 bucket name
        example: AWS bucket
      prefix:
        type: string
        description: Prefix of the AWS S3 bucket
        example: AWSLogs/7364988021587/myprefix
      active:
        type: boolean
        default: true
        description: If `true`, the S3 bucket connector is active and logs are being fetched to Logz.io. If `false`, the connector is disabled.
        example: true
      addS3ObjectKeyAsLogField:
        type: boolean
        default: false
        description: If `true`, enriches logs with a new field detailing the S3 object key.
        example: true
      region:
        type: string
        description: Specify one supported AWS region.
        enum:
          - US_EAST_1
          - US_EAST_2
          - US_WEST_1
          - US_WEST_2
          - EU_WEST_1
          - EU_WEST_2
          - EU_WEST_3
          - EU_CENTRAL_1
          - AP_NORTHEAST_1
          - AP_NORTHEAST_2
          - AP_SOUTHEAST_1
          - AP_SOUTHEAST_2
          - SA_EAST_1
          - AP_SOUTH_1
          - CA_CENTRAL_1
      logsType:
        type: string
        enum:
          - elb
          - vpcflow
          - S3Access
          - cloudfront
        description: Specifies the log type being sent to Logz.io. Determines the parsing pipeline used to parse and map the logs. [Learn more about parsing options supported by Logz.io](/user-guide/log-shipping/built-in-log-types.html).
        example: elb
  AWSAssumeRoleDetails:
    type: object
    properties:
      logzioAWSAccountId:
        type: string
        description: Logz.io account ID. Provide this account ID when creating a new AWS IAM Role.
        example:
      assignedExternalId:
        type: string
        description: Logz.io external ID. Provide this external ID when creating a new AWS IAM Role.
        example:


  # ::::: NOTIFICATION ENDPOINTS DEFINITIONS
  EndpointUpsertResponse:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: "ID of the notification endpoint. If the API call was made where `test=true`, then no changes are made to the endpoint. In this case, the response body contains `{\"id\": -1}` to indicate that a test message was sent."
        example: 88
  SlackEndpointUpsertRequest:
    type: object
    properties:
      title:
        type: string
        description: Name of the endpoint
        example: New Slack endpoint
      description:
        type: string
        description: Detailed description of the endpoint
        example: Sends notifications to logzio-alerts channel
      url:
        type: string
        description: Your Slack webhook URL
        example: https://hooks.slack.com/services/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
  CustomEndpointUpsertRequest:
    type: object
    properties:
      title:
        type: string
        description: Name of the endpoint
        example: New custom endpoint
      description:
        type: string
        description: Detailed description of the endpoint
        example: Sends notifications to my custom endpoint
      url:
        type: string
        description: URL where the notification will be sent
        example: https://my.custom-endpoint.com
      method:
        type: string
        description: The HTTP used to send the notification
        example: POST
      headers:
        type: string
        description: Header parameters to include, as comma-separated key-value pairs
        example: authKey=6e30-60a9-3591
      bodyTemplate:
        type: object
        description: JSON object that serves as the template for the message body.
        additionalProperties:
          type: object
        example: {"subject": "Alert from Logz.io", "message": {"severity": "LOW", "body": "Check Logz.io for log activity"}}
  PagerDutyEndpointUpsertRequest:
    type: object
    properties:
      title:
        type: string
        description: Name of the endpoint
        example: PagerDuty endpoint
      description:
        type: string
        description: Detailed description of the endpoint
        example: Sends notifications to PagerDuty
      serviceKey:
        type: string
        description: API key from PagerDuty
        example: 94ad63254a1397a51a1ae340c4f10890
  BigPandaEndpointUpsertRequest:
    type: object
    properties:
      title:
        type: string
        description: Name of the endpoint
        example: BigPanda endpoint
      description:
        type: string
        description: Detailed description of the endpoint
        example: Sends notifications to BigPanda
      apiToken:
        type: string
        description: API authentication token from BigPanda
        example: 94ad63254a1397a51a1ae340c4f10890
      appKey:
        type: string
        description: Application key from BigPanda
        example: c687f9231619d7d7b959f33e4cc821a5
  DatadogEndpointUpsertRequest:
    type: object
    properties:
      title:
        type: string
        description: Name of the endpoint
        example: Datadog endpoint
      description:
        type: string
        description: Detailed description of the endpoint
        example: Sends notifications to Datadog
      apiKey:
        type: string
        description: API key from Datadog
        example: c687f9231619d7d7b959f33e4cc821a5
  VictoropsEndpointUpsertRequest:
    type: object
    required:
      - messageType
      - routingKey
      - serviceApiKey
    properties:
      title:
        type: string
        description: Name of the endpoint
        example: VictorOps endpoint
      description:
        type: string
        description: Detailed description of the endpoint
        example: Sends notifications to VictorOps
      routingKey:
        type: string
        description: Alert routing key from VictorOps
        example: devops
      messageType:
        type: string
        description: VictorOps REST API `message_type`. For more information, see [VictorOps knowledge base](https://help.victorops.com/knowledge-base/victorops-restendpoint-integration/).
        example: WARNING
      serviceApiKey:
        type: string
        description: API key from VictorOps
        example: c687f9231619d7d7b959f33e4cc821a5
  Endpoint:
    type: object
    properties:
      endpointType:
        type: string
        enum:
          - BigPanda
          - Slack
          - Datadog
          - Custom
          - PagerDuty
          - VictorOps
        description: The notification endpoint type that will receive alert messages
        example: Slack
      id:
        type: integer
        format: int32
        description: ID of the notification endpoint
        example: 88
      title:
        type: string
        description: Name of the endpoint
        example: Slack
      description:
        type: string
        description: Detailed description of the endpoint
        example: Endpoint for sending alerts to Slack

  # ::::: KIBANA IMPORT/EXPORT DEFINITIONS
  KibanaExportResponse:
    type: object
    properties:
      kibanaVersion:
        type: string
        readOnly: true
        description: The version of Kibana used at the time of export
        example: 4.0.0-beta3
      hits:
        type: array
        readOnly: true
        items:
          type: object
        description: Exported Kibana objects
  KibanaExportRequest:
    type: object
    required:
      - type
    properties:
      type:
        type: string
        enum:
          - search
          - visualization
          - dashboard
        description: The object type to export
  KibanaImportResponse:
    type: object
    properties:
      created:
        type: array
        readOnly: true
        items:
          type: string
          example: E-commerce-App-Transactions-overtime
        description: Name of Kibana objects that were created
      updated:
        type: array
        readOnly: true
        items:
          type: string
          example: HTTP-Response-over-time
        description: Names of the Kibana objects that were overwritten. Objects are shown here only if `override` was `true` in the import call.
      ignored:
        type: array
        readOnly: true
        items:
          type: string
          example: Transaction-overtime
        description: Names of the Kibana objects that were not overwritten. Objects are shown here only if `override` was `false` in the import call.
      failed:
        type: array
        readOnly: true
        items:
          type: string
          example: Apache-Response-Over-Time
        description: Names of the Kibana objects that could not be created, updated, or ignored.
  KibanaImportRequest:
    type: object
    properties:
      kibanaVersion:
        type: string
        description: The version of Kibana used at the time of export. This must match the current version of Kibana that you're importing to.
        example: 4.0.0-beta3
      override:
        type: boolean
        description: >-
          To update an existing object with the same ID, `true`. Otherwise, `false`.


          If override is `true`, response message shows overwritten objects as `updated`. If override is `false`, no existing objects are updated, and response message shows these objects as `ignored`.
        example: false
      hits:
        type: array
        items:
          type: object
          additionalProperties:
            type: object
        description: >-
          Each JSON object in the array represents a discrete Kibana object.


          **Note:** As a best practice, import only objects that were exported from Kibana.

  # ::::: SEARCH, SCROLL DEFINITIONS
  ScrollResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
        readOnly: true
        example: 200
      scrollId:
        type: string
        readOnly: true
        description: Keep passing this ID in the request until you've retrieved all of the results. Copy this ID and pass it as the field `scroll_id` in a request to the same endpoint to retrieve the next page of results. (Remember to first clear the request body of all other parameters.)
        example: DnF1ZXJ5VGhlbkZldGNoCQAAAAAWXRbqFlNpSWRrTUtXUUR1N1pJbG9uSkJINncAAAAAFp6B-xZTTVFrMGt4eVFnZXhQZV9YbVRrU3NnAAAAABakA8QWNjY1RUZtdWZRS1NZZWt1ZERTNHNaQQAAAAAWXRbrFlNpSWRrTUtXUUR1N1pJbG9uSkJINncAAAAAFl0W7BZTaUlka01LV1FEdTdaSWxvbkpCSDZ3AAAAABQ1nb4WVjRyRlUxZWRUU0dzbTV5VVVqYkhxdwAAAAAUdHVqFlF0b3Znei1ZUXgtZEkyZkR3M0pMbGcAAAAAFvGs6hZKVklxaXIyZ1NOQzF5NHg1cmhtVDV3AAAAABR0dWkWUXRvdmd6LVlReC1kSTJmRHczSkxsZw==
      hits:
        type: string
        readOnly: true
        description: Query results in stringified JSON format
  ScrollRequest:
    type: object
    properties:
      query:
        type: object
        description: >-
          Add a search query to receive the `scrollID` in the result.


          The query can take any of the parameters described in the [Elasticsearch Search API DSL documentation](https://www.elastic.co/guide/en/elasticsearch/reference/6.8/search.html) with the exceptions stated below.


          You can only add the `query` parameters if you are not passing the `scroll_id` in the request.

          #### Limitations

          * The query can only run on 2 consecutive indexes. By default, the query runs on data sent today and yesterday. You can also add a filter on `timestamp` to search a smaller time frame.

          * When using `query_string`, `allow_leading_wildcard` must be set to `false` to disable leading wildcards. In other words, the query can't start with `*` or `?`

          * Can't use `fuzzy_max_expansions`,  `max_expansions`, or `max_determinized_states`
      size:
        type: integer
        format: int32
        description: Number of results to return
        default: 10
        maximum: 1,000
        example: 50
      from:
        type: integer
        format: int32
        minimum: 0
        description: Of the results found, the first result to return
        example: 0
      sort:
        type: array
        items:
          type: object
        description: >-
          #### Limitations

          * Can't sort on analyzed fields, such as the `message` field
      _source:
        type: object
        description: >-
          The object `includes` specifies an array of strings specifying an array of fields to return.

          * If you omit `_source` from the request, all fields are returned.

          * If you pass `'_source': false`, it will exclude the `_source` field from the results.
        properties:
          includes:
            type: array
            description: Array of fields to return
            example: ["message"]
        items:
          - type: string
            description: Field to return.
      post_filter:
        type: object
      scroll:
        type: string
        description: >-
          These time units are supported:

          <table>
            <thead><th>Unit</th><th>Description</th></thead>
            <tr><td><code>m</code></td><td>minutes</td></tr>
            <tr><td><code>s</code></td><td>seconds</td></tr>
            <tr><td><code>ms</code></td><td>milliseconds</td></tr>
            <tr><td><code>micros</code></td><td>microseconds</td></tr>
            <tr><td><code>nanos</code></td><td>nanoseconds</td></tr>
          </table>


          #### Limitations

          * Time search must be ≤ 5 minutes. If no time is specified, default is `1m` (1 minute).

  # ::::: SHARED TOKENS DEFINITIONS
  QueryFilter:
    type: object
    required:
      - field
      - value
    properties:
      id:
        type: integer
        format: int32
        description: ID of the shared token filter
        example: 339
      field:
        type: string
        pattern: '^[a-zA-Z0-9_@.-]+$'
        description: The field to filter
      value:
        type: string
        pattern: '^[a-zA-Z0-9_@.-]+$'
        description: The filter query
      description:
        type: string
        description: Name of the filter
        example: 503 responses
  SharedToken:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: ID of the shared token
        example: 1241
      name:
        type: string
        description: Descriptive name of the token
        example: Snapshotting token
      token:
        type: string
        description: The token
        example: 6c36edf51-cf93883aa35-5bc6ce6-7bcfe60d87
      filters:
        type: array
        uniqueItems: true
        items:
          type: integer
          format: int32
        description: Array of filter IDs attached to each token. If no filter is attached, `null`.
        example: [339, 340]
  CreateSharedTokenRequest:
    type: object
    properties:
      tokenName:
        type: string
        default: string
        description: Name of the token
        example: Support team token
      filters:
        type: array
        uniqueItems: true
        items:
          type: integer
          format: int32
        description: IDs of filters to attach to the token
        example: [ 339 ]
  UpdateSharedTokenRequest:
    type: object
    required:
      - filters
    properties:
      filters:
        type: array
        uniqueItems: true
        items:
          type: integer
          format: int32
          description: ID of the filter
          example: 339
        description: IDs of filters to attach to the token. To remove all filters, use an empty array `[]`.

  # ::::: API TOKENS DEFINITIONS
  ApiTokenResponse:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: ID of the newly created API token for the sub account
        example: 7386
      name:
        type: string
        description: The name of the newly created API token for the sub account. Uses the name provided in the request.
        example: newTokenTest999
      token:
        type: string
        description: The API token
        example: c498fbc3-a3ac-4676-ad09-689854b5cbbd"
      createdAt: 
        type: Instant
        description: The time at which the new sub account API token was created 
        example: 1621858311.000000000
  CreateApiTokenRequest:
    type: object
    properties:
      name:
        type: string
        default: string
        description: The name provided in the request for a new API token for the sub account
        example: newTokenTest999
      accountId:
        type: integer
        format: int32
        description: Logz.io sub account ID.
        example: 160343

  # ::::: SNAPSHOTS DEFINITIONS
  SnapshotCreateResponse:
    type: object
    properties:
      snapshotId:
        type: integer
        format: int32
        description: ID of the snapshot
        example: 2049
  SnapshotCreateRequest:
    type: object
    required:
      - snapshotSavedObjectId
      - snapshotTimeZone
      - snapshotType
      - timeFrameFrom
      - timeFrameTo
    properties:
      snapshotType:
        type: string
        enum:
          - DASHBOARD
          - VISUALIZATION
        description: The object type to share
      snapshotSavedObjectId:
        type: string
        description: ID of the object to share. If you don't know the object ID, you can use the [/kibana/export](#operation/exportSavedObjects) endpoint.
        example: 11f6a669-4f21-6313-dd83-319dbfc8ff96
      slackWebhookUrls:
        type: array
        items:
          type: string
        description: >-
          URLs of Slack webhooks that you want to send this snapshot to.
          <br> At least one of `emails`, `slackWebhookUrls`, and `endpoints` is required with each request.
          If all three are missing, the request will fail.
        example: ["https://hooks.slack.com/services/CC29C43F8/7E6E833FB/Ebe297580E7FaC354F9D4d7"]
      endpoints:
        type: array
        items:
          type: integer
          format: int32
        description: >-
          IDs of notification endpoints that you want to send this snapshot to
          <br> At least one of `emails`, `slackWebhookUrls`, and `endpoints` is required with each request.
          If all three are missing, the request will fail.
      emails:
        type: array
        items:
          type: string
        description: >-
          Email addresses that you want to send this snapshot to
          <br> At least one of `emails`, `slackWebhookUrls`, and `endpoints` is required with each request.
          If all three are missing, the request will fail.
      message:
        type: string
        description: Message to send to the shared object recipients
        example: Take a look at these Apache logs, let me know if you want me to do anything about it
      timeFrameFrom:
        type: integer
        format: int64
        description: Starting timedate of the visualization, as a Unix epoch integer.
        example: 389836800
      timeFrameTo:
        type: integer
        format: int64
        description: Ending timedate of the visualization, as a Unix epoch integer.
        example: 414720000
      snapshotTimeZone:
        type: string
        description: Time zone to use in `timeFrameFrom` and `timeFrameTo`
        example: UTC
      queryString:
        type: string
        description: Search query
        example: "type:example"
      darkTheme:
        type: boolean
        description: To send the object with Kibana dark theme colors, `true`. Otherwise, `false`.
  SnapshotGetResponse:
    type: object
    properties:
      snapshotId:
        type: integer
        format: int32
        description: ID of the snapshot
        example: 3094
      accountId:
        type: integer
        format: int32
        description: ID of the account
        example: 5555
      snapshotType:
        type: string
        enum:
          - DASHBOARD
          - VISUALIZATION
        description: The object type
        example: VISUALIZATION
      status:
        type: string
        enum:
          - SUCCESS
          - FAILED
          - IN_PROGRESS
        description: Status of the snapshot capture operation
        example: SUCCESS
      snapshotSavedObjectName:
        type: string
        description: Name of the object captured in the snapshot
        example: Mysql response times percentiles
      imageUrl:
        type: string
        description: Web address where the snapshot image is stored
        example: https://snapshotter-logzio-prod.s3.amazonaws.com/1234/567890/snapshots/8843_3094_dC6pBjbrWc1lfN7Gob82oJuSUxTGbm8D6hDE1TcR1pVzIVO0TsB3tuZEZs1YpOGh.png
      appLinkUrl:
        type: string
        description: A link to the snapshot in the Logz.io app
        example: https://app.logz.io/#/dashboard/kibana?kibanaRoute=%2Fvisualize%2Fedit%a4d365e001-5bc9-4851-1933-a70b45a67e9d%3F_g%3D%2528time%253A%2528from%253A%25272018-06-02T15
      message:
        type: string
        description: Message to send to snapshot recipients
        example: Hey, let me know if you need me to do anything about this.
      timeFrameFrom:
        type: integer
        format: int64
        description: Starting timedate of the visualization, as a Unix epoch integer.
        example: 389836800
      timeFrameTo:
        type: integer
        format: int64
        description: Ending timedate of the visualization, as a Unix epoch integer.
        example: 414720000
      snapshotTimeZone:
        type: string
        description: Time zone to use in `timeFrameFrom` and `timeFrameTo`
        example: UTC
  SnapshotNotification:
    type: object
    properties:
      id:
        type: integer
        format: int32
      type:
        type: string
        enum:
          - EMAIL
          - SLACK
      address:
        type: string
      status:
        type: string
        enum:
          - PENDING
          - IN_WORK
          - NEED_RETRY
          - FAILED
          - SUCCESS
  SnapshotRequest:
    type: object
    properties:
      id:
        type: integer
        format: int32
      snapshotType:
        type: string
        enum:
          - DASHBOARD
          - VISUALIZATION
          - SAVED_SEARCH
      snapshotSavedObjectName:
        type: string
      snapshotUrl:
        type: string
      appLinkUrl:
        type: string
      recipients:
        type: array
        items:
          $ref: '#/definitions/SnapshotNotification'
      message:
        type: string
      timeFrameFrom:
        type: integer
        format: int64
      timeFrameTo:
        type: integer
        format: int64
      snapshotTimeZone:
        type: string

  # ::::: USER MANAGEMENT DEFINITIONS
  User:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: ID of the user
        example: 33265
      username:
        type: string
        description: Email address used to sign in to Logz.io
        example: steve@winslows.com
      fullName:
        type: string
        description: First and last name of the user
        example: Stefan Urkel
      accountID:
        type: integer
        format: int32
        description: Logz.io account ID.
        example: 55555
      roles:
        type: array
        items:
          type: integer
          format: int32
        description: For user access, `2`. For admin access, `3`.
        example: [3]
      active:
        type: boolean
        description: If the user is active, `true`. If the user is suspended, `false`.
        example: true
  UserManagementUpsertResponse:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: ID of the user
        example: 13485
  UserManagementUpsertRequest:
    type: object
    required:
      - fullName
      - username
      - roles
      - accountID
    properties:
      username:
        type: string
        pattern: >-
          ^[_A-Za-z0-9-\+]+(\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\.[A-Za-z0-9-]+)*(\.[A-Za-z]{2,})$
        description: Email address used to sign in to Logz.io
        example: drvenkman@gbusters.com
      fullName:
        type: string
        description: The user's first and last name
        example: Peter Venkman
      accountID:
        type: integer
        format: int32
        description: ID of the account attached to the user
      roles:
        type: array
        items:
          type: integer
          format: int32
        description: For user access, `2`. For admin access, `3`.
        example: [2]

  # ::::: DROP FILTERS
  DropFiltersCreateRequest:
    type: object
    properties:
      logType:
        type: string
        nullable: true
        description: Filters for the [log type](/user-guide/log-shipping/built-in-log-types.html).
        example: apache
      fieldConditions:
        type: array
        items:
          $ref: '#/definitions/FieldCondition'


  FieldCondition:
    type: object
    properties:
      fieldName:
        type: string
        description: Exact field name in your Kibana mapping for the selected `logType`.
        example: response
      value:
        type: object
        description: Exact field value. The filter looks for an exact value match of the entire string.
        example: 200

  LogsDropFiltersPipelineDefinition:
    type: object
    properties:
      id:
        type: string
        description: Drop filter ID in the Logz.io database. You can run the `/v1/drop-filters/search` endpoint to retrieve the IDs of all the drop filters in the account.
        example: f54406c1-b4ad-5969-8542-f6a3e9df5c79
      active:
        type: boolean
        description: If `true`, the drop filter is active and logs that match the filter are dropped before indexing. If `false`, the drop filter is disabled.
        example: true
      logType:
        type: string
        description: Filters for the [log type](/user-guide/log-shipping/built-in-log-types.html).
        example: apache
      fieldConditions:
        type: array
        description: Filters for an exact match of a field:value pair.
        items:
          $ref: '#/definitions/FieldCondition'


  # ::::: Archive DEFINITIONS
  ArchiveSettings:
    type: object
    required:
    - storageType
    properties:
      storageType:
        type: string
        enum:
          - S3
          - BLOB
        description: Specifies the storage provider. If `S3`, the   `amazonS3StorageSettings` are relevant. If `BLOB`, the `azureBlobStorageSettings` are relevant.
        example: S3
      enabled:
        type: boolean
        description: If `true`, archiving is currently enabled.
        default: true
        example: true
      compressed:
        type: boolean
        description: If `true`, logs are compressed before they are archived.
        default: true
        example: true
      amazonS3StorageSettings:
        description: Applicable settings when the `storageType` is `S3`.
        $ref: '#/definitions/S3StorageSettings'
      azureBlobStorageSettings:
        description: Applicable settings when the `storageType` is `Blob`.
        $ref: '#/definitions/BlobSettings'
  ArchiveSettingsResponse:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: Unique ID of the archive settings.
        example: 323
      settings:
        $ref: '#/definitions/ArchiveSettings'
  BlobSettings:
    type: object
    description: Applicable settings when the `storageType` is `Blob`. For detailed instructions about setting up a storage container in Azure and locating the required parameters, [click here](/user-guide/archive-and-restore/azure-blob-permissions/).
    required:
    - tenantId
    - clientId
    - clientSecret
    - accountName
    - containerName
    properties:
      tenantId:
        type: string
        description: Azure Directory (tenant) ID. The Tenant ID of the AD app. Go to Azure Active Directory > App registrations and select the app to see it.
      clientId:
        type: string
        description: Azure application (client) ID. The Client ID of the AD app, found under the App Overview page. Go to Azure Active Directory > App registrations and select the app to see it.
      clientSecret:
        type: string
        description: Azure client secret. Password of the Client secret, found in the app's Certificates & secrets page. Go to Azure Active Directory > App registrations and select the app. Then select Certificates & secrets to see it.
      accountName:
        type: string
        description: Azure Storage account name. Name of the storage account that holds the container where the logs will be archived.
      containerName:
        type: string
        description: Name of the container in the Storage account. This is where the logs will be archived.
      path:
        type: string
        nullable: true
        description: Optional virtual sub-folder specifiying a path within the container. Logs will be archived under the path “{container-name}/{virtual sub-folder}”. Avoid leading and trailing slashes (/). For example, the prefix “region1” is good, but “/region1/” is not.
  S3IamCredentials:
    type: object
    properties:
      arn:
        type: string
        description: Amazon Resource Name (ARN) to uniquely identify the S3 bucket.
  S3SecretCredentials:
    type: object
    required:
    - accessKey
    - secretKey
    description: Authentication with S3 Secret Credentials is supported for backward compatibility. IAM roles are strongly recommended.
    properties:
      accessKey:
        type: string
      secretKey:
        type: string
  S3StorageSettings:
    type: object
    required:
    - credentialsType
    - path
    description: Applicable settings when the `storageType` is `S3`.
    properties:
      credentialsType:
        description: Specifies which credentials will be used for authentication. The options are either `KEYS` with `s3SecretCredentials`, or `IAM` with `s3IamCredentials`.
        type: string
        enum:
          - IAM
          - KEYS
      path:
        type: string
        description: >-
          Specify a path to the **root** of the S3 bucket. (Currently, archiving to a sub-bucket is supported, but not restoring from one.)

          **Unique buckets** - It is important to archive each account/sub-account to a separate S3 bucket.
      s3SecretCredentials:
        $ref: '#/definitions/S3SecretCredentials'
      s3IamCredentials:
        $ref: '#/definitions/S3IamCredentials'
  TestStorageRequest:
    type: object
    properties:
    id:
      type: integer
      format: int32
    archiveSettings:
      $ref: '#/definitions/ArchiveSettings'

  # ::::: SHIPPING TOKENS DEFINITIONS
  ShippingTokensModel:
    type: object
    properties:
      name:
        type: string
        description: This token's name.
        example: apac prod
      id:
        type: integer
        format: int32
        description: This token's ID.
        example: 786351
      token:
        type: string
        description: The token itself.
        example: 6bLXmMA6FLibc7ySSqNcCfvbhtqT0rPS
      updatedAt:
        type: integer
        format: int64
        description: Unix timestamp of when this token was last updated.
        example: 414720000
      updatedBy:
        type: string
        description: Email address of the last user to update this token.
        example: shalom.the.mighty@gmail.com
      createdAt:
        type: integer
        format: int64
        description: Unix timestamp of when this token was created.
        example: 389836800
      createdBy:
        type: string
        description: Email address of the user who created this token.
        example: you.got.this@gmail.com
      enabled:
        type: boolean
        description: If this token is enabled, `true`. If it's disabled, `false`.
  ShippingTokensRequest:
      type: object
      properties:
        name:
          type: string
          description: Descriptive name for this token.
          example: staging eu
        enabled:
          type: boolean
          default: true
          description: To enable this token, `true`. To disable, `false`.
  ShippingTokensLimitsResponse:
      type: object
      properties:
        maxAllowedTokens:
          type: integer
          format: int32
          description: The number of log shipping tokens this account can have.
          example: 50
        numOfEnabledTokens:
          type: integer
          format: int32
          description: The number of log shipping tokens currently enabled for this account.
          example: 27
  ShippingTokensSearchRequest:
    type: object
    properties:
      filter:
        $ref: '#/definitions/ShippingTokensFilterRequest'
      sort:
        type: array
        description: Sorts the results before returning them.
        items:
          $ref: '#/definitions/ShippingTokensSortRequest'
      pagination:
        $ref: '#/definitions/Pagination'
  ShippingTokensSortRequest:
      type: object
      properties:
        field:
          type: string
          enum:
            - CREATED_AT
            - NAME
          description: >-
            To sort by creation date, use `"createdAt"`.
            To sort by name, use `"name"`.
          example: NAME
        descending:
          type: boolean
          description: >-
            For descending order, use `true`.
            For ascending order, use `false`.

  ShippingTokensFilterRequest:
      type: object
      description: Filters your search for token attributes.
      properties:
        enabled:
          type: boolean
          description: >-
            Set to `true` to filter for enabled tokens.
            Set to `false` to filter for disabled tokens.
  PagedSearchResponseShippingTokensModel:
    type: object
    properties:
      total:
        type: integer
        format: int32
      results:
        type: array
        items:
          $ref: '#/definitions/ShippingTokensModel'
      pagination:
        $ref: '#/definitions/Pagination'


  # ::::: Alert DEFINITIONS
  Aggregation:
    type: object
    description: Specifies a trigger condition that acts as a threshold.
    properties:
      aggregationType:
        type: string
        description: >-
          Specifies the aggregation operator.


          * If `COUNT`, `fieldToAggregateOn` must be null, and `groupBy` fields must not be empty.

          * If `NONE`, `fieldToAggregateOn` must be null, and `groupBy` field must not be empty (or null).


          * If any other operator type (other than `NONE` or `COUNT`), `fieldToAggregateOn` must not be null.
        enum:
          - SUM
          - MIN
          - MAX
          - AVG
          - COUNT
          - UNIQUE_COUNT
          - NONE
      fieldToAggregateOn:
        type: string
        description: >-
          Selects the field on which to run the aggregation for the trigger condition.


          * Cannot be a field already in use for `groupBy`.
  AlertV2Response:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: Logz.io alert ID.
        example: 627816
      updatedAt:
        type: integer
        format: int64
        description: Date and time in UTC when the alert was last updated.
        example: 2020-04-02T18:58:16.000Z
      updatedBy:
        type: string
        description: Email of the user who last updated the alert.
        example: tomer@logz.io
      createdAt:
        type: integer
        format: int64
        description: Date and time in UTC when the alert was first created.
        example: 2020-02-02T18:58:16.000Z
      createdBy:
        type: string
        description: Email of the user who first created the alert.
        example: tomer@logz.io
      enabled:
        type: boolean
        description: If `true`, the alert is currently active.
        exampe: true
      title:
        type: string
        description: Alert title.
        example: Excessive WARN levels in PROD
      description:
        type: string
        description: A description of the event, its significance, and suggested next steps or instructions for the team.
        example: Steps to remediate...
      tags:
        type: array
        items:
          type: string
        description: Tags for filtering alerts and triggered alerts. Can be used in Kibana Discover, dashboards, and more.
        example: [network, aws]
      output:
        $ref: '#/definitions/AlertOutput'
      searchTimeFrameMinutes:
        type: integer
        minimum: 5
        maximum: 1440
        format: int32
        description: >-
          The time frame for evaluating the log data is a sliding window, with 1 minute granularity.


          The recommended minimum and maximum values are not validated, but needed to guarantee the alert's accuracy.


          The minimum recommended time frame is 5 minutes, as anything shorter will be less reliable and unnecessarily resource-heavy.


          The maximum recommended time frame is 1440 minutes (24 hours). The alert runs on the index from today and yesterday (in UTC) and the maximum time frame increases throughout the day, reaching 48 hours exactly before midnight UTC.
      subComponents:
        type: array
        description: Determines when the alert should trigger using any combination of a search query, filters, group by aggregations, accounts to search, and trigger conditions.
        items:
          $ref: '#/definitions/SubAlert'
      correlations:
        $ref: '#/definitions/SubAlertCorrelation'
  AlertOutput:
    type: object
    description: Automatically sends out notifications with sample results when the alert triggers.
    properties:
      recipients:
        $ref: '#/definitions/AlertRecipients'
      suppressNotificationsMinutes:
        type: integer
        format: int32
        minimum: 5
        maximum: 1440
        description: Add a waiting period in minutes to space out notifications. (The alert will still trigger but will not send out notifications during the waiting period.)
        example: 60
      type:
        type: string
        description: Selects the output format for the alert notification. If the alert has no aggregations/group by fields, `JSON` offers the option to send full sample logs without selecting specific fields.
        enum:
          - JSON
          - TABLE
  AlertQuery:
    type: object
    description: Determines when the alert should trigger using any combination of a search query, filters, group by aggregations, accounts to search, and trigger conditions.
    properties:
      query:
        type: string
        description: >-
          Provide a Kibana search query written in Lucene syntax. The search query together with the filters select for the relevant logs.


          Cannot be null - send an asterisk wildcard `*` if not using a search query.
        default: "*"
        nullable: false
        example: type:apache_access
      filters:
        $ref: '#/definitions/BoolFilter'
      groupBy:
        type: array
        nullable: true
        description: Specify 1-3 fields by which to group the results and count them. If you apply a group by operation, the alert returns a count of the results aggregated by unique values.
        items:
          type: string
        maxItems: 3
        minItems: 0
      aggregation:
        $ref: '#/definitions/Aggregation'
      shouldQueryOnAllAccounts:
        type: boolean
        default: true
        example: false
        description: Only applicable when the alert is run from the main account. If `true`, the alert runs on the main account and all associated searchable sub accounts. If `false`, specify relevant account IDs for the alert to monitor using the `accountIdsToQueryOn` field.
      accountIdsToQueryOn:
        type: array
        description: Specify Account IDs to select which accounts the alert should monitor. The alert will be checked only on these accounts.
        items:
          type: integer
          format: int32
          example: 2321

  AlertRecipients:
    type: object
    description: Add email addresses and/or endpoint channels to automatically receive notifications with sample data when the alert triggers.
    properties:
      emails:
        type: array
        description: Array of email addresses to be notified when the alert triggers.
        items:
          type: string
          example: tom.a@logz.io
      notificationEndpointIds:
        type: array
        description: Array of IDs of pre-configured endpoint channels to notify when the alert triggers.
        items:
          type: integer
          format: int32
          example: 10101
  SubAlert:
    type: object
    properties:
      queryDefinition:
        $ref: '#/definitions/AlertQuery'
      trigger:
        $ref: '#/definitions/AlertTrigger'
      output:
        $ref: '#/definitions/SubAlertOutput'
  SubAlertCorrelation:
    type: object
    description: >-
      Only applicable when multiple sub-components are in use. Selects a logic for correlating the alert’s sub-components.


      `AND` is currently the only supported operator. When `AND` is the `correlationOperator`, both sub-components must meet their triggering criteria for the alert to trigger.
    properties:
      correlationOperators:
        type: array
        items:
          type: string
          enum:
            - AND

      joins:
        type: array
        description: >-
          Specifies which group by fields must have the same values to trigger the alert.


          Joins the group by fields from the first and second sub-components. The key represents the index of the sub component in the array (See the example - the index of the first sub-component is 0, the second is 1).


          The fields must be ordered pairs of the group by fields already in use in the `queryDefinition`.
        items:
          type: object
          additionalProperties:
          example: {0: "region", 1: "region"}
  SubAlertOutput:
    type: object
    description: Selects the data output to be sent in the notification when the alert triggers. Not applicable, when grouping by fields or aggregating results, as the output is auto-selected.
    properties:
      columns:
        type: array
        items:
          $ref: '#/definitions/ColumnConfig'
      shouldUseAllFields:
        type: boolean
        description: If `true`, the notification output will include entire logs with all of their fields in the sample data.
        default: true
  AlertV2Request:
    type: object
    required:
    properties:
      title:
        type: string
        description: Alert title
        example: Excessive WARN levels in PROD
      description:
        type: string
        description: A description of the event, its significance, and suggested next steps or instructions for the team.
        example: Steps to remediate...
      tags:
        type: array
        items:
          type: string
        maxItems: 10
        minItems: 0
        description: Tags for filtering alerts and triggered alerts. Can be used in Kibana Discover, dashboards, and more.
        example: network
      output:
        $ref: '#/definitions/AlertOutput'
      searchTimeFrameMinutes:
        type: integer
        minimum: 5
        maximum: 1440
        format: int32
        description: >-
          The time frame for evaluating the log data is a sliding window, with 1 minute granularity.


          The recommended minimum and maximum values are not validated, but needed to guarantee the alert's accuracy.


          The minimum recommended time frame is 5 minutes, as anything shorter will be less reliable and unnecessarily resource-heavy.


          The maximum recommended time frame is 1440 minutes (24 hours). The alert runs on the index from today and yesterday (in UTC) and the maximum time frame increases throughout the day, reaching 48 hours exactly before midnight UTC.
        example: 20
      subComponents:
        type: array
        description: Sets the search criteria using a search query, filters, group by aggregations, accounts to search, and trigger conditions.
        items:
          $ref: '#/definitions/SubAlert'
      correlations:
        $ref: '#/definitions/SubAlertCorrelation'
      enabled:
        type: boolean
        description: If `true`, the alert is enabled and active.
  AlertTrigger:
    type: object
    description: Sets the triggering threshold and severity tab to label the event when the alert triggers.
    properties:
      operator:
        type: string
        enum:
          - LESS_THAN
          - GREATER_THAN
          - LESS_THAN_OR_EQUALS
          - GREATER_THAN_OR_EQUALS
          - EQUALS
          - NOT_EQUALS
        example: GREATER_THAN_OR_EQUALS
        description: Specifies the operator for evaluating the results.
      severityThresholdTiers:
        type: object
        description: >-
          Sets a severity label per trigger threshold as a key:value pair.


          If using more than one sub-component, only 1 severityThresholdTiers is allowed. Otherwise, 1 per `enum` are allowed (for a total of 5 thresholds of increasing severities).


          Increasing severity must adhere to the logic of the operator.
        enum:
          - INFO
          - LOW
          - MEDIUM
          - HIGH
          - SEVERE
        additionalProperties:
        default:
          MEDIUM: 10.0
        example:
          MEDIUM: 10.0
          HIGH: 100.0
          SEVERE: 300.0

  BoolFilter:
    type: object
    description: Apply `must` and `must_not` filters to the monitoring alert. Filters are more efficient compared to a query, so it's recommended to opt for a filter over a query, where possible. See [Elasticsearch Bool-Query](https://www.elastic.co/guide/en/elasticsearch/reference/6.8/query-dsl-bool-query.html) for more detail.
    properties:
      bool:
        $ref: '#/definitions/FilterLists'
  ColumnConfig:
    type: object
    description: Customize the alert output to be sent out in notifications when the alert triggers.
    properties:
      fieldName:
        type: string
        description: Specify the fields to be included in the notification.
      regex:
        type: string
        description: Trims the data using regex filters. [Learn more](https://docs.logz.io/user-guide/alerts/regex-filters.html)
      sort:
        type: string
        description: Specify a single field to sort by. The field cannot be an analyzed field (a field that supports free text search or searching by part of a message, such as the 'message' field).
        enum:
          - DESC
          - ASC
  FilterLists:
    type: object
    description: Runs Elasticsearch [Bool Query](https://www.elastic.co/guide/en/elasticsearch/reference/6.8/query-dsl-bool-query.html) filters on the data (before the search query is applied). The most efficient way to grab the logs you are looking for.
    properties:
      must:
        type: array
        items:
          type: object
          additionalProperties:
            type: object

      must_not:
        type: array
        items:
          type: object
          additionalProperties:
            type: object
  PagedSearchResponseString:
    type: object
    properties:
      total:
        type: integer
        format: int32
      results:
        type: array
        items:
          type: string
      pagination:
        $ref: '#/definitions/Pagination'
  TagsFilter:
    type: object
    properties:
      searchTerm:
        type: string
  TagsSearchRequest:
    type: object
    properties:
      filter:
        $ref: '#/definitions/TagsFilter'
      pagination:
        $ref: '#/definitions/Pagination'


  # ::::: SIEM RULES - duplicates of rule definitions. do not exist in the swagger

  RuleV2Response:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: Logz.io rule ID.
        example: 627816
      updatedAt:
        type: integer
        format: int64
        description: Date and time in UTC when the rule was last updated.
        example: 2020-04-02T18:58:16.000Z
      updatedBy:
        type: string
        description: Email of the user who last updated the rule.
        example: tomer@logz.io
      createdAt:
        type: integer
        format: int64
        description: Date and time in UTC when the rule was first created.
        example: 2020-02-02T18:58:16.000Z
      createdBy:
        type: string
        description: Email of the user who first created the rule.
        example: tomer@logz.io
      enabled:
        type: boolean
        description: If `true`, the rule is currently active.
        example: true
      title:
        type: string
        description: Rule title.
        example: Excessive WARN levels in PROD
      description:
        type: string
        description: A description of the event, its significance, and suggested next steps or instructions for the team.
        example: Steps to remediate...
      tags:
        type: array
        items:
          type: string
        description: Tags for filtering rules and triggered rules. Can be used in Kibana Discover, dashboards, and more.
        example: [network, aws]
      output:
        $ref: '#/definitions/RuleOutput'
      searchTimeFrameMinutes:
        type: integer
        minimum: 5
        maximum: 1440
        format: int32
        description: >-
          The time frame for evaluating the log data is a sliding window, with 1 minute granularity.


          The recommended minimum and maximum values are not validated, but needed to guarantee the rule's accuracy.


          The minimum recommended time frame is 5 minutes, as anything shorter will be less reliable and unnecessarily resource-heavy.


          The maximum recommended time frame is 1440 minutes (24 hours). The rule runs on the index from today and yesterday (in UTC) and the maximum time frame increases throughout the day, reaching 48 hours exactly before midnight UTC.
      subComponents:
        type: array
        description: Determines when the rule should trigger using any combination of a search query, filters, group by aggregations, accounts to search, and trigger conditions.
        items:
          $ref: '#/definitions/SubRule'
      correlations:
        $ref: '#/definitions/SubRuleCorrelation'
  RuleOutput:
    type: object
    description: Automatically sends out notifications with sample results when the rule triggers.
    properties:
      recipients:
        $ref: '#/definitions/RuleRecipients'
      suppressNotificationsMinutes:
        type: integer
        format: int32
        minimum: 5
        maximum: 1440
        description: Add a waiting period in minutes to space out notifications. (The rule will still trigger but will not send out notifications during the waiting period.)
        example: 60
      type:
        type: string
        description: Selects the output format for the rule notification. If the rule has no aggregations/group by fields, `JSON` offers the option to send full sample logs without selecting specific fields.
        enum:
          - JSON
          - TABLE
  RuleQuery:
    type: object
    description: Determines when the rule should trigger using any combination of a search query, filters, group by aggregations, accounts to search, and trigger conditions.
    properties:
      query:
        type: string
        description: >-
          Provide a Kibana search query written in Lucene syntax. The search query together with the filters select for the relevant logs.


          Cannot be null - send an asterisk wildcard `*` if not using a search query.
        default: "*"
        nullable: false
        example: type:apache_access
      filters:
        $ref: '#/definitions/BoolFilter'
      groupBy:
        type: array
        nullable: true
        description: Specify 1-3 fields by which to group the results and count them. If you apply a group by operation, the rule returns a count of the results aggregated by unique values.
        items:
          type: string
        maxItems: 3
        minItems: 0
      aggregation:
        $ref: '#/definitions/Aggregation'
      shouldQueryOnAllAccounts:
        type: boolean
        default: true
        example: false
        description: Only applicable when the rule is run from the main account. If `true`, the rule runs on the main account and all associated searchable sub accounts. If `false`, specify relevant account IDs for the rule to monitor using the `accountIdsToQueryOn` field.
      accountIdsToQueryOn:
        type: array
        description: Specify Account IDs to select which accounts the rule should monitor. The rule will be checked only on these accounts.
        items:
          type: integer
          format: int32
          example: 2321

  RuleRecipients:
    type: object
    description: Add email addresses and/or endpoint channels to automatically receive notifications with sample data when the rule triggers.
    properties:
      emails:
        type: array
        description: Array of email addresses to be notified when the rule triggers.
        items:
          type: string
          example: tom.a@logz.io
      notificationEndpointIds:
        type: array
        description: Array of IDs of pre-configured endpoint channels to notify when the rule triggers.
        items:
          type: integer
          format: int32
          example: 10101
  SubRule:
    type: object
    properties:
      queryDefinition:
        $ref: '#/definitions/RuleQuery'
      trigger:
        $ref: '#/definitions/RuleTrigger'
      output:
        $ref: '#/definitions/SubRuleOutput'
  SubRuleCorrelation:
    type: object
    description: >-
      Only applicable when multiple sub-components are in use. Selects a logic for correlating the rule’s sub-components.


      `AND` is currently the only supported operator. When `AND` is the `correlationOperator`, both sub-components must meet their triggering criteria for the rule to trigger.
    properties:
      correlationOperators:
        type: array
        items:
          type: string
          enum:
            - AND

      joins:
        type: array
        description: >-
          Specifies which group by fields must have the same values to trigger the rule.


          Joins the group by fields from the first and second sub-components. The key represents the index of the sub component in the array (See the example - the index of the first sub-component is 0, the second is 1).


          The fields must be ordered pairs of the group by fields already in use in the `queryDefinition`.
        items:
          type: object
          additionalProperties:
          example: {0: "region", 1: "region"}
  SubRuleOutput:
    type: object
    description: Selects the data output to be sent in the notification when the rule triggers. Not applicable, when grouping by fields or aggregating results, as the output is auto-selected.
    properties:
      columns:
        type: array
        items:
          $ref: '#/definitions/ColumnConfig'
      #shouldUseAllFields:
      #  type: boolean
      #  description: If `true`, the notification output will include entire logs with all of their fields in the sample data.
      # default: true
  RuleV2Request:
    type: object
    required:
    properties:
      title:
        type: string
        description: Rule title
        example: Excessive WARN levels in PROD
      description:
        type: string
        description: A description of the event, its significance, and suggested next steps or instructions for the team.
        example: Steps to remediate...
      tags:
        type: array
        items:
          type: string
        maxItems: 25
        minItems: 0
        description: Tags for filtering rules and triggered rules. Can be used in Kibana Discover, dashboards, and more.
        example: network
      output:
        $ref: '#/definitions/RuleOutput'
      searchTimeFrameMinutes:
        type: integer
        minimum: 5
        maximum: 1440
        format: int32
        description: >-
          The time frame for evaluating the log data is a sliding window, with 1 minute granularity.


          The recommended minimum and maximum values are not validated, but needed to guarantee the rule's accuracy.


          The minimum recommended time frame is 5 minutes, as anything shorter will be less reliable and unnecessarily resource-heavy.


          The maximum recommended time frame is 1440 minutes (24 hours). The rule runs on the index from today and yesterday (in UTC) and the maximum time frame increases throughout the day, reaching 48 hours exactly before midnight UTC.
        example: 20
      subComponents:
        type: array
        description: Sets the search criteria using a search query, filters, group by aggregations, accounts to search, and trigger conditions.
        items:
          $ref: '#/definitions/SubRule'
      correlations:
        $ref: '#/definitions/SubRuleCorrelation'
      enabled:
        type: boolean
        description: If `true`, the alert is enabled and active.
  RuleTrigger:
    type: object
    description: Sets the triggering threshold and severity tab to label the event when the rule triggers.
    properties:
      operator:
        type: string
        enum:
          - LESS_THAN
          - GREATER_THAN
          - LESS_THAN_OR_EQUALS
          - GREATER_THAN_OR_EQUALS
          - EQUALS
          - NOT_EQUALS
        example: GREATER_THAN_OR_EQUALS
        description: Specifies the operator for evaluating the results.
      severityThresholdTiers:
        type: object
        description: >-
          Sets a severity label per trigger threshold as a key:value pair.


          If using more than one sub-component, only 1 severityThresholdTiers is allowed. Otherwise, 1 per `enum` are allowed (for a total of 5 thresholds of increasing severities).


          Increasing severity must adhere to the logic of the operator.
        enum:
          - INFO
          - LOW
          - MEDIUM
          - HIGH
          - SEVERE
        additionalProperties:
        default:
          MEDIUM: 10.0
        example:
          MEDIUM: 10.0
          HIGH: 100.0
          SEVERE: 300.0

  RuleColumnConfig:
    type: object
    description: Customize the rule output to be sent out in notifications when the rule triggers.
    properties:
      fieldName:
        type: string
        description: Specify the fields to be included in the notification.
      regex:
        type: string
        description: Trims the data using regex filters. [Learn more](https://docs.logz.io/user-guide/alerts/regex-filters.html)
      sort:
        type: string
        description: Specify a single field to sort by. The field cannot be an analyzed field (a field that supports free text search or searching by part of a message, such as the 'message' field).
        enum:
          - DESC
          - ASC

  SecurityRuleResponse:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: Logz.io security rule ID.
        example: 627816
      updatedAt:
        type: integer
        format: int64
        description: Date and time in UTC when the rule was last updated.
        example: 2020-04-02T18:58:16.000Z
      updatedBy:
        type: string
        description: Email of the user who last updated the rule.
        example: tomer@logz.io
      createdAt:
        type: integer
        format: int64
        description: Date and time in UTC when the rule was first created updated.
        example: 2020-02-02T18:58:16.000Z
      createdBy:
        type: string
        description: Email of the user who first created the rule.
        example: tomer@logz.io
      enabled:
        type: boolean
        description: If `true`, the rule is currently active.
        exampe: true
      title:
        type: string
        description: Rule title.
        example: Excessive WARN levels in PROD
      description:
        type: string
        description: A description of the event, its significance, and suggested next steps or instructions for the team.
        example: Steps to remediate...
      tags:
        type: array
        items:
          type: string
        description: Tags for filtering rules and triggered rules. Can be used in Kibana Discover, dashboards, and more.
        example: [network, aws]
      output:
        $ref: '#/definitions/RuleOutput'
      searchTimeFrameMinutes:
        type: integer
        minimum: 5
        maximum: 1440
        format: int32
        description: >-
          The time frame for evaluating the log data is a sliding window, with 1 minute granularity.


          The recommended minimum and maximum values are not validated, but needed to guarantee the rule's accuracy.


          The minimum recommended time frame is 5 minutes, as anything shorter will be less reliable and unnecessarily resource-heavy.


          The maximum recommended time frame is 1440 minutes (24 hours). The rule runs on the index from today and yesterday (in UTC) and the maximum time frame increases throughout the day, reaching 48 hours exactly before midnight UTC.
      subComponents:
        type: array
        description: Determines when the rule should trigger using any combination of a search query, filters, group by aggregations, accounts to search, and trigger conditions.
        items:
          $ref: '#/definitions/SubRule'
      correlations:
        $ref: '#/definitions/SubRuleCorrelation'
      protected:
        type: boolean
        description: >-
          If `true`, the rule is pre-defined by Logz.io. Protected parameters cannot be edited. The only parameters that can be edited are


          * `shouldQueryOnAllAccounts`

          * `accountIdsToQueryOn`

          * `severityThresholdTiers`

          * `tags`

          * `description`

          * `enabled`

          * `output` (in `subComponents`)

          * `searchTimeFrameMinutes`


  # ::::: RESTORE FROM ARCHIVE DEFINITIONS
  RestoreAccountConfiguration:
    type: object
    properties:
      accountId:
        type: integer
        format: int32
        description: ID of the restored account in Logz.io
      maxActiveRestoreAccounts:
        type: integer
        format: int32
      maxInProgressRestoresPerAccount:
        type: integer
        format: int32
      maxRestoreDurationInHours:
        type: integer
        format: int32
      accountExpirationTimeInDays:
        type: integer
        format: int32
      maxVolumeInGB:
        type: number
        format: float
  RestoreApiResponse:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: ID of the restore operation in Logz.io
        example: 42
      accountId:
        type: integer
        format: int32
        description: ID of the restored account in Logz.io
        example: 564321
      accountName:
        type: string
        description: Name of the restored account
        example: My account name
      restoredVolumeGb:
        type: number
        format: float
        nullable: true
        description: Volume of data restored so far. If the restore operation is still in progress, this will be continuously updated.
        example: 99
      status:
        type: string
        enum:
          - IN_PROGRESS
          - ACTIVE
          - LIMIT_EXCEEDED
          - ABORTED
          - FAILED
          - DELETED
          - EXPIRED
        description: >-
          Returns the current status of the restored account.

          - IN_PROGRESS - Data is being restored and is not yet available for querying or searching in Kibana.

          - ACTIVE - The restored account is active and available for searching and querying in Kibana. Be sure to search the data in its original timestamp.

          - LIMIT_EXCEEDED - The data exceeded 100 GB and caused the restore action to fail.

          - ABORTED - A user aborted the restore operation before it completed. Only one account can be restored at a time.

          - FAILED - The restored account failed to restore the data.

          - DELETED - The restored account was deleted by a user.

          - EXPIRED - Restored accounts automatically expire after a number of  days, as indicated by `expiresAt`.
        example: ACTIVE
      startTime:
        type: integer
        format: int64
        description: UNIX timestamp in milliseconds specifying the earliest logs to be restored.
        example: 1589947200.000000000
      endTime:
        type: integer
        format: int64
        description: UNIX timestamp in milliseconds specifying the latest logs to be restored.
        example: 1589954400.000000000
      createdAt:
        type: integer
        format: int64
        description: Timestamp when the restore process was created and entered the queue. (Since only one account can be restored at a time, the process may not initiate immediately.)
        example: 1591902426.000000000
      startedAt:
        type: integer
        format: int64
        description: UNIX timestamp in milliseconds when the restore process initiated.
        nullable: true
        example: 1591902428.000000000
      finishedAt:
        type: integer
        format: int64
        description: UNIX timestamp in milliseconds when the restore process completed.
        nullable: true
        example: 1591902461.000000000
      expiresAt:
        type: integer
        format: int64
        nullable: true
        description: UNIX timestamp in milliseconds specifying when the account is due to expire. Restored accounts expire automatically after a number of days, as specified in the account's terms.
        example: 1592334461.000000000
  RestoreApiRequest:
    type: object
    properties:
      accountName:
        type: string
        description: Name of the restored account
        example: My account name
      startTime:
        type: integer
        format: int64
        description: UNIX timestamp in milliseconds specifying the earliest logs to be restored.
        example: 1589947200.000000000
      endTime:
        type: integer
        format: int64
        description: UNIX timestamp in milliseconds specifying the latest logs to be restored.
        example: 1589954400.000000000

  RestoreRequest:
    type: object
    properties:
      accountName:
        type: string
        description: ?
        example:
      archiveSettingsId:
        type: integer
        format: int32
        description: ?
        example:
      startTime:
        type: integer
        format: int64
        description: ?
        example:
      endTime:
        type: integer
        format: int64
        description: ?
        example:
