---
layout: json
permalink: /data/shipping-manifest.json
---

{%- assign collectionsToAdd = "log-sources,metrics-sources" | split: "," -%}

{%- case jekyll.environment -%}
  {%- when "production" -%}
    {%- assign branch = "/master" -%}
  {%- else -%}
    {%- assign branch = "/develop" -%}
{%- endcase -%}
{%- assign githubUrl = "https://raw.githubusercontent.com/logzio/logz-docs" | append: branch -%}

{% capture json -%}
  "updatedAt": "{{ "now" | date: "%Y-%m-%d %H:%M" }}",
  "collections": [
    {% for c in collectionsToAdd -%}
    {%- assign thisCollection = site.collections | where: "label", c | first -%}
      {
        "collection": "{{thisCollection.label}}",
        "title": "{{thisCollection.name}}",
        "contents": [
          {%- for d in thisCollection.docs %}
            {
              "title": "{{d.title}}",
              "dataSource": "{{d.shipping-summary.data-source}}",
              {%- if d.open-source -%}
                {%- capture openSourceString -%}
                  [
                    {%- for project in d.open-source -%}
                      {
                        "title": "{{project.title}}",
                        "githubRepo": "{{project.github-repo}}"
                      }
                      {%- unless forloop.last -%} , {% endunless -%}
                    {%- endfor -%}
                  ]
                {%- endcapture %}
                "openSource": {{ openSourceString }},
              {% endif -%}
              "logo": "{{ site.source
                | split: "." | last
                | append: "/images/shipper-logos/"
                | append: d.logo.logofile
                | prepend: githubUrl }}",
              "filepath": "{{ site.source
                | split: "." | last
                | append: "/"
                | append: site.collections_dir
                | append: "/"
                | append: d.path
                | prepend: githubUrl }}",
              "tags": ["{{d.shipping-tags | join: '", "'}}"]
            }
            {%- unless forloop.last -%} , {% endunless -%}
          {%- endfor -%}
        ]
      }
      {%- unless forloop.last -%} , {% endunless -%}
    {%- endfor -%}
  ]
{%- endcapture -%}

{{ json | normalize_whitespace }}