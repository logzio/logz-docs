---
layout: none
---

swagger: '2.0'
schemes: [ https ]
host: api.logz.io
x-servers:
{%- for region in site.data.logzio-regions %}
  - url: https://api
  {%- if region.suffix -%}
    -{{region.suffix}}
  {%- endif -%}
  .logz.io/
    description: {{region.title}}
{% endfor -%}
basePath: /
produces: [ application/json ]
consumes: [ application/json ]
info:
  description: >-
    # Introduction

    This API is documented using the **OpenAPI 2.0** specification.
    <!-- You can browse the API documentation on this page, or you can download the specification file. -->


    ### Updates and improvements

    We update this document regularly to reflect changes and improvements to the Logz.io API.
    If you'd like to suggest corrections or improvements to this document, please <a class="intercom-launch" href="mailto:help@logz.io">contact the Support team</a> or submit a ticket in the [docs GitHub repository](https://github.com/logzio/logz-docs/issues).


    # Notes on alerting

    Please note that alerting is not yet covered in this document.
    For current documentation on alerting, see our [public-api](https://github.com/logzio/public-api/tree/master/alerts) repository on GitHub.


    # Account region and API URL

    To find your account region, sign in to Logz.io and look at the URL in the address bar.
    Your API URL has the same two-letter code that you see in the address bar when you're logged in.


    For more information, see [Account region](https://docs.logz.io/user-guide/accounts/account-region.html).


    # Authentication

    The Logz.io API is available to Enterprise plan subscribers.
    You can create new API tokens in [Logz.io](https://app.logz.io/#/dashboard/settings/api-tokens).
    You can revoke API permissions at any time.

    If you don't have an Enterprise account, please contact your account manager or the <a class="intercom-launch" href="mailto:help@logz.io">Customer Success team</a>.

    <!-- ReDoc-Inject: <security-definitions> -->


    # Rate limiting

    API call and response rates are limited per individual account.
    To find out your rate limits or to make changes to your account plan, please contact your account manager or the <a class="intercom-launch" href="mailto:help@logz.io">Customer Success team</a>.


  title: Logz.io API
  termsOfService: 'https://logz.io/about-us/terms-of-use/'
  contact:
    email: help@logz.io
    url: https://docs.logz.io/
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'

securityDefinitions:
  X-API-TOKEN:
    description: >-
      Manage your tokens on the Logz.io [API tokens](https://app.logz.io/#/dashboard/settings/api-tokens) page.
      To get to this page, click the gear in the top menu, and then select [**Tools > API tokens**](https://app.logz.io/#/dashboard/settings/api-tokens).


      API tokens carry privileges to make changes to users and accounts,
      so it's important to keep your tokens secure. If you believe an API token has been compromised,
      delete the compromised token, and replace it with a new token in your integrations.
    type: apiKey
    in: header
    name: X-API-TOKEN
security:
  - X-API-TOKEN: []

tags:
  - name: Who am I
  - name: Manage time-based log accounts
    description: >-
      Use these API requests to manage time-based log accounts:
      
      * Create, update, or delete a sub account.

      * Allocate daily capacity to the main account and/or sub accounts.
      
      * Retrieve account activity stats and/or account configuration details.


      ### Flexible storage & shared volume
        
      Flexible storage and shared volume allow accounts to share indexing capacity.
      
      
      To enable shared volume, go to the [Manage accounts page](https://app.logz.io/#/dashboard/settings/manage-accounts) in the Logz.io app and toggle the button **Use flexible volume** to turn it on.
      
      
      To determine whether flexible storage is enabled, run a `Get` request to retrieve account details.
      
      * If `isFlexible` is true, flexible storage is enabled and every account has reserved capacity set by the parameter `reservedDailyGB`.
      
      * If false, flexible storage is disabled and the parameter `reservedDailyGB` is null.
  - name: Search logs
    description: >-
      Use the Elasticsearch Search API DSL query language to search your log data.


      To ensure system performance and data availability, we've introduced some limitations to the original Elasticsearch specification. These limitations are detailed in the applicable API calls below.
  - name: Retrieve audit trail
  - name: Manage CloudTrail links
  - name: Manage notification endpoints
    description: >-
      Logz.io can send notifications to your preferred workspaces, such as Opsgenie, BigPanda, PagerDuty, and Slack.


      Notifications are typically sent when alerts are triggered, when a user shares a Kibana object,
      or when Logz.io Insights identifies new exceptions in your logs.


      Use these API requests to create, update, or delete notification endpoints. If you configure a custom endpoint,
      you can configure the notificaton message body.
      Otherwise, you can use any of the available preconfigured endpoints.
  - name: Import or export Kibana objects
  - name: Manage shared tokens
    description: >-
      You can share Kibana visualization and dashboard snapshots using shared tokens.
      Token filters are available to help you control what data to expose.


      **Note:** Shared token endpoints require permissions that must be set by our Support team. Please email help@logz.io for assistance.
  - name: Logz.io snapshots
  - name: Manage users
    description: >-
      Manage user access to your Logz.io account using API requests.


      You can create, update, suspend/unsuspend, and delete users. You can also retrieve the list of active and suspended users.
x-tagGroups:
  - name: Log monitoring
    tags:
      - Search logs
      - Logz.io snapshots
  - name: Account administration
    tags:
      - Manage users
      - Who am I
      - Manage time-based log accounts
      - Manage shared tokens
      - Manage notification endpoints
      - Import or export Kibana objects
  - name: Data security
    tags:
      - Retrieve audit trail
  - name: AWS security and audit
    tags:
      - Manage CloudTrail links

paths:
  # ::::: ACCOUNTS
  /v1/account-management/whoami:
    get:
      summary: Retrieve this account
      description: Returns a single string with the account name. Good for testing or for confirming that you're using an API token from the right account.
      tags:
        - Who am I
      operationId: whoAmI
      produces:
        - application/json
      parameters:
      x-code-samples:
      - lang: cURL
        source: >-
          "curl -X GET \
          https://api.logz.io/v1/account-management/whoami \
          -H 'Content-Type: application/json' \
          -H 'X-API-TOKEN: <token>'"
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/WhoAmI'
  /v1/account-management/time-based-accounts:
    get:
      summary: Retrieve settings for all accounts
      description: >-
        
        Returns account settings for the main account and all of its associated sub accounts.
        

        * The list of accounts is returned as an array of JSON objects.
        
        * Must be run with an API token from the main account.
      tags:
        - Manage time-based log accounts
      operationId: getAll
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/TimeBasedAccount'
      x-code-samples:
      - lang: cURL
        source: 'curl --request GET --url "https://api.logz.io/v1/account-management/time-based-accounts" --header "X-API-TOKEN: <token>"'
    post:
      summary: Create a sub account
      description: >-
        Creates a new logging sub account. Must be run with an API token from the main account.
      tags:
        - Manage time-based log accounts
      operationId: createTimeBasedAccount
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/TimeBasedAccountCreateRequest'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/TimeBasedAccountCreationResponse'
      x-code-samples:
      - lang: cURL
        source: >-
          curl -X POST \
            "https://api.logz.io/v1/account-management/time-based-accounts" \
            -H "accept: application/json" -H "content-type: application/json" \
            -H "X-API-TOKEN: <token>" \
            -d '{
            "email": "help@logz.io",
            "accountName": "AWS Lambda svr 3",
            "maxDailyGB": 5,
            "reservedDailyGB": 3,
            "isFlexible": true,
            "retentionDays": 5,
            "searchable": true,
            "accessible": false,
            "sharingObjectsAccounts": [
              48672,
              36259
            ],
            "docSizeSetting": true,
            "utilizationSettings": {
              "frequencyMinutes": 5,
              "utilizationEnabled": true
            }
            }'


  /v1/account-management/time-based-accounts/{id}:
    get:
      summary: Retrieve account settings by ID
      description: Returns account configuration settings as a JSON object. Must be run with an API token from the main account.
      tags:
        - Manage time-based log accounts
      operationId: get
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the account to retrieve
          x-example: 99999
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/TimeBasedAccount'
      x-code-samples:
      - lang: cURL
        source: 'curl -X GET "https://api.logz.io/v1/account-management/time-based-accounts/99999" -H "accept: application/json" -H "content-type: application/json" -H "X-API-TOKEN: <token>"'
    put:
      summary: Update an account
      description: >-
        Updates the account settings of a main account or sub account, with some exceptions, noted below:


        * For the main account, the parameter `retentionDays` cannot be updated. It is determined by the plan you purchased.

        * For the main account, if `isFlexible=false`, the parameters `maxDailyGB` and `reservedDailyGB` cannot be updated using this endpoint.

      tags:
        - Manage time-based log accounts
      operationId: updateTimeBasedAccount
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the account to update
          x-example: 99999
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/TimeBasedAccountUpdateRequest'
      responses:
        204:
          description: successful operation
      x-code-samples:
      - lang: cURL
        source: >-
          curl -X PUT \
          "https://api.logz.io/v1/account-management/time-based-accounts/88888" \
          -H "accept: application/json" -H "content-type: application/json" \
          -H "X-API-TOKEN: <token>" \
          -d "{
            \"accountName\": \"AWS Lambda svr 3\",
            \"maxDailyGB\": 5,
            "reservedDailyGB\": 3,
            \"retentionDays\": 5,
            \"searchable\": true,
            \"accessible\": false,
            \"sharingObjectsAccounts\": [
                55555
            ],
            \"docSizeSetting\": true,
            \"utilizationSettings\": {
              \"frequencyMinutes\": 5,
              \"utilizationEnabled\": true
            }
          }"
    delete:
      summary: Delete a sub account
      description: Deletes a sub account by its account ID. Must be run with an API token from the main account.
      tags:
        - Manage time-based log accounts
      operationId: deleteTimeBasedAccount
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the account to be deleted.
          x-example: 99999
      responses:
        204:
          description: successful operation
      x-code-samples:
        - lang: cURL
          source: 'curl -X DELETE "https://api.logz.io/v1/account-management/time-based-accounts/88888" -H "accept: application/json" -H "content-type: application/json" -H "X-API-TOKEN: <token>"'
  /v1/account-management/time-based-accounts/detailed:
    get:
      summary: Retrieve detailed information for all accounts
      description: >-
        Returns detailed account information for the main account and all of its associated sub accounts. Information includes usage and sharing permissions for Kibana objects.

        * The list of accounts is returned as an array of JSON objects. Each sub account is its own object.
        
        * Must be run with an API token from the main account.
      tags:
        - Manage time-based log accounts
      operationId: getAllDetailedTimeBasedAccount
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/DetailedTimeBasedAccount'
      x-code-samples:
      - lang: cURL
        source: 'curl -X GET "https://api.logz.io/v1/account-management/time-based-accounts/detailed" -H "accept: application/json" -H "content-type: application/json" -H "X-API-TOKEN: <token>"'
  /v1/account-management/time-based-accounts/detailed/{id}:
    get:
      summary: Retrieve detailed account information by account ID
      description: Returns detailed account information. Must be run with an API token from the main account.
      tags:
        - Manage time-based log accounts
      operationId: getDetailedTimeBasedAccount
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the account to retrieve
          x-example: 99999
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/DetailedTimeBasedAccount'
      x-code-samples:
      - lang: cURL
        source: 'curl -X GET "https://api.logz.io/v1/account-management/time-based-accounts/detailed/99999" -H "accept: application/json" -H "content-type: application/json" -H "X-API-TOKEN: <token>"'





  # ::::: SEARCH, SCROLL
  /v1/search:
    post:
      operationId: search
      summary: Search logs
      description: >-
        Searches your account data using the [Elasticsearch Search API DSL](https://www.elastic.co/guide/en/elasticsearch/reference/6.8/search.html) query language.


        **Note:** To ensure speed and availability of your logs, we restrict some options from the Elasticsearch defaults that could hamper system performance. Restrictions are described with their respective elements below.
      tags:
        - Search logs
      parameters:
        - in: query
          name: dayOffset
          type: integer
          schema:
            description: >-
              Slide the 2-day search time range by _x_ days.
              For example, if set to `5`, search returns results from 5 days ago and 4 days ago, UTC.


              Maximum is your account's retention period.


              If set to `0` or `1`, search returns default results (today and yesterday, UTC).
            minimum: 0
        - in: query
          name: accountIds
          type: integer
          schema:
            description: >-
              ID of the sub account to search.
              By default, only this account is searched.


              A main account can search a sub account as long as it has the right permissions.
              To give search permissions to the main account,
              log in to the main account,
              go to the [Manage accounts](https://app.logz.io/#/dashboard/settings/manage-accounts) page,
              and select **Searchable from the main account** for the intended sub account.


              To include multiple accounts, repeat this parameter for each account
              (for example: `accountIds=500&accountIds=600`).


              **Important**:
              If you include an account without the right permissions,
              the request will fail.


              If you include this parameter, the current account won't be searched
              unless you explicitly include it in the query.
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - query
            properties:
              query:
                type: object
                description: >-
                  The query can take any of the parameters described in the [Elasticsearch Search API DSL documentation](https://www.elastic.co/guide/en/elasticsearch/reference/6.8/search.html) with the exceptions stated below.

                  #### Limitations

                  * When using `query_string`, `allow_leading_wildcard` must be set to `false`

                  * `wildcard` can't start with `*` or `?`

                  * Can't contain `fuzzy_max_expansions`, `max_expansions`, or `max_determinized_states`


                  #### Notes on the search time range

                  * By default, your query runs on data sent today and yesterday, UTC.
                    You can move this 2-calendar-day window by using the `dayOffset` query parameter.

                  * Searches without a `timestamp` filter will return 2 calendar days, UTC.
                    To search a different time frame, specify a filter on `timestamp`.

                example: { "bool": { "must": [{ "range": { "@timestamp": { "gte": "now-5m", "lte": "now" } } }] } }
              from:
                type: integer
                minimum: 0
                default: 0
                description: Of the results found, the first result to return
                example: 10
              size:
                type: integer
                description: Number of results to return
                default: 10
                example: 50
              sort:
                type: array
                description: >-
                  #### Limitations

                  * Can't sort or aggregate on `message`
                items:
                  type: object
              _source:
                type: object
                description: >-
                  The object `includes` specifies an array of strings specifying an array of fields to return.
                  
                  * If you omit `_source` from the request, all fields are returned.
                  
                  * If you pass `'_source': false`, it will exclude the `_source` field from the results.
                properties:
                  includes:
                    type: array of strings
                    description: Array of fields to return
                    example: message
                items:
                  - type: string
                    description: Field to return.
              post_filter:
                type: object
              aggs:
                type: object
                description: >-
                  #### Limitations

                  * When using the `size` element, the value must be ≤ `1000`

                  * Can't nest 2 or more bucket aggregations of these types: `date_histogram`, `geohash_grid`, `histogram`, `ip_ranges`, `significant_terms`, `terms`

                  * Can't sort or aggregate on the `message` field

                  * Aggregation type `significant_terms` can't be used


                  **Note:** You can use `aggs` or `aggregations` as the field name
                example: { "byType": { "terms": { "field": "type", "size": 5 } } }
      x-code-samples:
        - lang: cURL
          source: >-
            curl -X POST https://api.logz.io/v1/search \
              -H 'Content-Type: application/json' \
              -H 'X-API-TOKEN: <token>' \
              -d '{
              "size": 10,
              "query": {
                "bool": {
                  "must": [{
                    "range": {
                      "@timestamp": {
                        "gte": "now-5m",
                        "lte": "now"
                      }
                    }
                  }]
                }
              },
              "aggs": {
                "byType": {
                  "terms": {
                    "field": "type",
                    "size": 5
                  }
                }
              }
            }' '
      responses:
        200:
          description: successful query
          schema:
            type: object
            example: >-
              {
                "hits": {
                  "total": 339604,
                  "max_score": 0,
                  "hits": [ ]
                },
                "aggregations": {
                  "byType": {
                    "doc_count_error_upper_bound": 0,
                    "sum_other_doc_count": 44879,
                    "buckets": [
                      {
                        "key": "web-app",
                        "doc_count": 163690
                      }, {
                        "key": \"core-service\",
                        "doc_count": 64893
                      }
                    ]
                  }
                }
              }

  /v1/scroll:
    post:
      summary: Scroll logs
      tags:
        - Search logs
      description: >-
        This endpoint can take 2 types of call requests. The first type runs a search query that returns a `scrollID` and the first batch of paginated results. The second request type passes only the `scroll_id` 
        (The variation in the field name is intentional) to fetch the next batches of paginated results.
        This endpoint always returns results as a stringified JSON.
        

        How it works:
        
        
        First, send a request to establish the `scrollID`. This initial request contains the query object and additional parameters, similar to the `v1/search` endpoint, with the exception that `dayOffset` and `accountIds` are not supported. The request will return the field `scrollId` and the number of `hits`, representing the number of matching results.
        
        
        Next, send the `scroll_id` in the request body to retrieve the log results as a stringified JSON. Each call returns the next page, where each page can return a maximum of 1000 results. Every time you resend the same `scroll_id` in the request body, it returns the next page until it reaches the end of the results. 
        You'll know you've reached the last page of results, once the call keeps returning the last page of results repeatedly. Keep sending the same scroll ID as many times as needed to retrieve all of the available results.
        The results are paginated, and the request advances through them, one at a time, by default. So that every time you send the request with the same `scroll_id`, the next batch of results is returned.
       

        **Note**:


        * Send the field `scroll_id` in requests (snake_case).
        
        * Receive the field `scrollID` in your responses (camelCase).
      operationId: scroll
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/ScrollRequest'
      x-code-samples:
        - lang: cURL
          source: >-
            curl -X POST https://api.logz.io/v1/scroll \
              -H 'Content-Type: application/json' \
              -H 'X-API-TOKEN: <token>' \
              -d '{
              "size": 10,
              "query": {
                "bool": {
                  "must": [{
                    "range": {
                      "@timestamp": {
                        "gte": "now-5m",
                        "lte": "now"
                      }
                    }
                  }]
                }
              },
              "aggs": {
                "byType": {
                  "terms": {
                    "field": "type",
                    "size": 5
                  }
                }
              }
            }'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ScrollResponse'

  # ::::: AUDIT TRAIL
  /v1/audit-trail/event-types:
    post:
      operationId: listAccountAuditTrails
      summary: Retrieve all event types in the audit trail
      description: Returns an array of strings. Each string is an event type that appears in the account's audit trail. Each event type is shown once, no matter how many times it occurs in the account's audit trail.
      tags:
        - Retrieve audit trail
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/AuditTrailEventTypesResponse'
      x-code-samples:
        - lang: cURL
          source: 'curl -X POST "https://api.logz.io/v1/audit-trail/event-types" -H "accept: application/json" -H "content-type: application/json" -H "X-API-TOKEN: <token>"'
  /v1/audit-trail:
    post:
      operationId: listAccountAuditTrailsFiltered
      summary: Retrieve a filtered list of audit trail events
      tags:
        - Retrieve audit trail
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/AuditTrailFilterRequest'
      x-code-samples:
        - lang: cURL
          source: 'curl -X POST "https://api.logz.io/v1/audit-trail" -H "accept: application/json" -H "X-API-TOKEN: <token>" -H "Content-Type: application/json" -d "{\"from\":20, \"size\":15, \"fromDate\":1520444072192, \"toDate\":1528216472192, \"sortDescending\":true, \"includeFiltersData\":true, \"auditEventType\":null, \"auditEventUser\":null}"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/AuditTrailFilteredResponse'

  # ::::: CLOUDTRAIL
  /v1/log-shipping/cloudtrails:
    get:
      operationId: getAccountCloudTrails
      summary: Retrieve all CloudTrail links
      description: >-
        Returns a list of CloudTrail links attached to your Logz.io account


        **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
      tags:
        - Manage CloudTrail links
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/CloudTrailResponse'
      x-code-samples:
        - lang: cURL
          source: 'curl -X GET "https://api.logz.io/v1/log-shipping/cloudtrails" -H "accept: application/json" -H "content-type: application/json" -H "X-API-TOKEN: <token>"'
    post:
      operationId: createCloudTrail
      summary: Create a CloudTrail link
      description: >-
        Creates a new link to your CloudTrail data in an AWS S3 bucket.


        **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
      tags:
        - Manage CloudTrail links
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/CloudTrailRequest'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/IdBean'
      x-code-samples:
        - lang: cURL
          source: >-
            'curl -X POST "https://api.logz.io/v1/log-shipping/cloudtrails" \
            -d "{
              \"accessKey\": \"ee07df5801500745419c6dff\",
              \"secretKey\": \"506d891fe2163a511b450eddc3279539f6\",
              \"bucket\": \"LogzioBucket\",
              \"prefix\": \"AWSLogs/7364988021587/myprefix\",
              \"active\": true
            }"'
  /v1/log-shipping/cloudtrails/{id}:
    get:
      operationId: getCloudTrail
      summary: Retrieve a CloudTrail link by ID
      description: >-
        Returns connection information on a single CloudTrail link.


        **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
      tags:
        - Manage CloudTrail links
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the CloudTrail link
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/CloudTrailResponse'
    put:
      operationId: updateCloudTrail
      summary: Update a CloudTrail link
      description: >-
        Updates connection information for a CloudTrail link.


        **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
      tags:
        - Manage CloudTrail links
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/CloudTrailRequest'
        - name: id
          in: path
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/MessageBean'
    delete:
      operationId: deleteCloudTrail
      summary: Delete a CloudTrail link
      description: >-
        Deletes a Logz.io link to CloudTrail.


        **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
      tags:
        - Manage CloudTrail links
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/MessageBean'

  # ::::: NOTIFICATION ENDPOINTS
  /v1/endpoints/slack:
    post:
      operationId: createSlack
      summary: Create a Slack endpoint
      tags:
        - Manage notification endpoints
      description: Creates a new Slack notification endpoint or sends a test message to Slack
      parameters:
        - name: test
          in: query
          required: false
          type: boolean
          default: false
          description: >-
            To send a test message to the endpoint, `true`. Otherwise, `false`.


            **Note:** If set to `true`, the notification endpoint is not created. To create the endpoint, you need to send the API request where `test=false`.
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/SlackEndpointUpsertRequest'
      x-code-samples:
        - lang: cURL
          source: 'curl -X POST "https://api.logz.io/v1/endpoints/slack?test=false" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <token>" -d \"{  \"title\": \"New Slack endpoint\",  \"description\": \"Sends notifications to #logzio-alerts channel\",  \"url\": \"https://hooks.slack.com/services/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\"}"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/EndpointUpsertResponse'
  /v1/endpoints/slack/{id}:
    put:
      tags:
        - Manage notification endpoints
      summary: Update Slack endpoint
      description: Updates a Slack notification endpoint or sends a test message to Slack
      operationId: updateSlack
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the notification endpoint
        - name: test
          in: query
          required: false
          type: boolean
          default: false
          description: >-
            To send a test message to the endpoint, `true`. Otherwise, `false`.


            **Note:** If set to `true`, the notification endpoint is not updated. To update the endpoint, you need to send the API request where `test=false`.
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/SlackEndpointUpsertRequest'
      x-code-samples:
        - lang: cURL
          source: 'curl -X PUT "https://api.logz.io/v1/endpoints/slack/269?test=false" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <token>" -d "{  \"title\": \"Updated Slack endpoint\",  \"description\": \"Sends notifications to #logzio-alerts channel\",  \"url\": \"https://hooks.slack.com/services/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\"}"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/EndpointUpsertResponse'
  /v1/endpoints/custom:
    post:
      tags:
        - Manage notification endpoints
      summary: Create a custom notification endpoint
      description: Creates a new notification endpoint for a custom integration or sends a test message to the custom endpoint.
      operationId: createCustom
      parameters:
        - name: test
          in: query
          required: false
          type: boolean
          default: false
          description: >-
            To send a test message to the endpoint, `true`. Otherwise, `false`.


            **Note:** If set to `true`, the notification endpoint is not created. To create the endpoint, you need to send the API request where `test=false`.
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/CustomEndpointUpsertRequest'
      x-code-samples:
        - lang: cURL
          source: 'curl -X POST "https://api.logz.io/v1/endpoints/custom" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <token>" -d "{\"title\": \"New custom endpoint\", \"description\": \"Sends notifications to my custom endpoint\", \"url\": \"https://my.custom-endpoint.com\", \"method\": \"POST\", \"headers\": \"authKey=6e30-60a9-3591\", \"bodyTemplate\": {\"subject\": \"Alert from Logz.io\", \"message\": {\"severity\": \"LOW\", \"body\": \"Check Logz.io for log activity\"} }}"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/EndpointUpsertResponse'
  /v1/endpoints/custom/{id}:
    put:
      tags:
        - Manage notification endpoints
      summary: Update a custom notification endpoint
      description: Updates a new notification endpoint for a custom integration or sends a test message to the custom endpoint.
      operationId: updateCustom
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
        - name: test
          in: query
          required: false
          type: boolean
          default: false
          description: >-
            To send a test message to the endpoint, `true`. Otherwise, `false`.


            **Note:** If set to `true`, the notification endpoint is not updated. To update the endpoint, you need to send the API request where `test=false`.
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/CustomEndpointUpsertRequest'
      x-code-samples:
        - lang: cURL
          source: 'curl -X PUT "https://api.logz.io/v1/endpoints/custom/275" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <token>" -d "{\"title\": \"Updated custom endpoint\", \"description\": \"Sends notifications to my custom endpoint\", \"url\": \"https://my.custom-endpoint.com/\", \"method\": \"POST\", \"headers\": \"authKey=6e30-60a9-3591\", \"bodyTemplate\": {\"subject\": \"Alert from Logz.io\", \"message\": {\"severity\": \"LOW\", \"body\": \"Check Logz.io for log activity\"} }}"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/EndpointUpsertResponse'
  /v1/endpoints/pager-duty:
    post:
      tags:
        - Manage notification endpoints
      summary: Create a PagerDuty endpoint
      description: Creates a new PagerDuty notification endpoint or sends a test message to PagerDuty.
      operationId: createPagerDuty
      parameters:
        - name: test
          in: query
          required: false
          type: boolean
          default: false
          description: >-
            To send a test message to the endpoint, `true`. Otherwise, `false`.


            **Note:** If set to `true`, the notification endpoint is not created. To create the endpoint, you need to send the API request where `test=false`.
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/PagerDutyEndpointUpsertRequest'
      x-code-samples:
        - lang: cURL
          source: 'curl -X POST "https://api.logz.io/v1/endpoints/pager-duty" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <token>" -d "{  \"title\": \"New PagerDuty endpoint\",  \"description\": \"Sends notifications to PagerDuty\",  \"serviceKey\": \"78c3b6cf0a884a538410fe281227eb0b\"}"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/EndpointUpsertResponse'
  /v1/endpoints/pager-duty/{id}:
    put:
      tags:
        - Manage notification endpoints
      summary: Update a PagerDuty endpoint
      description: Updates a PagerDuty notification endpoint or sends a test message to PagerDuty
      operationId: updatePagerDuty
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the notification endpoint
        - name: test
          in: query
          required: false
          type: boolean
          default: false
          description: >-
            To send a test message to the endpoint, `true`. Otherwise, `false`.


            **Note:** If set to `true`, the notification endpoint is not updated. To update the endpoint, you need to send the API request where `test=false`.
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/PagerDutyEndpointUpsertRequest'
      x-code-samples:
        - lang: cURL
          source: 'curl -X PUT "https://api.logz.io/v1/endpoints/pager-duty/271" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <token>" -d "{  \"title\": \"Updated PagerDuty endpoint\", \"description\": \"Sends notifications to PagerDuty\", \"serviceKey\": \"78c3b6cf0a884a538410fe281227eb0b\"}"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/EndpointUpsertResponse'
  /v1/endpoints/big-panda:
    post:
      tags:
        - Manage notification endpoints
      summary: Create a BigPanda endpoint
      description: Creates a new BigPanda notification endpoint or sends a test message to BigPanda.
      operationId: createBigPanda
      parameters:
        - name: test
          in: query
          required: false
          type: boolean
          default: false
          description: >-
            To send a test message to the endpoint, `true`. Otherwise, `false`.


            **Note:** If set to `true`, the notification endpoint is not created. To create the endpoint, you need to send the API request where `test=false`.
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/BigPandaEndpointUpsertRequest'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/EndpointUpsertResponse'
      x-code-samples:
        - lang: cURL
          source: 'curl -X POST "https://api.logz.io/v1/endpoints/big-panda" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <token>" -d "{  \"title\": \"New BigPanda endpoint\",  \"description\": \"Sends notifications to BigPanda\",  \"apiToken\": \"94ad63254a1397a51a1ae340c4f10890\",  \"appKey\": \"c687f9231619d7d7b959f33e4cc821a5\"}"'
  /v1/endpoints/big-panda/{id}:
    put:
      tags:
        - Manage notification endpoints
      summary: Update a BigPanda endpoint
      description: Updates a BigPanda notification endpoint or sends a test message to BigPanda
      operationId: updateBigPanda
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the notification endpoint
        - name: test
          in: query
          required: false
          type: boolean
          default: false
          description: >-
            To send a test message to the endpoint, `true`. Otherwise, `false`.


            **Note:** If set to `true`, the notification endpoint is not updated. To update the endpoint, you need to send the API request where `test=false`.
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/BigPandaEndpointUpsertRequest'
      x-code-samples:
        - lang: cURL
          source: 'curl -X PUT "https://api.logz.io/v1/endpoints/big-panda/272" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <token>" -d "{\"title\": \"Updated BigPanda endpoint\", \"description\": \"Sends notifications to BigPanda\", \"apiToken\": \"94ad63254a1397a51a1ae340c4f10890\", \"appKey\": \"c687f9231619d7d7b959f33e4cc821a5\"}"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/EndpointUpsertResponse'
  /v1/endpoints/data-dog:
    post:
      tags:
        - Manage notification endpoints
      summary: Create a Datadog endpoint
      description: Creates a new Datadog notification endpoint or sends a test message to Datadog.
      operationId: createDataDog
      parameters:
        - name: test
          in: query
          required: false
          type: boolean
          default: false
          description: >-
            To send a test message to the endpoint, `true`. Otherwise, `false`.


            **Note:** If set to `true`, the notification endpoint is not created. To create the endpoint, you need to send the API request where `test=false`.
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/DatadogEndpointUpsertRequest'
      x-code-samples:
        - lang: cURL
          source: 'curl -X POST "https://api.logz.io/v1/endpoints/data-dog" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <token>" -d "{  \"title\": \"New Datadog endpoint\",  \"description\": \"Sends notifications to Datadog\",  \"apiKey\": \"c687f9231619d7d7b959f33e4cc821a5\"}"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/EndpointUpsertResponse'
  /v1/endpoints/data-dog/{id}:
    put:
      tags:
        - Manage notification endpoints
      summary: Update a Datadog endpoint
      description: Updates a Datadog notification endpoint or sends a test message to Datadog
      operationId: updateDataDog
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the notification endpoint
        - name: test
          in: query
          required: false
          type: boolean
          default: false
          description: >-
            To send a test message to the endpoint, `true`. Otherwise, `false`.


            **Note:** If set to `true`, the notification endpoint is not updated. To update the endpoint, you need to send the API request where `test=false`.
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/DatadogEndpointUpsertRequest'
      x-code-samples:
        - lang: cURL
          source: 'curl -X PUT "http://endpoints/data-dog/273" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <token>" -d "{\"title\": \"Updated Datadog endpoint\", \"description\": \"Sends notifications to Datadog\", \"apiKey\": \"c687f9231619d7d7b959f33e4cc821a5\"}"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/EndpointUpsertResponse'
  /v1/endpoints/victorops:
    post:
      tags:
        - Manage notification endpoints
      summary: Create a VictorOps endpoint
      description: Creates a new VictorOps notification endpoint or sends a test message to VictorOps.
      operationId: createVictorops
      parameters:
        - name: test
          in: query
          required: false
          type: boolean
          default: false
          description: >-
            To send a test message to the endpoint, `true`. Otherwise, `false`.


            **Note:** If set to `true`, the notification endpoint is not created. To create the endpoint, you need to send the API request where `test=false`.
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/VictoropsEndpointUpsertRequest'
      x-code-samples:
        - lang: cURL
          source: 'curl -X POST "https://api.logz.io/v1/endpoints/victorops" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <token>" -d "{  \"title\": \"New VictorOps endpoint\",  \"description\": \"Sends notifications to VictorOps\",  \"routingKey\": \"devops\",  \"messageType\": \"WARNING\",  \"serviceApiKey\": \"c687f9231619d7d7b959f33e4cc821a5\"}"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/EndpointUpsertResponse'
  /v1/endpoints/victorops/{id}:
    put:
      tags:
        - Manage notification endpoints
      summary: Update a VictorOps endpoint
      description: Updates a VictorOps notification endpoint or sends a test message to VictorOps
      operationId: updateVictorops
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the notification endpoint
        - name: test
          in: query
          required: false
          type: boolean
          default: false
          description: >-
            To send a test message to the endpoint, `true`. Otherwise, `false`.


            **Note:** If set to `true`, the notification endpoint is not updated. To update the endpoint, you need to send the API request where `test=false`.
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/VictoropsEndpointUpsertRequest'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/EndpointUpsertResponse'
      x-code-samples:
        - lang: cURL
          source: 'curl -X PUT "https://api.logz.io/v1/endpoints/victorops/274" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <token>" -d "{\"title\": \"New VictorOps endpoint\", \"description\": \"Sends notifications to VictorOps\", \"routingKey\": \"devops\", \"messageType\": \"WARNING\", \"serviceApiKey\": \"c687f9231619d7d7b959f33e4cc821a5\"}"'
  /v1/endpoints/{id}:
    get:
      tags:
        - Manage notification endpoints
      summary: Retrieve an endpoint by ID
      description: Returns a JSON object representing a notification endpoint configured in the account.
      operationId: getEndpointById
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the notification endpoint
      x-code-samples:
        - lang: cURL
          source: 'curl -X GET "https://api.logz.io/v1/endpoints/88" -H "accept: application/json" -H "X-API-TOKEN: <token>"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Endpoint'
    delete:
      tags:
        - Manage notification endpoints
      summary: Delete an endpoint
      description: Deletes a notification endpoint
      operationId: deleteEndpoint
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the notification endpoint
      x-code-samples:
        - lang: cURL
          source: 'curl -X DELETE "https://api.logz.io/v1/endpoints/269" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <token>"'
      responses:
        204:
          description: successful operation
  /v1/endpoints:
    get:
      tags:
        - Manage notification endpoints
      summary: Retrieve all notification endpoints
      description: Returns an array of JSON objects. Each object represents a notification endpoint configured in the account.
      operationId: getAllEndpoints
      x-code-samples:
        - lang: cURL
          source: 'curl -X GET "https://api.logz.io/v1/endpoints" -H "accept: application/json" -H "X-API-TOKEN: <token>"'
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Endpoint'

  # ::::: KIBANA IMPORT/EXPORT
  /v1/kibana/export:
    post:
      tags:
        - Import or export Kibana objects
      summary: Export Kibana objects
      description: >-
        Exports the configuration of Kibana objects. All objects of a single type (search, visualization, or dashboard) are returned as an array of JSON objects. For example, if you export `visualization`, each visualization is returned as a JSON object.


        You can import objects using the [/kibana/import](#operation/importSavedObjects) endpoint.
      operationId: exportSavedObjects
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/KibanaExportRequest'
      x-code-samples:
        - lang: cURL
          source: 'curl -X POST "https://api.logz.io/v1/kibana/export" -H "accept: application/json" -H "content-type: application/json" -H "X-API-TOKEN: <token>" -d "{\"type\": \"visualization\"}"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/KibanaExportResponse'
  /v1/kibana/import:
    post:
      tags:
        - Import or export Kibana objects
      summary: Import Kibana objects
      description: Imports Kibana search, visualization, or dashboard objects. You can export objects using the [/kibana/export](#operation/exportSavedObjects) endpoint.
      operationId: importSavedObjects
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/KibanaImportRequest'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/KibanaImportResponse'
      x-code-samples:
        - lang: cURL
          source: >-
            curl -X POST "https://api.logz.io/v1/kibana/import" \
            -H "accept: application/json" -H "content-type: application/json" \
            -H "X-API-TOKEN: <token>" \
            -d "{
              \"kibanaVersion\": \"4.0.0-beta3\",
              \"override\": true,
              \"hits\": [
                {
                  \"_index\": \"logzioCustomerKibanaIndex\",
                  \"_type\": \"search\",
                  \"_id\": \"c245e530-fc60-11e7-b120-5320b1759c57\",
                  \"_score\": 1,
                  \"_source\": {
                    \"title\": \"example-saved-query\",
                    \"description\": \"\",
                    \"hits\": 0,
                    \"columns\": [
                      \"message\"
                    ],
                    \"sort\": [
                      \"@timestamp\",
                      \"desc\"
                    ],
                    \"version\": 1,
                    \"kibanaSavedObjectMeta\": {
                      \"searchSourceJSON\": \"{\"index\":\"[logzioCustomerIndex]YYMMDD\",\"highlightAll\":true,\"version\":true,\"query\":{\"query_string\":{\"query\":\"example-saved-query\"}},\"filter\":[]}\"
                    },
                    \"_createdBy\": {
                      \"userId\": 1,
                      \"fullName\": \"testadmin@logz.io\",
                      \"username\": \"testadmin@logz.io\"
                    },
                    \"_createdAt\": 1516287816456,
                    \"_updatedBy\": {
                      \"userId\": 1,
                      \"fullName\": \"testadmin@logz.io\",
                      \"username\": \"testadmin@logz.io\"
                    },
                    \"_updatedAt\": 1516287816456
                  }
                }
              ]
            }"


  # ::::: SHARED TOKENS
  /v1/shared-tokens/filters:
    get:
      operationId: getAllFilters
      summary: Retrieve all shared token filters
      description: >-
        Returns an array of JSON objects, where each object shows information for a shared token filter.


        **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
      tags:
        - Manage shared tokens
      x-code-samples:
        - lang: cURL
          source: 'curl -X GET "https://api.logz.io/v1/shared-tokens/filters" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <token>"'
      responses:
        200:
          description: successful operation
          schema:
            type: array
            uniqueItems: true
            items:
              $ref: '#/definitions/QueryFilter'
        400:
          description: not found
          schema:
            type: object
            properties:
              message:
                type: string
                example: token with id 12345 not found for account 54321
                description: The shared token or query filter could not be found
        403:
          description: forbidden
          schema:
            type: object
            properties:
              message:
                type: string
                example: Insufficient privileges
                description: Insufficient privileges. Contact our Support team for access to this API feature.
    post:
      operationId: createFilter
      summary: Create a shared token filter
      description: >-
        Creates a new shared token filter.


        **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
      tags:
        - Manage shared tokens
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/QueryFilter'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/QueryFilter'
        400:
          description: not found
          schema:
            type: object
            properties:
              message:
                type: string
                example: token with id 12345 not found for account 54321
                description: The shared token or query filter could not be found
        403:
          description: forbidden
          schema:
            type: object
            properties:
              message:
                type: string
                example: Insufficient privileges
                description: Insufficient privileges. Contact our Support team for access to this API feature.
  /v1/shared-tokens/filters/{id}:
    get:
      operationId: getFilter
      summary: Retrieve a shared token filter by ID
      description: >-
        Returns a shared token filter as a JSON object.


        **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
      tags:
        - Manage shared tokens
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the shared token filter
      x-code-samples:
        - lang: cURL
          source: 'curl -X GET "https://api.logz.io/v1/shared-tokens/filters/345" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <token>"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/QueryFilter'
        400:
          description: not found
          schema:
            type: object
            properties:
              message:
                type: string
                example: token with id 12345 not found for account 54321
                description: The shared token or query filter could not be found
        403:
          description: forbidden
          schema:
            type: object
            properties:
              message:
                type: string
                example: Insufficient privileges
                description: Insufficient privileges. Contact our Support team for access to this API feature.
    delete:
      operationId: deleteFilter
      summary: Delete a shared token filter
      description: >-
        Deletes a shared token filter.


        **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
      tags:
        - Manage shared tokens
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the shared token filter
      x-code-samples:
        - lang: cURL
          source: 'curl -X DELETE "https://api.logz.io/v1/shared-tokens/filters/345" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <token>"'
      responses:
        200:
          description: successful operation
        400:
          description: not found
          schema:
            type: object
            properties:
              message:
                type: string
                example: token with id 12345 not found for account 54321
                description: The shared token or query filter could not be found
        403:
          description: forbidden
          schema:
            type: object
            properties:
              message:
                type: string
                example: Insufficient privileges
                description: Insufficient privileges. Contact our Support team for access to this API feature.
  /v1/shared-tokens/{id}:
    get:
      operationId: getToken
      summary: Retrieve a shared token by ID
      description: >-
        Returns a shared token as a JSON object.


        **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
      tags:
        - Manage shared tokens
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the shared token
      x-code-samples:
        - lang: cURL
          source: 'curl -X GET "https://api.logz.io/v1/shared-tokens/1242" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <token>"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/SharedToken'
        400:
          description: not found
          schema:
            type: object
            properties:
              message:
                type: string
                example: token with id 12345 not found for account 54321
                description: The shared token or query filter could not be found
        403:
          description: forbidden
          schema:
            type: object
            properties:
              message:
                type: string
                example: Insufficient privileges
                description: Insufficient privileges. Contact our Support team for access to this API feature.
    put:
      operationId: updateToken
      summary: Update a shared token
      description: >-
        Changes the filters attached to a shared token.


        **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
      tags:
        - Manage shared tokens
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/UpdateSharedTokenRequest'
      x-code-samples:
        - lang: cURL
          source: 'curl -X PUT "https://api.logz.io/v1/shared-tokens/1242" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <token>" -d "{\"filters\":[339]}"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/SharedToken'
        400:
          description: not found
          schema:
            type: object
            properties:
              message:
                type: string
                example: token with id 12345 not found for account 54321
                description: The shared token or query filter could not be found
        403:
          description: forbidden
          schema:
            type: object
            properties:
              message:
                type: string
                example: Insufficient privileges
                description: Insufficient privileges. Contact our Support team for access to this API feature.
    delete:
      operationId: deleteToken
      summary: Delete a shared token
      description: >-
        Deletes a shared token.


        **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
      tags:
        - Manage shared tokens
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the shared token
      x-code-samples:
        - lang: cURL
          source: 'curl -X DELETE "https://api.logz.io/v1/shared-tokens/1250" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <token>"'
      responses:
        204:
          description: successful operation
        400:
          description: not found
          schema:
            type: object
            properties:
              message:
                type: string
                example: token with id 12345 not found for account 54321
                description: The shared token or query filter could not be found
        403:
          description: forbidden
          schema:
            type: object
            properties:
              message:
                type: string
                example: Insufficient privileges
                description: Insufficient privileges. Contact our Support team for access to this API feature.
  /v1/shared-tokens:
    get:
      operationId: getAllTokens
      summary: Retrieve all shared tokens
      description: >-
        Returns an array of JSON objects, where each object shows information for a shared token.


        **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
      tags:
        - Manage shared tokens
      responses:
        200:
          description: successful operation
          schema:
            type: array
            uniqueItems: true
            items:
              $ref: '#/definitions/SharedToken'
        400:
          description: not found
          schema:
            type: object
            properties:
              message:
                type: string
                example: token with id 12345 not found for account 54321
                description: The shared token or query filter could not be found
        403:
          description: forbidden
          schema:
            type: object
            properties:
              message:
                type: string
                example: Insufficient privileges
                description: Insufficient privileges. Contact our Support team for access to this API feature.
      x-code-samples:
        - lang: cURL
          source: 'curl -X GET "https://api.logz.io/v1/shared-tokens" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <token>"'
    post:
      operationId: createToken
      summary: Create a shared token
      description: >-
        Creates a new shared token.


        **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
      tags:
        - Manage shared tokens
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/CreateSharedTokenRequest'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/SharedToken'
        400:
          description: not found
          schema:
            type: object
            properties:
              message:
                type: string
                example: token with id 12345 not found for account 54321
                description: The shared token or query filter could not be found
        403:
          description: forbidden
          schema:
            type: object
            properties:
              message:
                type: string
                example: Insufficient privileges
                description: Insufficient privileges. Contact our Support team for access to this API feature.
      x-code-samples:
        - lang: cURL
          source: 'curl -X POST "https://api.logz.io/v1/shared-tokens" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <token>" -d "{ \"tokenName\": \"Support shared token\", \"filters\":[339]}"'

  # ::::: SNAPSHOTS
  /v1/snapshotter:
    post:
      tags:
        - Logz.io snapshots
      summary: Create a snapshot
      description: Creates a new Kibana shapshot and shares with recipients through email or notification endpoint
      operationId: createSnapshot
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/SnapshotCreateRequest'
      x-code-samples:
        - lang: cURL
          source: >-
            curl -X POST "https://api.logz.io/v1/snapshotter" \
              -H "accept: application/json" \
              -H "X-API-TOKEN: <token>" \
              -H "Content-Type: application/json" \
              -d '{
                "snapshotType": "VISUALIZATION",
                "snapshotSavedObjectId": "c3cf4ac9-81f7-60ef-1a9d-d32c1fa7c012",
                "emails": [ "shalom@logz.io" ],
                "message": "Hey, let me know if you need me to do anything about this.",
                "timeFrameFrom": 1527951945,
                "timeFrameTo": 1528038346,
                "snapshotTimeZone": "UTC",
                "darkTheme": true
              }'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/SnapshotCreateResponse'
  /v1/snapshotter/{snapshotId}:
    get:
      tags:
        - Logz.io snapshots
      summary: Retrieve a snapshot by ID
      description: Returns the details of a snapshot, such as status and the snapshot image URL
      operationId: getSnapshot
      parameters:
        - name: snapshotId
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the snapshot
          example: 3094
      x-code-samples:
        - lang: cURL
          source: 'curl -X GET "https://api.logz.io/v1/snapshotter/3094" -H "accept: application/json" -H "X-API-TOKEN: <token>"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/SnapshotGetResponse'

  # ::::: USER MANAGEMENT
  /v1/user-management:
    get:
      summary: Retrieve all users
      description: Returns a list of users as an array of JSON objects.
      tags:
        - Manage users
      operationId: listUsers
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
      x-code-samples:
        - lang: cURL
          source: 'curl -X GET "https://api.logz.io/v1/user-management" -H "accept: application/json" -H "content-type: application/json" -H "X-API-TOKEN: <token>"'
    post:
      summary: Create a user
      description: Creates a new user with specified permissions to access your log data
      tags:
        - Manage users
      operationId: createUser
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/UserManagementUpsertRequest'
      x-code-samples:
        - lang: cURL
          source: 'curl -X POST "https://api.logz.io/v1/user-management" -H "accept: application/json" -H "content-type: application/json" -H "X-API-TOKEN: <token>" -d "{ \"username\": \"artvandelay@kramerica.com\",  \"fullName\": \"Art Vandelay\",  \"accountID\": 11111,  \"roles\": [ 2 ]}"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/UserManagementUpsertResponse'
  /v1/user-management/{id}:
    get:
      tags:
        - Manage users
      summary: Retrieve a user by ID
      description: Returns user information and permissions as a JSON object
      operationId: getUser
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the user
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/User'
      x-code-samples:
        - lang: cURL
          source: 'curl -X GET "https://api.logz.io/v1/user-management/55555" -H "accept: application/json" -H "content-type: application/json" -H "X-API-TOKEN: <token>"'
    put:
      tags:
        - Manage users
      summary: Update a user
      description: Changes an existing user's details or permissions.
      operationId: updateUser
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/UserManagementUpsertRequest'
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the user
          example: 11300
      x-code-samples:
        - lang: cURL
          source: 'curl -X PUT "https://api.logz.io/v1/user-management/12345"  -H "accept: application/json" -H "content-type: application/json" -H "X-API-TOKEN: <token>" -d "{ \"username\": \"drvenkman@gbusters.com\",  \"fullName\": \"Peter Venkman\",  \"accountID\": 13485,  \"roles\": [ 2 ]}"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/UserManagementUpsertResponse'
    delete:
      tags:
        - Manage users
      summary: Delete a user
      description: Revokes a user's access to your accounts
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the user
          example: 11300
      x-code-samples:
        - lang: cURL
          source: 'curl -X DELETE "https://api.logz.io/v1/user-management/11300" -H "accept: application/json" -H "X-API-TOKEN: <token>"'
      responses:
        200:
          description: successful operation
  /v1/user-management/suspend/{id}:
    post:
      tags:
        - Manage users
      summary: Suspend a user
      description: Locks a user's access to your accounts
      operationId: suspendUser
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the user
          example: 3325
      x-code-samples:
        - lang: cURL
          source: 'curl -X POST "https://api.logz.io/v1/user-management/suspend/11300" -H "accept: application/json" -H "X-API-TOKEN: <token>"'
      responses:
        200:
          description: successful operation
  /v1/user-management/unsuspend/{id}:
    post:
      tags:
        - Manage users
      summary: Unsuspend a user
      description: Restores a suspended user's access to your accounts
      operationId: unsuspendUser
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the user
          example: 3325
      x-code-samples:
        - lang: cURL
          source: 'curl -X POST "https://api.logz.io/v1/user-management/unsuspend/11300" -H "accept: application/json" -H "X-API-TOKEN: <token>"'
      responses:
        200:
          description: successful operation



definitions:
  # ::::: ACCOUNTS DEFINITIONS
  WhoAmI:
    type: object
    properties:
      accountName:
        type: string
        description: Name of the account
        example: Jean Valjean
  AccountUtilizationSettings:
    type: object
    description: Settings for logging metrics on your account utilization, such as used and expected data volume at current indexing rate.
    properties:
      frequencyMinutes:
        type: integer
        format: int32
        description: How often utilization metrics are written to logs, in minutes
        example: 5
      utilizationEnabled:
        type: boolean
        description: If utilization metrics are written to logs, `true`. Otherwise, `false`.
        example: true
  AccountView:
    type: object
    properties:
      accountId:
        type: integer
        format: int32
      accountName:
        type: string
      accountToken:
        type: string
      active:
        type: boolean
      esIndexPrefix:
        description: Prefix of the Elasticsearch Index used to index the data.
        type: string
      isFlexible:
        type: boolean
        default: false
        description: >-
          Indicates whether the plan has **shared volume** enabled.
          
          
          If `true`, the volume of data that the account can index per calendar day is determined by 2 parameters: `reservedDailyGB` (Required) and  `maxDailyGB` (Optional, can be null).

          
          If `false`, the volume of data that the account can index per calendar day is determined only by `maxDailyGB`. The parameter `reservedDailyGB` does not apply.
        example: true
      reservedDailyGB:
        type: number
        format: float
        description: >-
          * If `isFlexible=false`, this field does not apply.
   
         
          * If `isFlexible=true`, this determines the daily volume in GB reserved for the account. This capacity is guaranteed and cannot be used by any other accounts.
        example: 3
      maxDailyGB:
        type: number
        format: float
        description: >-
          The maximum volume of data that an account can index per calendar day.


          * If `isFlexible=false` this is the only capacity reserved for use by the account. Cannot be null.


          * If `isFlexible=true` this is used to limit the account's access to shared volume. Once the data shipped to the account exceeds the account's reserved capacity, the account can continue to index data up to its `maxDailyGB`, as long as shared volume is available.
          
          
          * If null (and `isFlexible=true`), the account is uncapped and can continue to index data as long as shared volume is available.
        example: 5
      retentionDays:
        type: integer
        format: int32
        description: How long log data is stored and searchable in Kibana, in days.
  DailyUsagesList:
    type: object
    properties:
      usage:
        type: array
        items:
          $ref: '#/definitions/LHDailyCount'
  TimeBasedAccountUpdateRequest:
    type: object
    required:
      - accountName
      - sharingObjectsAccounts
    properties:
      accountName:
        type: string
        description: Name of the account
        example: AWS Lambda svr 3
      reservedDailyGB:
        type: number
        format: float
        default: null
        description: >-
          * If `isFlexible=false`, this field does not apply. Leave it null.
   
         
          * If `isFlexible=true`, this parameter is required. It determines the volume that is reserved for the account.
        example: 3
      maxDailyGB:
        type: number
        format: float
        description: >-
          The maximum volume of data that an account can index per calendar day.


          * If `isFlexible=false` this parameter can only be used to update a sub account, but not a main account. It determines the only capacity reserved for use by the account. It cannot be null.


          * If `isFlexible=true` this is used to limit the account's access to shared volume. Once the data shipped to the account exceeds the account's reserved capacity, the account can continue to index data up to its `maxDailyGB`, as long as shared volume is available.
          
          
          * If null (and `isFlexible=true`), the account is uncapped and can continue to index data as long as shared volume is available.
        example: 5
      retentionDays:
        type: integer
        format: int32
        description: This is how long log data is stored and searchable in Kibana, in days.
        minimum: 1
        example: 5
      searchable:
        $ref: "#/definitions/Searchable"
      accessible:
        $ref: "#/definitions/Accessible"
      sharingObjectsAccounts:
        type: array
        items:
          type: integer
          format: int32
          example: [ 88888, 55555 ]
        description: IDs of accounts that can access this account's data.
      docSizeSetting:
        $ref: '#/definitions/DocSizeSetting'
      utilizationSettings:
        $ref: '#/definitions/AccountUtilizationSettings'
  DetailedTimeBasedAccount:
    type: object
    properties:
      subAccountRelation:
        $ref: '#/definitions/SubAccountRelation'
      account:
        $ref: '#/definitions/AccountView'
      sharingObjectsAccounts:
        type: array
        items:
          $ref: '#/definitions/AccountView'
      utilizationSettings:
        $ref: '#/definitions/AccountUtilizationSettings'
      dailyUsagesList:
        $ref: '#/definitions/DailyUsagesList'
      docSizeSetting:
        $ref: '#/definitions/DocSizeSetting'
  LHDailyCount:
    type: object
    properties:
      date:
        type: integer
        format: int64
      bytes:
        type: integer
        format: int64
  TimeBasedAccountCreateRequest:
    type: object
    required:
      - accountName
      - email
      - sharingObjectsAccounts
      - retentionDays
    properties:
      email:
        type: string
        pattern: "^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\.[A-Za-z0-9-]+)*(\\.[A-Za-z]{2,})$"
        description: Account administrator's email address
        example: help@logz.io
      accountName:
        type: string
        description: Name of the account
        example: AWS Lambda svr 3
      reservedDailyGB:
        type: number
        format: float
        default: null
        description: >-
          * If `isFlexible=false`, don't send this field or send it null.
   
         
          * If `isFlexible=true`, this parameter is required. It determines the volume that is reserved for the account.
        example: 3
      maxDailyGB:
        type: number
        format: float
        description: >-
          The maximum volume of data that an account can index per calendar day.


          * If `isFlexible=false` this is the only capacity reserved for use by the account. Cannot be null.


          * If `isFlexible=true` this is used to limit the account's access to shared volume. Once the data shipped to the account exceeds the account's reserved capacity, the account can continue to index data up to its `maxDailyGB`, as long as shared volume is available.
          
          
          * If null (and `isFlexible=true`), the account is uncapped and can continue to index data as long as shared volume is available.
        example: 5
      retentionDays:
        type: integer
        format: int32
        description: How long log data is stored and searchable in Kibana, in days.
        minimum: 1
        example: 5
      searchable:
        $ref: "#/definitions/Searchable"
      accessible:
        $ref: "#/definitions/Accessible"
      sharingObjectsAccounts:
        type: array
        items:
          type: integer
          format: int32
          example: [ 88888, 55555 ]
        description: IDs of accounts that can access this account's data
      docSizeSetting:
        $ref: '#/definitions/DocSizeSetting'
      utilizationSettings:
        $ref: '#/definitions/AccountUtilizationSettings'
  SharingAccount:
    type: object
    properties:
      accountId:
        type: integer
        format: int32
        description: ID of the account
        example: 88888
      accountName:
        type: string
        description: Name of the account
        example: dev group 8
  SubAccountRelation:
    type: object
    description: Properties of the sub accounts related to this main account
    properties:
      ownerAccountId:
        type: integer
        format: int32
        description: ID of the main account
        example: 88765
      subAccountId:
        type: integer
        format: int32
        description: ID of the sub account
        example: 89234
      searchable:
        $ref: "#/definitions/Searchable"
      accessible:
        $ref: "#/definitions/Accessible"
      createdDate:
        type: string
        format: date-time
        description: >-
          Date this account was created.
          Format: `{yyyy}-{mm}-{dd}T{hh}:{mm}:{ss}Z`
        example: 2018-02-22T09:14:53Z
      lastUpdatedDate:
        type: string
        format: date-time
        description: >-
          Date this account was last updated.
          Format: `{yyyy}-{mm}-{dd}T{hh}:{mm}:{ss}Z`
        example: 2018-04-01T19:18:38Z
      lastUpdaterUserId:
        type: integer
        format: int32
        description: ID of the user who last updated this account
        example: 33342
      type:
        type: string
        enum:
          - OWNER_ACCOUNT
          - SUB_ACCOUNT
          - TIMELESS_INDEX
          - ALL
        description: Account type
        example: SUB_ACCOUNT
  TimeBasedAccount:
    type: object
    properties:
      accountId:
        type: integer
        format: int32
        description: ID of the account
        example: 99999
      email:
        type: null
        nullable: true
        description: Email address of the user who created the account
        example: null
      accountName:
        type: string
        description: Name of the account
        example: 404 errors
      accountToken:
        type: string
        description: Account log shipping token (unique to every account)
        example: f483abe93b
      isFlexible:
        type: boolean
        default: false
        description: >-
          Indicates whether the plan has **shared volume** enabled.
          
          
          If `true`, the volume of data that the account can index per calendar day is determined by 2 parameters: `reservedDailyGB` (Required) and  `maxDailyGB` (Optional, can be null).

          
          If `false`, the volume of data that the account can index per calendar day is determined only by `maxDailyGB`. The parameter `reservedDailyGB` does not apply and should be null.
        example: true
      reservedDailyGB:
        type: number
        format: float
        default: null
        description: >-
          * If `isFlexible=false`, this field does not apply and will be null.

          * If `isFlexible=true`, this determines the daily volume in GBs that is reserved for the account.
        example: 3
      maxDailyGB:
        type: number
        format: float
        description: >-
          The maximum volume of data that an account can index per calendar day.


          * If `isFlexible=false` this is the only capacity reserved for use by the account. Cannot be null.


          * If `isFlexible=true` this is used to limit the account's access to shared volume. Once the data shipped to the account exceeds the account's reserved capacity, the account can continue to index data up to its `maxDailyGB`, as long as shared volume is available. 
          
          
          * If null (and `isFlexible=true`), the account is uncapped and can continue to index data as long as shared volume is available.
        example: 5
      retentionDays:
        type: integer
        format: int32
        description: How long log data is retained in the Elasticsearch Index and searchable in Kibana, in days.
        example: 5
      searchable:
        $ref: "#/definitions/Searchable"
      accessible:
        $ref: "#/definitions/Accessible"
      docSizeSetting:
        $ref: '#/definitions/DocSizeSetting'
      sharingObjectsAccounts:
        type: array
        items:
          $ref: '#/definitions/SharingAccount'
        description: Accounts that have permissions to access this account's Kibana objects.
      utilizationSettings:
        $ref: '#/definitions/AccountUtilizationSettings'
  TimeBasedAccountCreationResponse:
    type: object
    properties:
      accountId:
        type: integer
        format: int32
        description: ID of the account
        example: 99999
      accountToken:
        type: string
        description: Account log shipping token (unique to this account)
        example: x93afghvexbn841h45vkjn5
  Searchable:
    type: boolean
    description: If other accounts can search this account's logs, `true`. Otherwise, `false`.
    default: false
    example: true
  Accessible:
    type: boolean
    description: If users of the main account can access this account, `true`. Otherwise, `false`.
    default: false
    example: false
  DocSizeSetting:
    type: boolean
    description: If document size is attached to logs, `true`. Otherwise, `false`.
    default: false
    example: true

  # ::::: AUDIT TRAIL DEFINITIONS
  AuditTrailEventTypesResponse:
    type: object
    properties:
      eventTypes:
        type: array
        items:
          type: string
        description: Event types in the audit trail
        example: [ "Added user", "Admin created a sub account", "Changed password", "Failed login", "Login", "Logz.io admin has enabled a sawmill configuration", "Suspended user", "User created a token", "User installed an ELK app" ]
  AuditEventData:
    type: object
    properties:
      auditEventUser:
        $ref: '#/definitions/AuditEventUser'
      date:
        type: integer
        format: int64
        description: Date of the audit event, as Unix epoch milliseconds
        example: 1527168668
      auditEventTypeTitle:
        type: string
        description: The event type
        example: Admin created a sub account
      ip:
        type: string
        description: IP address of the client device that generated the event
        example: 52.203.237.249
      geoLocation:
        type: string
        description: Geographical location of the device that made the request
        example: New York - USA
      extraDataList:
        type: array
        items:
          $ref: '#/definitions/AuditEventExtraData'
      valid:
        type: boolean
  AuditEventExtraData:
    type: object
    properties:
      fieldName:
        type: string
        description: Name of the field
        example: Account name
      oldValue:
        type: string
        description: Original value of the field
        example: Test account
      newValue:
        type: string
        description: New value of the field
        example: Apache access logs
  AuditEventTypeData:
    type: object
    properties:
      auditEventType:
        type: string
        description: Code for the event type
        example: ADD_USER
      auditEventTypeTitle:
        type: string
        description: Description of the event type
        example: Added user
  AuditEventUser:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: ID of the user or token
        example: 5374
      fullName:
        type: string
        description: First and last name of the user, or name of the token
        example: Larry Appleton
      deleted:
        type: boolean
        description: If this user or token has been deleted, `true`. Otherwise, `false`.
        example: false
      userToken:
        type: boolean
        description: If this is a token, `true`. If this is a user, `false`.
  AuditTrailFilteredResponse:
    type: object
    properties:
      pageSize:
        type: integer
        format: int32
        minimum: 0
        maximum: 500
        description: The number of results requested
        example: 50
      from:
        type: integer
        format: int32
        minimum: 0
        maximum: 2147483647
        description: Of the results found, the first result returned
        example: 0
      total:
        type: integer
        format: int64
        minimum: 0
        maximum: 500
        description: Total number of results that met the search criteria
      results:
        type: array
        items:
          $ref: '#/definitions/AuditEventData'
      auditEventUsersList:
        type: array
        items:
          $ref: '#/definitions/AuditEventUser'
      auditEventTypesList:
        type: array
        items:
          $ref: '#/definitions/AuditEventTypeData'
  AuditTrailFilterRequest:
    type: object
    properties:
      size:
        type: integer
        format: int32
        minimum: 0
        maximum: 500
        default: 500
        description: Maximum number of results to return
        example: 150
      from:
        type: integer
        format: int32
        minimum: 0
        maximum: 2147483647
        default: 0
        description: Of the results found, the first result to return
        example: 15
      auditEventUser:
        $ref: '#/definitions/AuditEventUser'
      auditEventType:
        type: string
        description: Code for the event type
        example: ADD_USER
      fromDate:
        type: integer
        format: int64
        description: Starting timedate, as Unix epoch milliseconds
        example: 389880000
      toDate:
        type: integer
        format: int64
        description: Ending timedate, as Unix epoch milliseconds
        example: 414763200
      sortDescending:
        type: boolean
        description: To sort results in descending order, `true`. For ascending order, `false`.
      includeFiltersData:
        type: boolean

  # ::::: CLOUDTRAIL DEFINITIONS
  CloudTrailResponse:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: ID of the CloudTrail link
        example: 15
      accessKey:
        type: string
        description: AWS S3 access key
        example: ee07df5801500745419c6dff
      bucket:
        type: string
        description: AWS S3 bucket name
        example: cloudtrails bucket
      prefix:
        type: string
        description: AWS S3 key prefix
        example: AWSLogs/7364988021587/myprefix
      active:
        type: boolean
        description: If the CloudTrail link is active, `true`. If it is disabled, `false`.
        example: true
  IdBean:
    type: object
    properties:
      id:
        type: integer
        format: int32
        readOnly: true
        minimum: 1
        description: ??
  CloudTrailRequest:
    type: object
    properties:
      accessKey:
        type: string
        description: AWS S3 access key
        example: ee07df5801500745419c6dff
      secretKey:
        type: string
        description: AWS secret access key
        example: 506d891fe2163a511b450eddc3279539f6
      bucket:
        type: string
        description: AWS S3 bucket name
        example: LogzioBucket
      prefix:
        type: string
        description: AWS S3 key prefix
        example: AWSLogs/7364988021587/myprefix
      active:
        type: boolean
        description: If the CloudTrail link is active, `true`. If it is disabled, `false`.
  MessageBean:
    type: object
    properties:
      message:
        type: string
        readOnly: true

  # ::::: NOTIFICATION ENDPOINTS DEFINITIONS
  EndpointUpsertResponse:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: "ID of the notification endpoint. If the API call was made where `test=true`, then no changes are made to the endpoint. In this case, the response body contains `{\"id\": -1}` to indicate that a test message was sent."
        example: 88
  SlackEndpointUpsertRequest:
    type: object
    properties:
      title:
        type: string
        description: Name of the endpoint
        example: New Slack endpoint
      description:
        type: string
        description: Detailed description of the endpoint
        example: Sends notifications to logzio-alerts channel
      url:
        type: string
        description: Your Slack webhook URL
        example: https://hooks.slack.com/services/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
  CustomEndpointUpsertRequest:
    type: object
    properties:
      title:
        type: string
        description: Name of the endpoint
        example: New custom endpoint
      description:
        type: string
        description: Detailed description of the endpoint
        example: Sends notifications to my custom endpoint
      url:
        type: string
        description: URL where the notification will be sent
        example: https://my.custom-endpoint.com
      method:
        type: string
        description: The HTTP used to send the notification
        example: POST
      headers:
        type: string
        description: Header parameters to include, as comma-separated key-value pairs
        example: authKey=6e30-60a9-3591
      bodyTemplate:
        type: object
        description: JSON object that serves as the template for the message body.
        additionalProperties:
          type: object
        example: {"subject": "Alert from Logz.io", "message": {"severity": "LOW", "body": "Check Logz.io for log activity"}}
  PagerDutyEndpointUpsertRequest:
    type: object
    properties:
      title:
        type: string
        description: Name of the endpoint
        example: PagerDuty endpoint
      description:
        type: string
        description: Detailed description of the endpoint
        example: Sends notifications to PagerDuty
      serviceKey:
        type: string
        description: API key from PagerDuty
        example: 94ad63254a1397a51a1ae340c4f10890
  BigPandaEndpointUpsertRequest:
    type: object
    properties:
      title:
        type: string
        description: Name of the endpoint
        example: BigPanda endpoint
      description:
        type: string
        description: Detailed description of the endpoint
        example: Sends notifications to BigPanda
      apiToken:
        type: string
        description: API authentication token from BigPanda
        example: 94ad63254a1397a51a1ae340c4f10890
      appKey:
        type: string
        description: Application key from BigPanda
        example: c687f9231619d7d7b959f33e4cc821a5
  DatadogEndpointUpsertRequest:
    type: object
    properties:
      title:
        type: string
        description: Name of the endpoint
        example: Datadog endpoint
      description:
        type: string
        description: Detailed description of the endpoint
        example: Sends notifications to Datadog
      apiKey:
        type: string
        description: API key from Datadog
        example: c687f9231619d7d7b959f33e4cc821a5
  VictoropsEndpointUpsertRequest:
    type: object
    required:
      - messageType
      - routingKey
      - serviceApiKey
    properties:
      title:
        type: string
        description: Name of the endpoint
        example: VictorOps endpoint
      description:
        type: string
        description: Detailed description of the endpoint
        example: Sends notifications to VictorOps
      routingKey:
        type: string
        description: Alert routing key from VictorOps
        example: devops
      messageType:
        type: string
        description: VictorOps REST API `message_type`. For more information, see [VictorOps knowledge base](https://help.victorops.com/knowledge-base/victorops-restendpoint-integration/).
        example: WARNING
      serviceApiKey:
        type: string
        description: API key from VictorOps
        example: c687f9231619d7d7b959f33e4cc821a5
  Endpoint:
    type: object
    properties:
      endpointType:
        type: string
        enum:
          - BigPanda
          - Slack
          - Datadog
          - Custom
          - PagerDuty
          - VictorOps
        description: The notification endpoint type that will receive alert messages
        example: Slack
      id:
        type: integer
        format: int32
        description: ID of the notification endpoint
        example: 88
      title:
        type: string
        description: Name of the endpoint
        example: Slack
      description:
        type: string
        description: Detailed description of the endpoint
        example: Endpoint for sending alerts to Slack

  # ::::: KIBANA IMPORT/EXPORT DEFINITIONS
  KibanaExportResponse:
    type: object
    properties:
      kibanaVersion:
        type: string
        readOnly: true
        description: The version of Kibana used at the time of export
        example: 4.0.0-beta3
      hits:
        type: array
        readOnly: true
        items:
          type: object
        description: Exported Kibana objects
  KibanaExportRequest:
    type: object
    required:
      - type
    properties:
      type:
        type: string
        enum:
          - search
          - visualization
          - dashboard
        description: The object type to export
  KibanaImportResponse:
    type: object
    properties:
      created:
        type: array
        readOnly: true
        items:
          type: string
          example: E-commerce-App-Transactions-overtime
        description: Name of Kibana objects that were created
      updated:
        type: array
        readOnly: true
        items:
          type: string
          example: HTTP-Response-over-time
        description: Names of the Kibana objects that were overwritten. Objects are shown here only if `override` was `true` in the import call.
      ignored:
        type: array
        readOnly: true
        items:
          type: string
          example: Transaction-overtime
        description: Names of the Kibana objects that were not overwritten. Objects are shown here only if `override` was `false` in the import call.
      failed:
        type: array
        readOnly: true
        items:
          type: string
          example: Apache-Response-Over-Time
        description: Names of the Kibana objects that could not be created, updated, or ignored.
  KibanaImportRequest:
    type: object
    properties:
      kibanaVersion:
        type: string
        description: The version of Kibana used at the time of export. This must match the current version of Kibana that you're importing to.
        example: 4.0.0-beta3
      override:
        type: boolean
        description: >-
          To update an existing object with the same ID, `true`. Otherwise, `false`.


          If override is `true`, response message shows overwritten objects as `updated`. If override is `false`, no existing objects are updated, and response message shows these objects as `ignored`.
        example: false
      hits:
        type: array
        items:
          type: object
          additionalProperties:
            type: object
        description: >-
          Each JSON object in the array represents a discrete Kibana object.


          **Note:** As a best practice, import only objects that were exported from Kibana.

  # ::::: SEARCH, SCROLL DEFINITIONS
  ScrollResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
        readOnly: true
        example: 200
      scrollId:
        type: string
        readOnly: true
        description: Keep passing this ID in the request until you've retrieved all of the results. Copy this ID and pass it as the field `scroll_id` in a request to the same endpoint to retrieve the next page of results. (Remember to first clear the request body of all other parameters.)
        example: DnF1ZXJ5VGhlbkZldGNoCQAAAAAWXRbqFlNpSWRrTUtXUUR1N1pJbG9uSkJINncAAAAAFp6B-xZTTVFrMGt4eVFnZXhQZV9YbVRrU3NnAAAAABakA8QWNjY1RUZtdWZRS1NZZWt1ZERTNHNaQQAAAAAWXRbrFlNpSWRrTUtXUUR1N1pJbG9uSkJINncAAAAAFl0W7BZTaUlka01LV1FEdTdaSWxvbkpCSDZ3AAAAABQ1nb4WVjRyRlUxZWRUU0dzbTV5VVVqYkhxdwAAAAAUdHVqFlF0b3Znei1ZUXgtZEkyZkR3M0pMbGcAAAAAFvGs6hZKVklxaXIyZ1NOQzF5NHg1cmhtVDV3AAAAABR0dWkWUXRvdmd6LVlReC1kSTJmRHczSkxsZw==
      hits:
        type: string
        readOnly: true
        description: Query results in stringified JSON format
  ScrollRequest:
    type: object
    properties:
      query:
        type: object
        description: >-
          Add a search query to receive the `scrollID` in the result.
          
          
          The query can take any of the parameters described in the [Elasticsearch Search API DSL documentation](https://www.elastic.co/guide/en/elasticsearch/reference/6.8/search.html) with the exceptions stated below.


          You can only add the `query` parameters if you are not passing the `scroll_id` in the request.
          
          #### Limitations

          * The query can only run on 2 consecutive indexes. By default, the query runs on data sent today and yesterday. You can also add a filter on `timestamp` to search a smaller time frame.

          * When using `query_string`, `allow_leading_wildcard` must be set to `false`

          * `wildcard` can't start with `*` or `?`

          * Can't use `fuzzy_max_expansions`,  `max_expansions`, or `max_determinized_states`
      size:
        type: integer
        format: int32
        description: Number of results to return
        example: 10
      from:
        type: integer
        format: int32
        minimum: 0
        description: Of the results found, the first result to return
        example: 0
      sort:
        type: array
        items:
          type: object
        description: >-
          #### Limitations

          * Can't sort on `message`
      _source:
        type: object
        description: >-
          The object `includes` specifies an array of strings specifying an array of fields to return.
          
          * If you omit `_source` from the request, all fields are returned.

          * If you pass `'_source': false`, it will exclude the `_source` field from the results.
        properties:
          includes: 
            type: array of strings
            description: Array of fields to return
            example: message
        items:
          - type: string
            description: Field to return.
      post_filter:
        type: object
      scroll:
        type: string
        description: >-
          These time units are supported:

          <table>
            <thead><th>Unit</th><th>Description</th></thead>
            <tr><td><code>m</code></td><td>minutes</td></tr>
            <tr><td><code>s</code></td><td>seconds</td></tr>
            <tr><td><code>ms</code></td><td>milliseconds</td></tr>
            <tr><td><code>micros</code></td><td>microseconds</td></tr>
            <tr><td><code>nanos</code></td><td>nanoseconds</td></tr>
          </table>


          #### Limitations

          * Time search must be ≤ 5 minutes. If no time is specified, default is `1m` (1 minute).

  # ::::: SHARED TOKENS DEFINITIONS
  QueryFilter:
    type: object
    required:
      - field
      - value
    properties:
      id:
        type: integer
        format: int32
        description: ID of the shared token filter
        example: 339
      field:
        type: string
        pattern: '^[a-zA-Z0-9_@.-]+$'
        description: The field to filter
      value:
        type: string
        pattern: '^[a-zA-Z0-9_@.-]+$'
        description: The filter query
      description:
        type: string
        description: Name of the filter
        example: 503 responses
  SharedToken:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: ID of the shared token
        example: 1241
      name:
        type: string
        description: Descriptive name of the token
        example: Snapshotting token
      token:
        type: string
        description: The token
        example: 6c36edf51-cf93883aa35-5bc6ce6-7bcfe60d87
      filters:
        type: array
        uniqueItems: true
        items:
          type: integer
          format: int32
        description: Array of filter IDs attached to each token. If no filter is attached, `null`.
        example: [339, 340]
  CreateSharedTokenRequest:
    type: object
    properties:
      tokenName:
        type: string
        default: string
        description: Name of the token
        example: Support team token
      filters:
        type: array
        uniqueItems: true
        items:
          type: integer
          format: int32
        description: IDs of filters to attach to the token
        example: [ 339 ]
  UpdateSharedTokenRequest:
    type: object
    required:
      - filters
    properties:
      filters:
        type: array
        uniqueItems: true
        items:
          type: integer
          format: int32
          description: ID of the filter
          example: 339
        description: IDs of filters to attach to the token. To remove all filters, use an empty array `[]`.

  # ::::: SNAPSHOTS DEFINITIONS
  SnapshotCreateResponse:
    type: object
    properties:
      snapshotId:
        type: integer
        format: int32
        description: ID of the snapshot
        example: 2049
  SnapshotCreateRequest:
    type: object
    required:
      - snapshotSavedObjectId
      - snapshotTimeZone
      - snapshotType
      - timeFrameFrom
      - timeFrameTo
    properties:
      snapshotType:
        type: string
        enum:
          - DASHBOARD
          - VISUALIZATION
        description: The object type to share
      snapshotSavedObjectId:
        type: string
        description: ID of the object to share. If you don't know the object ID, you can use the [/kibana/export](#operation/exportSavedObjects) endpoint.
        example: 11f6a669-4f21-6313-dd83-319dbfc8ff96
      slackWebhookUrls:
        type: array
        items:
          type: string
        description: >-
          URLs of Slack webhooks that you want to send this snapshot to.
          <br> At least one of `emails`, `slackWebhookUrls`, and `endpoints` is required with each request.
          If all three are missing, the request will fail.
        example: ["https://hooks.slack.com/services/CC29C43F8/7E6E833FB/Ebe297580E7FaC354F9D4d7"]
      endpoints:
        type: array
        items:
          type: integer
          format: int32
        description: >-
          IDs of notification endpoints that you want to send this snapshot to
          <br> At least one of `emails`, `slackWebhookUrls`, and `endpoints` is required with each request.
          If all three are missing, the request will fail.
      emails:
        type: array
        items:
          type: string
        description: >-
          Email addresses that you want to send this snapshot to
          <br> At least one of `emails`, `slackWebhookUrls`, and `endpoints` is required with each request.
          If all three are missing, the request will fail.
      message:
        type: string
        description: Message to send to the shared object recipients
        example: Take a look at these Apache logs, let me know if you want me to do anything about it
      timeFrameFrom:
        type: integer
        format: int64
        description: Starting timedate of the visualization, as a Unix epoch integer.
        example: 389836800
      timeFrameTo:
        type: integer
        format: int64
        description: Ending timedate of the visualization, as a Unix epoch integer.
        example: 414720000
      snapshotTimeZone:
        type: string
        description: Time zone to use in `timeFrameFrom` and `timeFrameTo`
        example: UTC
      queryString:
        type: string
        description: Search query
        example: "type:example"
      darkTheme:
        type: boolean
        description: To send the object with Kibana dark theme colors, `true`. Otherwise, `false`.
  SnapshotGetResponse:
    type: object
    properties:
      snapshotId:
        type: integer
        format: int32
        description: ID of the snapshot
        example: 3094
      accountId:
        type: integer
        format: int32
        description: ID of the account
        example: 5555
      snapshotType:
        type: string
        enum:
          - DASHBOARD
          - VISUALIZATION
        description: The object type
        example: VISUALIZATION
      status:
        type: string
        enum:
          - SUCCESS
          - FAILED
          - IN_PROGRESS
        description: Status of the snapshot capture operation
        example: SUCCESS
      snapshotSavedObjectName:
        type: string
        description: Name of the object captured in the snapshot
        example: Mysql response times percentiles
      imageUrl:
        type: string
        description: Web address where the snapshot image is stored
        example: https://snapshotter-logzio-prod.s3.amazonaws.com/1234/567890/snapshots/8843_3094_dC6pBjbrWc1lfN7Gob82oJuSUxTGbm8D6hDE1TcR1pVzIVO0TsB3tuZEZs1YpOGh.png
      appLinkUrl:
        type: string
        description: A link to the snapshot in the Logz.io app
        example: https://app.logz.io/#/dashboard/kibana?kibanaRoute=%2Fvisualize%2Fedit%a4d365e001-5bc9-4851-1933-a70b45a67e9d%3F_g%3D%2528time%253A%2528from%253A%25272018-06-02T15
      message:
        type: string
        description: Message to send to snapshot recipients
        example: Hey, let me know if you need me to do anything about this.
      timeFrameFrom:
        type: integer
        format: int64
        description: Starting timedate of the visualization, as a Unix epoch integer.
        example: 389836800
      timeFrameTo:
        type: integer
        format: int64
        description: Ending timedate of the visualization, as a Unix epoch integer.
        example: 414720000
      snapshotTimeZone:
        type: string
        description: Time zone to use in `timeFrameFrom` and `timeFrameTo`
        example: UTC
  SnapshotNotification:
    type: object
    properties:
      id:
        type: integer
        format: int32
      type:
        type: string
        enum:
          - EMAIL
          - SLACK
      address:
        type: string
      status:
        type: string
        enum:
          - PENDING
          - IN_WORK
          - NEED_RETRY
          - FAILED
          - SUCCESS
  SnapshotRequest:
    type: object
    properties:
      id:
        type: integer
        format: int32
      snapshotType:
        type: string
        enum:
          - DASHBOARD
          - VISUALIZATION
          - SAVED_SEARCH
      snapshotSavedObjectName:
        type: string
      snapshotUrl:
        type: string
      appLinkUrl:
        type: string
      recipients:
        type: array
        items:
          $ref: '#/definitions/SnapshotNotification'
      message:
        type: string
      timeFrameFrom:
        type: integer
        format: int64
      timeFrameTo:
        type: integer
        format: int64
      snapshotTimeZone:
        type: string

  # ::::: USER MANAGEMENT DEFINITIONS
  User:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: ID of the user
        example: 33265
      username:
        type: string
        description: Email address used to sign in to Logz.io
        example: steve@winslows.com
      fullName:
        type: string
        description: First and last name of the user
        example: Stefan Urkel
      accountID:
        type: integer
        format: int32
        description: ID of the account attached to the user
        example: 55555
      roles:
        type: array
        items:
          type: integer
          format: int32
        description: For user access, `2`. For admin access, `3`.
        example: [3]
      active:
        type: boolean
        description: If the user is active, `true`. If the user is suspended, `false`.
        example: true
  UserManagementUpsertResponse:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: ID of the user
        example: 13485
  UserManagementUpsertRequest:
    type: object
    required:
      - fullName
      - username
      - roles
      - accountID
    properties:
      username:
        type: string
        pattern: >-
          ^[_A-Za-z0-9-\+]+(\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\.[A-Za-z0-9-]+)*(\.[A-Za-z]{2,})$
        description: Email address used to sign in to Logz.io
        example: drvenkman@gbusters.com
      fullName:
        type: string
        description: The user's first and last name
        example: Peter Venkman
      accountID:
        type: integer
        format: int32
        description: ID of the account attached to the user
      roles:
        type: array
        items:
          type: integer
          format: int32
        description: For user access, `2`. For admin access, `3`.
        example: [2]
